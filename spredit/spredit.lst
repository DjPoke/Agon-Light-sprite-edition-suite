PC     Output            Line Source
040000                   0001 ; spredit.asm
040000                   0002 ;
040000                   0003 ; by B.Vignoli
040000                   0004 ; MIT 2023
040000                   0005 ;
040000                   0006 
040000                   0007 .assume adl=1
040000                   0008 .org $040000
040000                   0009 
040000 C3 4D 00 04       0010 	jp start
040004                   0011 
040004                   0012 ; MOS header
040004 FF FF FF FF FF FF 0013 .align 64
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
040040 4D 4F 53 00 01    0014 .db "MOS",0,1
040045                   0015 
040045                   0016 	include "mos_api.inc"
040045                   0001 ;
040045                   0002 ; Title:	AGON MOS - API for user projects
040045                   0003 ; Author:	Dean Belfield
040045                   0004 ; Created:	03/08/2022
040045                   0005 ; Last Updated:	10/08/2023
040045                   0006 ;
040045                   0007 ; Modinfo:
040045                   0008 ; 05/08/2022:	Added mos_feof
040045                   0009 ; 09/08/2022:	Added system variables: cursorX, cursorY
040045                   0010 ; 18/08/2022:	Added system variables: scrchar, scrpixel, audioChannel, audioSuccess, vpd_pflags
040045                   0011 ; 05/09/2022:	Added mos_ren, vdp_pflag_mode
040045                   0012 ; 24/09/2022:	Added mos_getError, mos_mkdir
040045                   0013 ; 13/10/2022:	Added mos_oscli
040045                   0014 ; 23/02/2023:	Added more sysvars, fixed typo in sysvar_audioSuccess, offsets for sysvar_scrCols, sysvar_scrRows
040045                   0015 ; 04/03/2023:	Added sysvar_scrpixelIndex
040045                   0016 ; 08/03/2023:	Renamed sysvar_keycode to sysvar_keyascii, added sysvar_vkeycode
040045                   0017 ; 15/03/2023:	Added mos_copy, mos_getrtc, mos_setrtc, rtc, vdp_pflag_rtc
040045                   0018 ; 21/03/2023:	Added mos_setintvector, sysvars for keyboard status, vdu codes for vdp
040045                   0019 ; 22/03/2023:	The VDP commands are now indexed from 0x80
040045                   0020 ; 29/03/2023:	Added mos_uopen, mos_uclose, mos_ugetc, mos_uputc
040045                   0021 ; 13/04/2023:	Added FatFS file structures (FFOBJID, FIL, DIR, FILINFO)
040045                   0022 ; 15/04/2023:	Added mos_getfil, mos_fread, mos_fwrite and mos_flseek
040045                   0023 ; 19/05/2023:	Added sysvar_scrMode
040045                   0024 ; 05/06/2023:	Added sysvar_rtcEnable
040045                   0025 ; 03/08/2023:	Added mos_setkbvector
040045                   0026 ; 10/08/2023:	Added mos_getkbmap
040045                   0027 
040045                   0028 ; VDP control (VDU 23, 0, n)
040045                   0029 ;
040045                   0030 vdp_gp:			EQU 	80h
040045                   0031 vdp_keycode:		EQU 	81h
040045                   0032 vdp_cursor:		EQU	82h
040045                   0033 vdp_scrchar:		EQU	83h
040045                   0034 vdp_scrpixel:		EQU	84h
040045                   0035 vdp_audio:		EQU	85h
040045                   0036 vdp_mode:		EQU	86h
040045                   0037 vdp_rtc:		EQU	87h
040045                   0038 vdp_keystate:		EQU	88h
040045                   0039 vdp_logicalcoords:	EQU	C0h
040045                   0040 vdp_terminalmode:	EQU	FFh
040045                   0041 
040045                   0042 ; MOS high level functions
040045                   0043 ;
040045                   0044 mos_getkey:		EQU	00h
040045                   0045 mos_load:		EQU	01h
040045                   0046 mos_save:		EQU	02h
040045                   0047 mos_cd:			EQU	03h
040045                   0048 mos_dir:		EQU	04h
040045                   0049 mos_del:		EQU	05h
040045                   0050 mos_ren:		EQU	06h
040045                   0051 mos_mkdir:		EQU	07h
040045                   0052 mos_sysvars:		EQU	08h
040045                   0053 mos_editline:		EQU	09h
040045                   0054 mos_fopen:		EQU	0Ah
040045                   0055 mos_fclose:		EQU	0Bh
040045                   0056 mos_fgetc:		EQU	0Ch
040045                   0057 mos_fputc:		EQU	0Dh
040045                   0058 mos_feof:		EQU	0Eh
040045                   0059 mos_getError:		EQU	0Fh
040045                   0060 mos_oscli:		EQU	10h
040045                   0061 mos_copy:		EQU	11h
040045                   0062 mos_getrtc:		EQU	12h
040045                   0063 mos_setrtc:		EQU	13h
040045                   0064 mos_setintvector:	EQU	14h
040045                   0065 mos_uopen:		EQU	15h
040045                   0066 mos_uclose:		EQU	16h
040045                   0067 mos_ugetc:		EQU	17h
040045                   0068 mos_uputc:		EQU 	18h
040045                   0069 mos_getfil:		EQU	19h
040045                   0070 mos_fread:		EQU	1Ah
040045                   0071 mos_fwrite:		EQU	1Bh
040045                   0072 mos_flseek:		EQU	1Ch
040045                   0073 mos_setkbvector:	EQU	1Dh
040045                   0074 mos_getkbmap:		EQU	1Eh
040045                   0075 
040045                   0076 ; FatFS file access functions
040045                   0077 ;
040045                   0078 ffs_fopen:		EQU	80h
040045                   0079 ffs_fclose:		EQU	81h
040045                   0080 ffs_fread:		EQU	82h
040045                   0081 ffs_fwrite:		EQU	83h
040045                   0082 ffs_flseek:		EQU	84h
040045                   0083 ffs_ftruncate:		EQU	85h
040045                   0084 ffs_fsync:		EQU	86h
040045                   0085 ffs_fforward:		EQU	87h
040045                   0086 ffs_fexpand:		EQU	88h
040045                   0087 ffs_fgets:		EQU	89h
040045                   0088 ffs_fputc:		EQU	8Ah
040045                   0089 ffs_fputs:		EQU	8Bh
040045                   0090 ffs_fprintf:		EQU	8Ch
040045                   0091 ffs_ftell:		EQU	8Dh
040045                   0092 ffs_feof:		EQU	8Eh
040045                   0093 ffs_fsize:		EQU	8Fh
040045                   0094 ffs_ferror:		EQU	90h
040045                   0095 
040045                   0096 ; FatFS directory access functions
040045                   0097 ;
040045                   0098 ffs_dopen:		EQU	91h
040045                   0099 ffs_dclose:		EQU	92h
040045                   0100 ffs_dread:		EQU	93h
040045                   0101 ffs_dfindfirst:		EQU	94h
040045                   0102 ffs_dfindnext:		EQU	95h
040045                   0103 
040045                   0104 ; FatFS file and directory management functions
040045                   0105 ;
040045                   0106 ffs_stat:		EQU	96h
040045                   0107 ffs_unlink:		EQU	97h
040045                   0108 ffs_rename:		EQU	98h
040045                   0109 ffs_chmod:		EQU	99h
040045                   0110 ffs_utime:		EQU	9Ah
040045                   0111 ffs_mkdir:		EQU	9Bh
040045                   0112 ffs_chdir:		EQU	9Ch
040045                   0113 ffs_chdrive:		EQU	9Dh
040045                   0114 ffs_getcwd:		EQU	9Eh
040045                   0115 
040045                   0116 ; FatFS volume management and system configuration functions
040045                   0117 ;
040045                   0118 ffs_mount:		EQU	9Fh
040045                   0119 ffs_mkfs:		EQU	A0h
040045                   0120 ffs_fdisk:		EQU	A1h
040045                   0121 ffs_getfree:		EQU	A2h
040045                   0122 ffs_getlabel:		EQU	A3h
040045                   0123 ffs_setlabel:		EQU	A4h
040045                   0124 ffs_setcp:		EQU	A5h
040045                   0125 
040045                   0126 ; File access modes
040045                   0127 ;
040045                   0128 fa_read:		EQU	01h
040045                   0129 fa_write:		EQU	02h
040045                   0130 fa_open_existing:	EQU	00h
040045                   0131 fa_create_new:		EQU	04h
040045                   0132 fa_create_always:	EQU	08h
040045                   0133 fa_open_always:		EQU	10h
040045                   0134 fa_open_append:		EQU	30h
040045                   0135 
040045                   0136 ; System variable indexes for api_sysvars
040045                   0137 ; Index into _sysvars in globals.asm
040045                   0138 ;
040045                   0139 sysvar_time:		EQU	00h	; 4: Clock timer in centiseconds (incremented by 2 every VBLANK)
040045                   0140 sysvar_vpd_pflags:	EQU	04h	; 1: Flags to indicate completion of VDP commands
040045                   0141 sysvar_keyascii:	EQU	05h	; 1: ASCII keycode, or 0 if no key is pressed
040045                   0142 sysvar_keymods:		EQU	06h	; 1: Keycode modifiers
040045                   0143 sysvar_cursorX:		EQU	07h	; 1: Cursor X position
040045                   0144 sysvar_cursorY:		EQU	08h	; 1: Cursor Y position
040045                   0145 sysvar_scrchar:		EQU	09h	; 1: Character read from screen
040045                   0146 sysvar_scrpixel:	EQU	0Ah	; 3: Pixel data read from screen (R,B,G)
040045                   0147 sysvar_audioChannel:	EQU	0Dh	; 1: Audio channel
040045                   0148 sysvar_audioSuccess:	EQU	0Eh	; 1: Audio channel note queued (0 = no, 1 = yes)
040045                   0149 sysvar_scrWidth:	EQU	0Fh	; 2: Screen width in pixels
040045                   0150 sysvar_scrHeight:	EQU	11h	; 2: Screen height in pixels
040045                   0151 sysvar_scrCols:		EQU	13h	; 1: Screen columns in characters
040045                   0152 sysvar_scrRows:		EQU	14h	; 1: Screen rows in characters
040045                   0153 sysvar_scrColours:	EQU	15h	; 1: Number of colours displayed
040045                   0154 sysvar_scrpixelIndex:	EQU	16h	; 1: Index of pixel data read from screen
040045                   0155 sysvar_vkeycode:	EQU	17h	; 1: Virtual key code from FabGL
040045                   0156 sysvar_vkeydown:	EQU	18h	; 1: Virtual key state from FabGL (0=up, 1=down)
040045                   0157 sysvar_vkeycount:	EQU	19h	; 1: Incremented every time a key packet is received
040045                   0158 sysvar_rtc:		EQU	1Ah	; 6: Real time clock data
040045                   0159 sysvar_spare:		EQU	20h	; 2: Spare, previously used by rtc
040045                   0160 sysvar_keydelay:	EQU	22h	; 2: Keyboard repeat delay
040045                   0161 sysvar_keyrate:		EQU	24h	; 2: Keyboard repeat reat
040045                   0162 sysvar_keyled:		EQU	26h	; 1: Keyboard LED status
040045                   0163 sysvar_scrMode:		EQU	27h	; 1: Screen mode
040045                   0164 sysvar_rtcEnable:	EQU	28h	; 1: RTC enable flag (0: disabled, 1: use ESP32 RTC)
040045                   0165 
040045                   0166 ; Flags for the VPD protocol
040045                   0167 ;
040045                   0168 vdp_pflag_cursor:	EQU	00000001b
040045                   0169 vdp_pflag_scrchar:	EQU	00000010b
040045                   0170 vdp_pflag_point:	EQU	00000100b
040045                   0171 vdp_pflag_audio:	EQU	00001000b
040045                   0172 vdp_pflag_mode:		EQU	00010000b
040045                   0173 vdp_pflag_rtc:		EQU	00100000b
040045                   0174 
040045                   0175 ;
040045                   0176 ; Macro for calling the API
040045                   0177 ; Parameters:
040045                   0178 ; - function: One of the function numbers listed above
040045                   0179 ;
040045                   0180 	MACRO moscall function
040045                   0181 		LD	A, function
040045                   0182 		RST.LIS	08h
040045                   0183 	ENDMACRO
040045                   0184 
040045                   0185 	MACRO vdu function
040045                   0186 		LD	A, function
040045                   0187 		RST.LIS	10h
040045                   0188 	ENDMACRO
040045                   0189 
040045                   0190 	MACRO vdu_a
040045                   0191 		RST.LIS	10h
040045                   0192 	ENDMACRO
040045                   0017 
040045                   0018 MAX_COLORS:		 	equ 64
040045                   0019 COLOR_MIN:	 		equ 0
040045                   0020 COLOR_MAX:	 		equ 63
040045                   0021 
040045                   0022 MAX_FRAMES:			equ 8
040045                   0023 
040045                   0024 COLOR_WHITE:		equ 15
040045                   0025 COLOR_GREY:			equ 7
040045                   0026 COLOR_BLACK:		equ 0
040045                   0027 
040045                   0028 TITLE_X: 	equ 17
040045                   0029 TITLE_Y: 	equ 2
040045                   0030 MENU_X: 	equ 13
040045                   0031 MENU1_Y: 	equ 8
040045                   0032 MENU2_Y: 	equ 12
040045                   0033 MENU3_Y: 	equ 16
040045                   0034 MENU4_Y: 	equ 20
040045                   0035 MENU5_Y: 	equ 24
040045                   0036 FILENAME_X: equ 7
040045                   0037 FILENAME_Y: equ 24
040045                   0038 
040045                   0039 SPR44: 		equ 4
040045                   0040 SPR88: 		equ 8
040045                   0041 SPR1616: 	equ 16
040045                   0042 SPR3232: 	equ 32
040045                   0043 
040045                   0044 SPR44_width: 	equ 32
040045                   0045 SPR88_width: 	equ 16
040045                   0046 SPR1616_width: 	equ 8
040045                   0047 SPR3232_width: 	equ 4
040045                   0048 
040045                   0049 BUFFER_SIZE:			equ 8192 ; 8 frames
040045                   0050 ONE_FRAME_BUFFER_SIZE:	equ 1024
040045                   0051 
040045                   0052 SLOWDOWN_DELAY:	equ 20
040045                   0053 
040045                   0054 KEY_SPACE: equ -99
040045                   0055 KEY_UP: equ -58
040045                   0056 KEY_DOWN: equ -42
040045                   0057 KEY_LEFT: equ -26
040045                   0058 KEY_RIGHT: equ -122
040045                   0059 KEY_DELETE: equ -90
040045                   0060 KEY_TAB: equ -97
040045                   0061 KEY_N: equ -86
040045                   0062 KEY_C: equ -83
040045                   0063 KEY_BACKSPACE: equ -48
040045                   0064 KEY_PGUP: equ -64
040045                   0065 KEY_PGDOWN: equ -79
040045                   0066 KEY_L: equ -87
040045                   0067 KEY_S: equ -82
040045                   0068 KEY_R: equ -52
040045                   0069 KEY_F: equ -68
040045                   0070 KEY_M: equ -102
040045                   0071 KEY_ESCAPE: equ -113
040045                   0072 KEY_F1: equ -114
040045                   0073 KEY_F2: equ -115
040045                   0074 KEY_F3: equ -116
040045                   0075 KEY_F4: equ -21
040045                   0076 
040045                   0077 BITLOOKUP:
040045 01 02 04 08       0078 	DB 01h,02h,04h,08h
040049 10 20 40 80       0079 	DB 10h,20h,40h,80h
04004D                   0080 
04004D                   0081 ;======================================================================
04004D                   0082 start:
04004D F5                0083 	push af
04004E C5                0084 	push bc
04004F D5                0085 	push de
040050 DD E5             0086 	push ix
040052 FD E5             0087 	push iy
040054                   0088 
040054                   0089 	; set mode 8 (320x240x64)
040054                   0090 	vdu 22
040054 3E 16             0090 		LD	A, function
040056 49 D7             0090 		RST.LIS	10h
040058                   0091 	vdu 8
040058 3E 08             0091 		LD	A, function
04005A 49 D7             0091 		RST.LIS	10h
04005C                   0092 
04005C                   0093 	; set logical coordinates system
04005C                   0094 	vdu 23
04005C 3E 17             0094 		LD	A, function
04005E 49 D7             0094 		RST.LIS	10h
040060                   0095 	vdu 0
040060 3E 00             0095 		LD	A, function
040062 49 D7             0095 		RST.LIS	10h
040064                   0096 	vdu $c0
040064 3E C0             0096 		LD	A, function
040066 49 D7             0096 		RST.LIS	10h
040068                   0097 	vdu 0
040068 3E 00             0097 		LD	A, function
04006A 49 D7             0097 		RST.LIS	10h
04006C                   0098 
04006C                   0099 	; set text colors
04006C                   0100 	vdu 17
04006C 3E 11             0100 		LD	A, function
04006E 49 D7             0100 		RST.LIS	10h
040070                   0101 	vdu 128 ; black background
040070 3E 80             0101 		LD	A, function
040072 49 D7             0101 		RST.LIS	10h
040074                   0102 
040074                   0103 	vdu 17
040074 3E 11             0103 		LD	A, function
040076 49 D7             0103 		RST.LIS	10h
040078                   0104 	vdu COLOR_WHITE ; white pen
040078 3E 0F             0104 		LD	A, function
04007A 49 D7             0104 		RST.LIS	10h
04007C                   0105 
04007C                   0106 	; set graphics pen
04007C                   0107 	vdu 18
04007C 3E 12             0107 		LD	A, function
04007E 49 D7             0107 		RST.LIS	10h
040080                   0108 	vdu 0
040080 3E 00             0108 		LD	A, function
040082 49 D7             0108 		RST.LIS	10h
040084                   0109 	vdu COLOR_WHITE ; white pen
040084 3E 0F             0109 		LD	A, function
040086 49 D7             0109 		RST.LIS	10h
040088                   0110 
040088                   0111 	; hide cursor
040088                   0112 	vdu 23
040088 3E 17             0112 		LD	A, function
04008A 49 D7             0112 		RST.LIS	10h
04008C                   0113 	vdu 1
04008C 3E 01             0113 		LD	A, function
04008E 49 D7             0113 		RST.LIS	10h
040090                   0114 	vdu 0
040090 3E 00             0114 		LD	A, function
040092 49 D7             0114 		RST.LIS	10h
040094                   0115 
040094                   0116 	; store coordinates
040094 DD 21 78 10 04    0117 	ld ix,x1
040099 21 00 00 00       0118 	ld hl,0
04009D DD 75 00          0119 	ld (ix+0),l
0400A0 DD 74 01          0120 	ld (ix+1),h
0400A3                   0121 
0400A3 DD 21 7A 10 04    0122 	ld ix,y1
0400A8 21 00 00 00       0123 	ld hl,0
0400AC DD 75 00          0124 	ld (ix+0),l
0400AF DD 74 01          0125 	ld (ix+1),h
0400B2                   0126 
0400B2 DD 21 7C 10 04    0127 	ld ix,x2
0400B7 21 3F 01 00       0128 	ld hl,319
0400BB DD 75 00          0129 	ld (ix+0),l
0400BE DD 74 01          0130 	ld (ix+1),h
0400C1                   0131 
0400C1 DD 21 7E 10 04    0132 	ld ix,y2
0400C6 21 EF 00 00       0133 	ld hl,239
0400CA DD 75 00          0134 	ld (ix+0),l
0400CD DD 74 01          0135 	ld (ix+1),h
0400D0                   0136 
0400D0                   0137 	; draw the border rectangle
0400D0 CD FA 08 04       0138 	call fn_rect
0400D4                   0139 
0400D4                   0140 	; locate x,y
0400D4                   0141 	vdu 31
0400D4 3E 1F             0141 		LD	A, function
0400D6 49 D7             0141 		RST.LIS	10h
0400D8                   0142 	vdu TITLE_X
0400D8 3E 11             0142 		LD	A, function
0400DA 49 D7             0142 		RST.LIS	10h
0400DC                   0143 	vdu TITLE_Y
0400DC 3E 02             0143 		LD	A, function
0400DE 49 D7             0143 		RST.LIS	10h
0400E0                   0144 
0400E0                   0145 	; print text
0400E0 21 8D 10 04       0146 	ld hl,title
0400E4 01 00 00 00       0147 	ld bc,0
0400E8 AF                0148 	xor a
0400E9 49 DF             0149 	rst.lis $18
0400EB                   0150 
0400EB                   0151 	; locate x,y
0400EB                   0152 	vdu 31
0400EB 3E 1F             0152 		LD	A, function
0400ED 49 D7             0152 		RST.LIS	10h
0400EF                   0153 	vdu MENU_X
0400EF 3E 0D             0153 		LD	A, function
0400F1 49 D7             0153 		RST.LIS	10h
0400F3                   0154 	vdu MENU1_Y
0400F3 3E 08             0154 		LD	A, function
0400F5 49 D7             0154 		RST.LIS	10h
0400F7                   0155 
0400F7                   0156 	; print text
0400F7 21 96 10 04       0157 	ld hl,menu1
0400FB 01 00 00 00       0158 	ld bc,0
0400FF AF                0159 	xor a
040100 49 DF             0160 	rst.lis $18
040102                   0161 
040102                   0162 	; locate x,y
040102                   0163 	vdu 31
040102 3E 1F             0163 		LD	A, function
040104 49 D7             0163 		RST.LIS	10h
040106                   0164 	vdu MENU_X
040106 3E 0D             0164 		LD	A, function
040108 49 D7             0164 		RST.LIS	10h
04010A                   0165 	vdu MENU2_Y
04010A 3E 0C             0165 		LD	A, function
04010C 49 D7             0165 		RST.LIS	10h
04010E                   0166 
04010E                   0167 	; print text
04010E 21 A5 10 04       0168 	ld hl,menu2
040112 01 00 00 00       0169 	ld bc,0
040116 AF                0170 	xor a
040117 49 DF             0171 	rst.lis $18
040119                   0172 
040119                   0173 	; locate x,y
040119                   0174 	vdu 31
040119 3E 1F             0174 		LD	A, function
04011B 49 D7             0174 		RST.LIS	10h
04011D                   0175 	vdu MENU_X
04011D 3E 0D             0175 		LD	A, function
04011F 49 D7             0175 		RST.LIS	10h
040121                   0176 	vdu MENU3_Y
040121 3E 10             0176 		LD	A, function
040123 49 D7             0176 		RST.LIS	10h
040125                   0177 
040125                   0178 	; print text
040125 21 B4 10 04       0179 	ld hl,menu3
040129 01 00 00 00       0180 	ld bc,0
04012D AF                0181 	xor a
04012E 49 DF             0182 	rst.lis $18
040130                   0183 
040130                   0184 	; locate x,y
040130                   0185 	vdu 31
040130 3E 1F             0185 		LD	A, function
040132 49 D7             0185 		RST.LIS	10h
040134                   0186 	vdu MENU_X
040134 3E 0D             0186 		LD	A, function
040136 49 D7             0186 		RST.LIS	10h
040138                   0187 	vdu MENU4_Y
040138 3E 14             0187 		LD	A, function
04013A 49 D7             0187 		RST.LIS	10h
04013C                   0188 
04013C                   0189 	; print text
04013C 21 C5 10 04       0190 	ld hl,menu4
040140 01 00 00 00       0191 	ld bc,0
040144 AF                0192 	xor a
040145 49 DF             0193 	rst.lis $18
040147                   0194 
040147                   0195 ; menu loop
040147                   0196 menu_loop:
040147 21 8F FF FF       0197 	ld hl,KEY_ESCAPE
04014B CD 47 10 04       0198 	call fn_inkey
04014F FE 01             0199 	CP 1
040151 CA D6 08 04       0200 	jp z,exit_program
040155                   0201 
040155 21 8E FF FF       0202 	ld hl,KEY_F1
040159 CD 47 10 04       0203 	call fn_inkey
04015D FE 01             0204 	CP 1
04015F CA 91 01 04       0205 	jp z,ml_menu1
040163                   0206 
040163 21 8D FF FF       0207 	ld hl,KEY_F2
040167 CD 47 10 04       0208 	call fn_inkey
04016B FE 01             0209 	CP 1
04016D CA 97 01 04       0210 	jp z,ml_menu2
040171                   0211 
040171 21 8C FF FF       0212 	ld hl,KEY_F3
040175 CD 47 10 04       0213 	call fn_inkey
040179 FE 01             0214 	CP 1
04017B CA 9D 01 04       0215 	jp z,ml_menu3
04017F                   0216 
04017F 21 EB FF FF       0217 	ld hl,KEY_F4
040183 CD 47 10 04       0218 	call fn_inkey
040187 FE 01             0219 	CP 1
040189 CA A3 01 04       0220 	jp z,ml_menu4
04018D                   0221 
04018D C3 47 01 04       0222 	jp menu_loop
040191                   0223 
040191                   0224 ml_menu1:
040191 3E 04             0225 	ld a,SPR44
040193 16 20             0226 	ld d,SPR44_width
040195 18 10             0227 	jr exit_menu_loop
040197                   0228 
040197                   0229 ml_menu2:
040197 3E 08             0230 	ld a,SPR88
040199 16 10             0231 	ld d,SPR88_width
04019B 18 0A             0232 	jr exit_menu_loop
04019D                   0233 
04019D                   0234 ml_menu3:
04019D 3E 10             0235 	ld a,SPR1616
04019F 16 08             0236 	ld d,SPR1616_width
0401A1 18 04             0237 	jr exit_menu_loop
0401A3                   0238 
0401A3                   0239 ml_menu4:
0401A3 3E 20             0240 	ld a,SPR3232
0401A5 16 04             0241 	ld d,SPR3232_width
0401A7                   0242 
0401A7                   0243 exit_menu_loop:
0401A7                   0244 	; store edited sprite size
0401A7 21 8B 10 04       0245 	ld hl,spr_size
0401AB 77                0246 	ld (hl),a
0401AC 21 8A 10 04       0247 	ld hl,pixel_width
0401B0 72                0248 	ld (hl),d
0401B1                   0249 
0401B1                   0250 	; clear the text screen
0401B1                   0251 	vdu 12
0401B1 3E 0C             0251 		LD	A, function
0401B3 49 D7             0251 		RST.LIS	10h
0401B5                   0252 
0401B5                   0253 	; draw the palette
0401B5 0E 00             0254 	ld c,0
0401B7                   0255 
0401B7                   0256 palette_loop:
0401B7 C5                0257 	push bc
0401B8                   0258 
0401B8                   0259 	; choose palette color
0401B8                   0260 	vdu 18
0401B8 3E 12             0260 		LD	A, function
0401BA 49 D7             0260 		RST.LIS	10h
0401BC                   0261 	vdu 0
0401BC 3E 00             0261 		LD	A, function
0401BE 49 D7             0261 		RST.LIS	10h
0401C0 C1                0262 	pop bc
0401C1 C5                0263 	push bc
0401C2 79                0264 	ld a,c
0401C3                   0265 	vdu_a
0401C3 49 D7             0265 		RST.LIS	10h
0401C5                   0266 
0401C5                   0267 	; store coordinates for a palette square
0401C5 DD 21 78 10 04    0268 	ld ix,x1
0401CA E1                0269 	pop hl
0401CB E5                0270 	push hl
0401CC 26 05             0271 	ld h,5
0401CE ED 6C             0272 	mlt hl
0401D0 E5                0273 	push hl
0401D1 DD 75 00          0274 	ld (ix+0),l
0401D4 DD 74 01          0275 	ld (ix+1),h
0401D7                   0276 
0401D7 DD 21 7A 10 04    0277 	ld ix,y1
0401DC 21 00 00 00       0278 	ld hl,0
0401E0 DD 75 00          0279 	ld (ix+0),l
0401E3 DD 74 01          0280 	ld (ix+1),h
0401E6                   0281 
0401E6 DD 21 7C 10 04    0282 	ld ix,x2
0401EB E1                0283 	pop hl
0401EC 11 04 00 00       0284 	ld de,4
0401F0 19                0285 	add hl,de
0401F1 DD 75 00          0286 	ld (ix+0),l
0401F4 DD 74 01          0287 	ld (ix+1),h
0401F7                   0288 
0401F7 DD 21 7E 10 04    0289 	ld ix,y2
0401FC 21 0A 00 00       0290 	ld hl,10
040200 DD 75 00          0291 	ld (ix+0),l
040203 DD 74 01          0292 	ld (ix+1),h
040206                   0293 
040206                   0294 	; draw the palette filled square
040206 CD B9 09 04       0295 	call fn_rectf
04020A                   0296 
04020A                   0297 	; next color ?
04020A C1                0298 	pop bc
04020B 0C                0299 	inc c
04020C 79                0300 	ld a,c
04020D FE 40             0301 	cp MAX_COLORS
04020F C2 B7 01 04       0302 	jp nz,palette_loop
040213                   0303 
040213                   0304 	; store coordinates
040213 DD 21 78 10 04    0305 	ld ix,x1
040218 21 00 00 00       0306 	ld hl,0
04021C DD 75 00          0307 	ld (ix+0),l
04021F DD 74 01          0308 	ld (ix+1),h
040222                   0309 
040222 DD 21 7A 10 04    0310 	ld ix,y1
040227 21 0B 00 00       0311 	ld hl,11
04022B DD 75 00          0312 	ld (ix+0),l
04022E DD 74 01          0313 	ld (ix+1),h
040231                   0314 
040231 DD 21 7C 10 04    0315 	ld ix,x2
040236 21 3F 01 00       0316 	ld hl,319
04023A DD 75 00          0317 	ld (ix+0),l
04023D DD 74 01          0318 	ld (ix+1),h
040240                   0319 
040240 DD 21 7E 10 04    0320 	ld ix,y2
040245 21 EF 00 00       0321 	ld hl,239
040249 DD 75 00          0322 	ld (ix+0),l
04024C DD 74 01          0323 	ld (ix+1),h
04024F                   0324 
04024F                   0325 	; draw the border rectangle
04024F CD FA 08 04       0326 	call fn_rect
040253                   0327 
040253                   0328 	; store edited sprite coordinates
040253 DD 21 80 10 04    0329 	ld ix,xs1
040258 FD 21 78 10 04    0330 	ld iy,x1
04025D DD 6E 00          0331 	ld l,(ix+0)
040260 DD 66 01          0332 	ld h,(ix+1)
040263 FD 75 00          0333 	ld (iy+0),l
040266 FD 74 01          0334 	ld (iy+1),h
040269                   0335 
040269 DD 21 82 10 04    0336 	ld ix,ys1
04026E FD 21 7A 10 04    0337 	ld iy,y1
040273 DD 6E 00          0338 	ld l,(ix+0)
040276 DD 66 01          0339 	ld h,(ix+1)
040279 FD 75 00          0340 	ld (iy+0),l
04027C FD 74 01          0341 	ld (iy+1),h
04027F                   0342 
04027F DD 21 84 10 04    0343 	ld ix,xs2
040284 FD 21 7C 10 04    0344 	ld iy,x2
040289 DD 6E 00          0345 	ld l,(ix+0)
04028C DD 66 01          0346 	ld h,(ix+1)
04028F FD 75 00          0347 	ld (iy+0),l
040292 FD 74 01          0348 	ld (iy+1),h
040295                   0349 
040295 DD 21 86 10 04    0350 	ld ix,ys2
04029A FD 21 7E 10 04    0351 	ld iy,y2
04029F DD 6E 00          0352 	ld l,(ix+0)
0402A2 DD 66 01          0353 	ld h,(ix+1)
0402A5 FD 75 00          0354 	ld (iy+0),l
0402A8 FD 74 01          0355 	ld (iy+1),h
0402AB                   0356 
0402AB                   0357 	; draw the sprite's border rectangle
0402AB CD FA 08 04       0358 	call fn_rect
0402AF                   0359 
0402AF                   0360 	; update sprite size descriptions
0402AF CD E3 0F 04       0361 	call fn_show_spr_descr
0402B3                   0362 
0402B3                   0363 ; initialize sprite vars
0402B3                   0364 init_sprite_vars:
0402B3                   0365 	; initialize coordinates before drawing the sprite
0402B3 DD 21 88 10 04    0366 	ld ix,xpix
0402B8 AF                0367 	xor a
0402B9 DD 77 00          0368 	ld (ix+0),a ; xpix = 0
0402BC DD 77 01          0369 	ld (ix+1),a	; ypix = 0
0402BF DD 21 8C 10 04    0370 	ld ix,current_pen
0402C4 3E 0F             0371 	ld a,COLOR_WHITE
0402C6 DD 77 00          0372 	ld (ix+0),a ; current pen -> white
0402C9                   0373 
0402C9                   0374 	; set vars
0402C9 21 5C 11 04       0375 	ld hl,colors_count
0402CD 3E 40             0376 	ld a,MAX_COLORS
0402CF 77                0377 	ld (hl),a
0402D0 21 5D 11 04       0378 	ld hl,current_frame
0402D4 AF                0379 	xor a
0402D5 77                0380 	ld (hl),a
0402D6 3C                0381 	inc a
0402D7 21 5E 11 04       0382 	ld hl,frames_count
0402DB 77                0383 	ld (hl),a
0402DC                   0384 
0402DC                   0385 	; fill buffers with zeros
0402DC 01 00 20 00       0386 	ld bc,BUFFER_SIZE
0402E0 21 66 11 04       0387 	ld hl,sprite_buffer
0402E4                   0388 
0402E4                   0389 isv_fill_loop:
0402E4 AF                0390 	xor a
0402E5 77                0391 	ld (hl),a
0402E6 0B                0392 	dec bc
0402E7 23                0393 	inc hl
0402E8 78                0394 	ld a,b
0402E9 B1                0395 	or c
0402EA FE 00             0396 	cp 0
0402EC 20 F6             0397 	jr nz,isv_fill_loop
0402EE                   0398 
0402EE                   0399 ; draw the pixel with a border
0402EE CD 87 0A 04       0400 	call fn_draw_pixel_with_border
0402F2                   0401 
0402F2                   0402 ; draw sprite loop
0402F2                   0403 draw_sprite_loop:
0402F2 21 9D FF FF       0404 	ld hl,KEY_SPACE
0402F6 CD 47 10 04       0405 	call fn_inkey
0402FA FE 01             0406 	cp 1
0402FC CC F2 03 04       0407 	call z,dsl_set_pen
040300                   0408 
040300 21 C6 FF FF       0409 	ld hl,KEY_UP
040304 CD 47 10 04       0410 	call fn_inkey
040308 FE 01             0411 	cp 1
04030A CC 17 04 04       0412 	call z,dsl_up
04030E                   0413 
04030E 21 D6 FF FF       0414 	ld hl,KEY_DOWN
040312 CD 47 10 04       0415 	call fn_inkey
040316 FE 01             0416 	cp 1
040318 CC 3E 04 04       0417 	call z,dsl_down
04031C                   0418 
04031C 21 E6 FF FF       0419 	ld hl,KEY_LEFT
040320 CD 47 10 04       0420 	call fn_inkey
040324 FE 01             0421 	cp 1
040326 CC 6A 04 04       0422 	call z,dsl_left
04032A                   0423 
04032A 21 86 FF FF       0424 	ld hl,KEY_RIGHT
04032E CD 47 10 04       0425 	call fn_inkey
040332 FE 01             0426 	cp 1
040334 CC 91 04 04       0427 	call z,dsl_right
040338                   0428 
040338 21 A6 FF FF       0429 	ld hl,KEY_DELETE
04033C CD 47 10 04       0430 	call fn_inkey
040340 FE 01             0431 	cp 1
040342 CC 06 04 04       0432 	call z,dsl_reset_pen
040346                   0433 
040346 21 9F FF FF       0434 	ld hl,KEY_TAB
04034A CD 47 10 04       0435 	call fn_inkey
04034E FE 01             0436 	cp 1
040350 CA 9E 07 04       0437 	jp z,dsl_palette_tool
040354                   0438 
040354 21 AA FF FF       0439 	ld hl,KEY_N
040358 CD 47 10 04       0440 	call fn_inkey
04035C FE 01             0441 	cp 1
04035E CC F7 04 04       0442 	call z,dsl_add_frame
040362                   0443 
040362 21 AD FF FF       0444 	ld hl,KEY_C
040366 CD 47 10 04       0445 	call fn_inkey
04036A FE 01             0446 	cp 1
04036C CC 8E 05 04       0447 	call z,dsl_add_and_copy_frame
040370                   0448 
040370 21 D0 FF FF       0449 	ld hl,KEY_BACKSPACE
040374 CD 47 10 04       0450 	call fn_inkey
040378 FE 01             0451 	cp 1
04037A CC F5 05 04       0452 	call z,dsl_delete_frame
04037E                   0453 
04037E 21 C0 FF FF       0454 	ld hl,KEY_PGUP
040382 CD 47 10 04       0455 	call fn_inkey
040386 FE 01             0456 	cp 1
040388 CC EE 06 04       0457 	call z,dsl_next_frame
04038C                   0458 
04038C 21 B1 FF FF       0459 	ld hl,KEY_PGDOWN
040390 CD 47 10 04       0460 	call fn_inkey
040394 FE 01             0461 	cp 1
040396 CC CF 06 04       0462 	call z,dsl_previous_frame
04039A                   0463 
04039A 21 A9 FF FF       0464 	ld hl,KEY_L
04039E CD 47 10 04       0465 	call fn_inkey
0403A2 FE 01             0466 	cp 1
0403A4 CC BD 04 04       0467 	call z,dsl_load_sprite
0403A8                   0468 
0403A8 21 AE FF FF       0469 	ld hl,KEY_S
0403AC CD 47 10 04       0470 	call fn_inkey
0403B0 FE 01             0471 	cp 1
0403B2 CC DE 04 04       0472 	call z,dsl_save_sprite
0403B6                   0473 
0403B6 21 CC FF FF       0474 	ld hl,KEY_R
0403BA CD 47 10 04       0475 	call fn_inkey
0403BE FE 01             0476 	cp 1
0403C0 CC 14 07 04       0477 	call z,dsl_rotate_frame
0403C4                   0478 
0403C4 21 BC FF FF       0479 	ld hl,KEY_F
0403C8 CD 47 10 04       0480 	call fn_inkey
0403CC FE 01             0481 	cp 1
0403CE CC 25 07 04       0482 	call z,dsl_flip_frame
0403D2                   0483 
0403D2 21 9A FF FF       0484 	ld hl,KEY_M
0403D6 CD 47 10 04       0485 	call fn_inkey
0403DA FE 01             0486 	cp 1
0403DC CC 8D 07 04       0487 	call z,dsl_mirror_frame
0403E0                   0488 
0403E0 21 8F FF FF       0489 	ld hl,KEY_ESCAPE
0403E4 CD 47 10 04       0490 	call fn_inkey
0403E8 FE 01             0491 	cp 1
0403EA CA D6 08 04       0492 	jp z,exit_program
0403EE                   0493 
0403EE C3 F2 02 04       0494 	jp draw_sprite_loop
0403F2                   0495 
0403F2                   0496 ; set the pen of the current pixel
0403F2                   0497 dsl_set_pen:
0403F2 CD B1 0A 04       0498 	call fn_get_pixel_color
0403F6 21 8C 10 04       0499 	ld hl,current_pen
0403FA BE                0500 	cp (hl)
0403FB C8                0501 	ret z
0403FC 7E                0502 	ld a,(hl)
0403FD CD F3 0A 04       0503 	call fn_set_pixel_color
040401 CD 87 0A 04       0504 	call fn_draw_pixel_with_border
040405 C9                0505 	ret
040406                   0506 
040406                   0507 ; reset the pen of the current pixel
040406                   0508 dsl_reset_pen:
040406 CD B1 0A 04       0509 	call fn_get_pixel_color
04040A FE 00             0510 	cp 0
04040C C8                0511 	ret z
04040D AF                0512 	xor a
04040E CD F3 0A 04       0513 	call fn_set_pixel_color
040412 CD 87 0A 04       0514 	call fn_draw_pixel_with_border
040416 C9                0515 	ret
040417                   0516 
040417                   0517 ; move pixel up
040417                   0518 dsl_up:
040417 21 89 10 04       0519 	ld hl,ypix
04041B 7E                0520 	ld a,(hl)
04041C FE 00             0521 	cp 0
04041E C8                0522 	ret z
04041F                   0523 
04041F 21 9D FF FF       0524 	ld hl,KEY_SPACE
040423 CD 47 10 04       0525 	call fn_inkey
040427 FE 01             0526 	cp 1
040429 CC F2 03 04       0527 	call z,dsl_set_pen
04042D                   0528 
04042D CD 9B 0A 04       0529 	call fn_draw_pixel_without_border
040431 CD 37 0B 04       0530 	call fn_move_up
040435 CD 87 0A 04       0531 	call fn_draw_pixel_with_border
040439 CD C2 0F 04       0532 	call fn_slowdown
04043D C9                0533 	ret
04043E                   0534 
04043E                   0535 ; move pixel down
04043E                   0536 dsl_down:
04043E 21 8B 10 04       0537 	ld hl,spr_size
040442 56                0538 	ld d,(hl)
040443 15                0539 	dec d
040444                   0540 
040444 21 89 10 04       0541 	ld hl,ypix
040448 7E                0542 	ld a,(hl)
040449 BA                0543 	cp d
04044A C8                0544 	ret z
04044B                   0545 
04044B 21 9D FF FF       0546 	ld hl,KEY_SPACE
04044F CD 47 10 04       0547 	call fn_inkey
040453 FE 01             0548 	cp 1
040455 CC F2 03 04       0549 	call z,dsl_set_pen
040459                   0550 
040459 CD 9B 0A 04       0551 	call fn_draw_pixel_without_border
04045D CD 3D 0B 04       0552 	call fn_move_down
040461 CD 87 0A 04       0553 	call fn_draw_pixel_with_border
040465 CD C2 0F 04       0554 	call fn_slowdown
040469 C9                0555 	ret
04046A                   0556 
04046A                   0557 ; move pixel left
04046A                   0558 dsl_left:
04046A 21 88 10 04       0559 	ld hl,xpix
04046E 7E                0560 	ld a,(hl)
04046F FE 00             0561 	cp 0
040471 C8                0562 	ret z
040472                   0563 
040472 21 9D FF FF       0564 	ld hl,KEY_SPACE
040476 CD 47 10 04       0565 	call fn_inkey
04047A FE 01             0566 	cp 1
04047C CC F2 03 04       0567 	call z,dsl_set_pen
040480                   0568 
040480 CD 9B 0A 04       0569 	call fn_draw_pixel_without_border
040484 CD 43 0B 04       0570 	call fn_move_left
040488 CD 87 0A 04       0571 	call fn_draw_pixel_with_border
04048C CD C2 0F 04       0572 	call fn_slowdown
040490 C9                0573 	ret
040491                   0574 
040491                   0575 ; move pixel right
040491                   0576 dsl_right:
040491 21 8B 10 04       0577 	ld hl,spr_size
040495 56                0578 	ld d,(hl)
040496 15                0579 	dec d
040497                   0580 
040497 21 88 10 04       0581 	ld hl,xpix
04049B 7E                0582 	ld a,(hl)
04049C BA                0583 	cp d
04049D C8                0584 	ret z
04049E                   0585 
04049E 21 9D FF FF       0586 	ld hl,KEY_SPACE
0404A2 CD 47 10 04       0587 	call fn_inkey
0404A6 FE 01             0588 	cp 1
0404A8 CC F2 03 04       0589 	call z,dsl_set_pen
0404AC                   0590 
0404AC CD 9B 0A 04       0591 	call fn_draw_pixel_without_border
0404B0 CD 49 0B 04       0592 	call fn_move_right
0404B4 CD 87 0A 04       0593 	call fn_draw_pixel_with_border
0404B8 CD C2 0F 04       0594 	call fn_slowdown
0404BC C9                0595 	ret
0404BD                   0596 
0404BD                   0597 ; load a sprite
0404BD                   0598 dsl_load_sprite:
0404BD 21 A9 FF FF       0599 	ld hl,KEY_L
0404C1 CD 47 10 04       0600 	call fn_inkey
0404C5 FE 00             0601 	cp 0
0404C7 20 F4             0602 	jr nz,dsl_load_sprite
0404C9                   0603 
0404C9 CD 9B 0A 04       0604 	call fn_draw_pixel_without_border
0404CD CD 11 0D 04       0605 	call fn_load_sprite
0404D1 CD 39 0F 04       0606 	call fn_refresh_sprite
0404D5 CD 87 0A 04       0607 	call fn_draw_pixel_with_border
0404D9 CD 79 0F 04       0608 	call fn_change_frame
0404DD C9                0609 	ret
0404DE                   0610 
0404DE                   0611 ; save a sprite
0404DE                   0612 dsl_save_sprite:
0404DE 21 AE FF FF       0613 	ld hl,KEY_S
0404E2 CD 47 10 04       0614 	call fn_inkey
0404E6 FE 00             0615 	cp 0
0404E8 20 F4             0616 	jr nz,dsl_save_sprite
0404EA                   0617 
0404EA CD 9B 0A 04       0618 	call fn_draw_pixel_without_border
0404EE CD 0C 0E 04       0619 	call fn_save_sprite
0404F2 CD 39 0F 04       0620 	call fn_refresh_sprite
0404F6 C9                0621 	ret
0404F7                   0622 
0404F7                   0623 ; add a frame to the animation
0404F7                   0624 dsl_add_frame:
0404F7 21 AA FF FF       0625 	ld hl,KEY_N
0404FB CD 47 10 04       0626 	call fn_inkey
0404FF FE 00             0627 	cp 0
040501 20 F4             0628 	jr nz,dsl_add_frame
040503                   0629 
040503                   0630 	; frames limit reached ? exit
040503 21 5E 11 04       0631 	ld hl,frames_count
040507 7E                0632 	ld a,(hl)
040508 FE 08             0633 	cp MAX_FRAMES
04050A C8                0634 	ret z
04050B                   0635 
04050B                   0636 	; get the number of frames to copy
04050B 21 5E 11 04       0637 	ld hl,frames_count
04050F 7E                0638 	ld a,(hl)
040510 21 5D 11 04       0639 	ld hl,current_frame
040514 46                0640 	ld b,(hl)
040515 90                0641 	sub b
040516 3D                0642 	dec a
040517                   0643 
040517                   0644 	; get sprsize² (length of a sprite, in bytes)
040517 21 8B 10 04       0645 	ld hl,spr_size
04051B 11 00 00 00       0646 	ld de,$000000
04051F 5E                0647 	ld e,(hl)
040520 56                0648 	ld d,(hl)
040521 ED 5C             0649 	mlt de ; DE = sprsize²
040523                   0650 
040523                   0651 	; prepare for the case we goto af_zap...
040523 21 66 11 04       0652 	ld hl,sprite_buffer
040527                   0653 
040527 F5                0654 	push af
040528 E5                0655 	push hl
040529 21 5D 11 04       0656 	ld hl,current_frame
04052D 7E                0657 	ld a,(hl)
04052E 3C                0658 	inc a
04052F 47                0659 	ld b,a
040530 E1                0660 	pop hl
040531 F1                0661 	pop af
040532                   0662 
040532                   0663 af_loop0:
040532 19                0664 	add hl,de ; for if current frame = 0 (prepare to zap!)
040533 10 FD             0665 	djnz af_loop0
040535                   0666 
040535 E5                0667 	push hl ; store HL = sprite buffer + sprsize²
040536 FE 00             0668 	cp 0
040538 CA 60 05 04       0669 	jp z,af_zap ; zap the copy, if the 'current frame' is at the last frame
04053C E1                0670 	pop hl ; HL unused in this case
04053D                   0671 
04053D 21 00 00 00       0672 	ld hl,$000000 ; HL is 0 to store the result
040541 47                0673 	ld b,a ; B = frames to copy
040542                   0674 
040542                   0675 ; multiply number of frames to copy by sprsize²
040542                   0676 af_loop1:
040542 19                0677 	add hl,de ; HL = length (in bytes) to copy (a few frames)
040543 10 FD             0678 	djnz af_loop1
040545                   0679 
040545 E5                0680 	push hl
040546 C1                0681 	pop bc ; BC = HL = length (in bytes) to copy (a few frames)
040547                   0682 
040547 21 5D 11 04       0683 	ld hl,current_frame
04054B 7E                0684 	ld a,(hl)
04054C 3C                0685 	inc a
04054D 21 66 11 04       0686 	ld hl,sprite_buffer
040551                   0687 
040551 C5                0688 	push bc
040552 47                0689 	ld b,a
040553                   0690 
040553                   0691 af_loop2:
040553 19                0692 	add hl,de ; HL = sprite buffer + length to copy
040554 10 FD             0693 	djnz af_loop2
040556                   0694 
040556 C1                0695 	pop bc
040557                   0696 
040557 E5                0697 	push hl ; HL = sprite_buffer + (current frame * sprsize²)
040558                   0698 
040558 09                0699 	add hl,bc
040559 2B                0700 	dec hl ; HL = end address to copy to end target address
04055A                   0701 
04055A E5                0702 	push hl
04055B 19                0703 	add hl,de
04055C EB                0704 	ex de,hl ; DE = end target address
04055D E1                0705 	pop hl
04055E                   0706 
04055E ED B8             0707 	lddr
040560                   0708 
040560                   0709 af_zap:
040560                   0710 	; multiply number of frames to copy by sprsize²
040560 21 8B 10 04       0711 	ld hl,spr_size
040564 01 00 00 00       0712 	ld bc,$000000
040568 4E                0713 	ld c,(hl)
040569 46                0714 	ld b,(hl)
04056A ED 4C             0715 	mlt bc ; BC = sprsize²
04056C                   0716 
04056C E1                0717 	pop hl ; HL = sprite_buffer + (current frame * sprsize²)
04056D                   0718 
04056D                   0719 ; fill frame with 0 color
04056D                   0720 af_loop3:
04056D AF                0721 	xor a
04056E 77                0722 	ld (hl),a
04056F 23                0723 	inc hl
040570 0B                0724 	dec bc
040571 78                0725 	ld a,b
040572 B1                0726 	or c
040573 FE 00             0727 	cp 0
040575 20 F6             0728 	jr nz,af_loop3
040577                   0729 
040577                   0730 	; increment the frames count and the current frame values
040577 21 5E 11 04       0731 	ld hl,frames_count
04057B 34                0732 	inc (hl)
04057C 21 5D 11 04       0733 	ld hl,current_frame
040580 34                0734 	inc (hl)
040581                   0735 
040581 CD 79 0F 04       0736 	call fn_change_frame
040585 CD 9E 0F 04       0737 	call fn_change_frames_count
040589 CD 39 0F 04       0738 	call fn_refresh_sprite
04058D C9                0739 	ret
04058E                   0740 
04058E                   0741 ; add a copy of the current frame to the animation
04058E                   0742 dsl_add_and_copy_frame: ; TODO! debug me!
04058E 21 AD FF FF       0743 	ld hl,KEY_C
040592 CD 47 10 04       0744 	call fn_inkey
040596 FE 00             0745 	cp 0
040598 20 F4             0746 	jr nz,dsl_add_and_copy_frame
04059A                   0747 
04059A                   0748 	; frames limit reached ? exit
04059A 21 5E 11 04       0749 	ld hl,frames_count
04059E 7E                0750 	ld a,(hl)
04059F FE 08             0751 	cp MAX_FRAMES
0405A1 C8                0752 	ret z
0405A2                   0753 
0405A2                   0754 	; get the number of frames to copy
0405A2 21 5E 11 04       0755 	ld hl,frames_count
0405A6 7E                0756 	ld a,(hl)
0405A7 21 5D 11 04       0757 	ld hl,current_frame
0405AB 46                0758 	ld b,(hl)
0405AC 90                0759 	sub b
0405AD                   0760 
0405AD                   0761 	; get sprsize² (length of a sprite, in bytes)
0405AD 21 8B 10 04       0762 	ld hl,spr_size
0405B1 11 00 00 00       0763 	ld de,$000000
0405B5 5E                0764 	ld e,(hl)
0405B6 56                0765 	ld d,(hl)
0405B7 ED 5C             0766 	mlt de ; DE = sprsize²
0405B9                   0767 
0405B9 21 00 00 00       0768 	ld hl,$000000 ; HL is 0 to store the result
0405BD 47                0769 	ld b,a ; B = frames to copy
0405BE                   0770 
0405BE                   0771 ; multiply number of frames to copy by sprsize²
0405BE                   0772 aacf_loop1:
0405BE 19                0773 	add hl,de ; HL = length (in bytes) to copy (a few frames)
0405BF 10 FD             0774 	djnz aacf_loop1
0405C1                   0775 
0405C1 E5                0776 	push hl
0405C2 C1                0777 	pop bc ; BC = HL = length (in bytes) to copy (a few frames)
0405C3                   0778 
0405C3 21 5D 11 04       0779 	ld hl,current_frame
0405C7 7E                0780 	ld a,(hl)
0405C8 21 66 11 04       0781 	ld hl,sprite_buffer
0405CC FE 00             0782 	cp 0
0405CE 28 06             0783 	jr z,aacf_loop_end2
0405D0                   0784 
0405D0 C5                0785 	push bc
0405D1 47                0786 	ld b,a
0405D2                   0787 
0405D2                   0788 aacf_loop2:
0405D2 19                0789 	add hl,de ; HL = sprite buffer + length to copy
0405D3 10 FD             0790 	djnz aacf_loop2
0405D5                   0791 
0405D5 C1                0792 	pop bc
0405D6                   0793 
0405D6                   0794 aacf_loop_end2:
0405D6 09                0795 	add hl,bc
0405D7 2B                0796 	dec hl ; HL = end address to copy to end target address
0405D8                   0797 
0405D8 E5                0798 	push hl
0405D9 19                0799 	add hl,de
0405DA EB                0800 	ex de,hl ; DE = end target address
0405DB E1                0801 	pop hl
0405DC                   0802 
0405DC ED B8             0803 	lddr
0405DE                   0804 
0405DE                   0805 	; increment the frames count and the current frame values
0405DE 21 5E 11 04       0806 	ld hl,frames_count
0405E2 34                0807 	inc (hl)
0405E3 21 5D 11 04       0808 	ld hl,current_frame
0405E7 34                0809 	inc (hl)
0405E8                   0810 
0405E8 CD 79 0F 04       0811 	call fn_change_frame
0405EC CD 9E 0F 04       0812 	call fn_change_frames_count
0405F0 CD 39 0F 04       0813 	call fn_refresh_sprite
0405F4 C9                0814 	ret
0405F5                   0815 
0405F5                   0816 ; delete last frame from animation
0405F5                   0817 dsl_delete_frame:
0405F5 21 D0 FF FF       0818 	ld hl,KEY_BACKSPACE
0405F9 CD 47 10 04       0819 	call fn_inkey
0405FD FE 00             0820 	cp 0
0405FF 20 F4             0821 	jr nz,dsl_delete_frame
040601                   0822 
040601                   0823 	; delete current selected frame
040601 21 8B 10 04       0824 	ld hl,spr_size
040605 01 00 00 00       0825 	ld bc,$000000
040609 4E                0826 	ld c,(hl)
04060A 46                0827 	ld b,(hl)
04060B ED 4C             0828 	mlt bc ; BC = sprsize²
04060D 21 5D 11 04       0829 	ld hl,current_frame
040611 7E                0830 	ld a,(hl) ; A = current frame
040612 21 66 11 04       0831 	ld hl,sprite_buffer ; HL = sprite buffer
040616 C5                0832 	push bc
040617 FE 00             0833 	cp 0
040619 28 06             0834 	jr z,df_loop2
04061B                   0835 
04061B                   0836 df_loop1:
04061B 09                0837 	add hl,bc ; HL = sprite buffer + (current frame * sprsize²)
04061C 3D                0838 	dec a
04061D FE 00             0839 	cp 0
04061F 20 FA             0840 	jr nz,df_loop1
040621                   0841 
040621                   0842 ; clear the current frame
040621                   0843 df_loop2:
040621 AF                0844 	xor a
040622 77                0845 	ld (hl),a
040623 23                0846 	inc hl
040624 0B                0847 	dec bc
040625 78                0848 	ld a,b
040626 B1                0849 	or c
040627 FE 00             0850 	cp 0
040629 20 F6             0851 	jr nz,df_loop2
04062B                   0852 
04062B                   0853 	; current frame + 1 = frames count ?
04062B E5                0854 	push hl
04062C 21 5D 11 04       0855 	ld hl,current_frame
040630 5E                0856 	ld e,(hl)
040631 1C                0857 	inc e
040632 21 5E 11 04       0858 	ld hl,frames_count
040636 7E                0859 	ld a,(hl)
040637 BB                0860 	cp e
040638 E1                0861 	pop hl
040639 C1                0862 	pop bc
04063A CA B3 06 04       0863 	jp z,df_exit
04063E                   0864 
04063E 11 5E 11 04       0865 	ld de,frames_count
040642 1A                0866 	ld a,(de) ; A = frames count
040643 E5                0867 	push hl
040644 21 5D 11 04       0868 	ld hl,current_frame
040648 5E                0869 	ld e,(hl) ; E = current frame
040649 E1                0870 	pop hl
04064A 93                0871 	sub e
04064B 3D                0872 	dec a ; A = number of frames to copy back
04064C                   0873 
04064C EB                0874 	ex de,hl ; DE = sprite buffer + ((current frame + 1) * sprsize²)
04064D 21 00 00 00       0875 	ld hl,$000000
040651 FE 00             0876 	cp 0 ; 0 frames to copy ?
040653 28 06             0877 	jr z,df_exit_loop3
040655                   0878 
040655                   0879 df_loop3:
040655 09                0880 	add hl,bc ; HL = length of a frame (sprsize²) * frames count
040656 3D                0881 	dec a
040657 FE 00             0882 	cp 0
040659 20 FA             0883 	jr nz,df_loop3
04065B                   0884 
04065B                   0885 df_exit_loop3:
04065B E5                0886 	push hl
04065C C1                0887 	pop bc ; BC = total length of area to copy
04065D D5                0888 	push de
04065E E1                0889 	pop hl ; HL = DE = start of area to copy
04065F                   0890 
04065F C5                0891 	push bc
040660 D5                0892 	push de
040661 E5                0893 	push hl
040662 21 8B 10 04       0894 	ld hl,spr_size
040666 11 00 00 00       0895 	ld de,$000000
04066A 5E                0896 	ld e,(hl)
04066B 56                0897 	ld d,(hl)
04066C ED 5C             0898 	mlt de ; DE = one sprite frame length
04066E E1                0899 	pop hl
04066F B7                0900 	or a
040670 ED 52             0901 	sbc hl,de ; HL = target area to copy
040672 D1                0902 	pop de
040673 EB                0903 	ex de,hl ; DE = target, HL = start
040674 C1                0904 	pop bc
040675 ED B0             0905 	ldir
040677                   0906 
040677 21 8B 10 04       0907 	ld hl,spr_size
04067B 01 00 00 00       0908 	ld bc,$000000
04067F 4E                0909 	ld c,(hl)
040680 46                0910 	ld b,(hl)
040681 ED 4C             0911 	mlt bc ; DE = one sprite frame length
040683                   0912 
040683                   0913 	; delete last frame data
040683 21 5E 11 04       0914 	ld hl,frames_count
040687 7E                0915 	ld a,(hl) ; A =frames count
040688 3D                0916 	dec a ; A = last frame
040689 21 66 11 04       0917 	ld hl,sprite_buffer ; HL = sprite buffer
04068D FE 00             0918 	cp 0
04068F 28 06             0919 	jr z,df_loop5
040691                   0920 
040691                   0921 df_loop4:
040691 09                0922 	add hl,bc ; HL = sprite buffer + (last frame * sprsize²)
040692 3D                0923 	dec a
040693 FE 00             0924 	cp 0
040695 20 FA             0925 	jr nz,df_loop4
040697                   0926 
040697                   0927 ; clear the current frame
040697                   0928 df_loop5:
040697 AF                0929 	xor a
040698 77                0930 	ld (hl),a
040699 23                0931 	inc hl
04069A 0B                0932 	dec bc
04069B 78                0933 	ld a,b
04069C B1                0934 	or c
04069D FE 00             0935 	cp 0
04069F 20 F6             0936 	jr nz,df_loop5
0406A1                   0937 
0406A1                   0938 	; decrement frames count
0406A1 21 5E 11 04       0939 	ld hl,frames_count
0406A5 35                0940 	dec (hl)
0406A6                   0941 
0406A6 CD 79 0F 04       0942 	call fn_change_frame
0406AA CD 9E 0F 04       0943 	call fn_change_frames_count
0406AE CD 39 0F 04       0944 	call fn_refresh_sprite
0406B2 C9                0945 	ret
0406B3                   0946 
0406B3                   0947 df_exit:
0406B3 21 5E 11 04       0948 	ld hl,frames_count
0406B7 7E                0949 	ld a,(hl)
0406B8 FE 01             0950 	cp 1
0406BA 28 06             0951 	jr z,df_exit_end
0406BC 35                0952 	dec (hl)
0406BD 21 5D 11 04       0953 	ld hl,current_frame
0406C1 35                0954 	dec (hl)
0406C2                   0955 
0406C2                   0956 df_exit_end:
0406C2 CD 79 0F 04       0957 	call fn_change_frame
0406C6 CD 9E 0F 04       0958 	call fn_change_frames_count
0406CA CD 39 0F 04       0959 	call fn_refresh_sprite
0406CE C9                0960 	ret
0406CF                   0961 
0406CF                   0962 ; goto previous frame
0406CF                   0963 dsl_previous_frame:
0406CF 21 B1 FF FF       0964 	ld hl,KEY_PGDOWN
0406D3 CD 47 10 04       0965 	call fn_inkey
0406D7 FE 00             0966 	cp 0
0406D9 20 F4             0967 	jr nz,dsl_previous_frame
0406DB                   0968 
0406DB 21 5D 11 04       0969 	ld hl,current_frame
0406DF 7E                0970 	ld a,(hl)
0406E0 FE 00             0971 	cp 0
0406E2 C8                0972 	ret z
0406E3                   0973 
0406E3 3D                0974 	dec a
0406E4 77                0975 	ld (hl),a
0406E5 CD 79 0F 04       0976 	call fn_change_frame
0406E9 CD 39 0F 04       0977 	call fn_refresh_sprite
0406ED C9                0978 	ret
0406EE                   0979 
0406EE                   0980 ; goto next frame
0406EE                   0981 dsl_next_frame:
0406EE 21 C0 FF FF       0982 	ld hl,KEY_PGUP
0406F2 CD 47 10 04       0983 	call fn_inkey
0406F6 FE 00             0984 	cp 0
0406F8 20 F4             0985 	jr nz,dsl_next_frame
0406FA                   0986 
0406FA 21 5D 11 04       0987 	ld hl,current_frame
0406FE 7E                0988 	ld a,(hl)
0406FF 3C                0989 	inc a
040700 21 5E 11 04       0990 	ld hl,frames_count
040704 BE                0991 	cp (hl)
040705 C8                0992 	ret z
040706                   0993 
040706 21 5D 11 04       0994 	ld hl,current_frame
04070A 77                0995 	ld (hl),a
04070B CD 79 0F 04       0996 	call fn_change_frame
04070F CD 39 0F 04       0997 	call fn_refresh_sprite
040713 C9                0998 	ret
040714                   0999 
040714                   1000 ; rotate a frame 90° clockwise
040714                   1001 dsl_rotate_frame:
040714 21 CC FF FF       1002 	ld hl,KEY_R
040718 CD 47 10 04       1003 	call fn_inkey
04071C FE 00             1004 	cp 0
04071E 20 F4             1005 	jr nz,dsl_rotate_frame
040720                   1006 
040720 CD 39 0F 04       1007 	call fn_refresh_sprite
040724 C9                1008 	ret
040725                   1009 
040725                   1010 ; flip frame horizontally
040725                   1011 dsl_flip_frame:
040725 21 BC FF FF       1012 	ld hl,KEY_F
040729 CD 47 10 04       1013 	call fn_inkey
04072D FE 00             1014 	cp 0
04072F 20 F4             1015 	jr nz,dsl_flip_frame
040731                   1016 
040731 21 8B 10 04       1017 	ld hl,spr_size
040735 11 00 00 00       1018 	ld de,$000000
040739 5E                1019 	ld e,(hl)
04073A 56                1020 	ld d,(hl)
04073B 4B                1021 	ld c,e
04073C ED 5C             1022 	mlt de ; DE = sprite length in bytes
04073E 21 5D 11 04       1023 	ld hl,current_frame
040742 7E                1024 	ld a,(hl) ; A = current frame
040743 21 66 11 04       1025 	ld hl,sprite_buffer
040747 FE 00             1026 	cp 0
040749 28 04             1027 	jr z,ff_noloop1
04074B 47                1028 	ld b,a
04074C                   1029 
04074C                   1030 ff_loop1:
04074C 19                1031 	add hl,de ; HL = sprite_buffer + (current frame * sprsize²)
04074D 10 FD             1032 	djnz ff_loop1
04074F                   1033 
04074F                   1034 ff_noloop1:
04074F 41                1035 	ld b,c ; B = sprite height
040750 11 00 00 00       1036 	ld de,$000000
040754 59                1037 	ld e,c ; DE = sprite width
040755 79                1038 	ld a,c ; A = sprite width
040756 0F                1039 	rrca
040757 E6 7F             1040 	and 127 ; A = sprite width / 2
040759                   1041 
040759 E5                1042 	push hl
04075A DD E1             1043 	pop ix ; IX = frame address
04075C 19                1044 	add hl,de ; HL = frame address + sprite width - 1
04075D 2B                1045 	dec hl
04075E E5                1046 	push hl
04075F FD E1             1047 	pop iy ; IY = YX + sprite width - 1
040761                   1048 
040761                   1049 ff_loop2:
040761 F5                1050 	push af
040762 D5                1051 	push de
040763 DD E5             1052 	push ix
040765 FD E5             1053 	push iy
040767                   1054 ff_loop3:
040767 DD 5E 00          1055 	ld e,(ix+0)
04076A FD 56 00          1056 	ld d,(iy+0)
04076D DD 72 00          1057 	ld (ix+0),d
040770 FD 73 00          1058 	ld (iy+0),e
040773 DD 23             1059 	inc ix
040775 FD 2B             1060 	dec iy
040777 3D                1061 	dec a
040778 FE 00             1062 	cp 0
04077A 20 EB             1063 	jr nz,ff_loop3
04077C FD E1             1064 	pop iy
04077E DD E1             1065 	pop ix
040780 D1                1066 	pop de
040781 F1                1067 	pop af
040782 DD 19             1068 	add ix,de
040784 FD 19             1069 	add iy,de
040786 10 D9             1070 	djnz ff_loop2
040788                   1071 
040788 CD 39 0F 04       1072 	call fn_refresh_sprite
04078C C9                1073 	ret
04078D                   1074 
04078D                   1075 ; mirror frame vertically
04078D                   1076 dsl_mirror_frame:
04078D 21 9A FF FF       1077 	ld hl,KEY_M
040791 CD 47 10 04       1078 	call fn_inkey
040795 FE 00             1079 	cp 0
040797 20 F4             1080 	jr nz,dsl_mirror_frame
040799                   1081 
040799 CD 39 0F 04       1082 	call fn_refresh_sprite
04079D C9                1083 	ret
04079E                   1084 
04079E                   1085 ; change current tool to palette
04079E                   1086 dsl_palette_tool:
04079E 21 9F FF FF       1087 	ld hl,KEY_TAB
0407A2 CD 47 10 04       1088 	call fn_inkey
0407A6 FE 00             1089 	cp 0
0407A8 20 F4             1090 	jr nz,dsl_palette_tool
0407AA                   1091 
0407AA                   1092 	; hide sprite drawing cursor
0407AA CD 9B 0A 04       1093 	call fn_draw_pixel_without_border
0407AE                   1094 
0407AE                   1095 	; draw selected palette color
0407AE 21 8C 10 04       1096 	ld hl,current_pen
0407B2 4E                1097 	ld c,(hl)
0407B3 CD 4F 0B 04       1098 	call fn_draw_palette_with_border
0407B7                   1099 
0407B7                   1100 ; select palette color
0407B7                   1101 dsl_palette_tool_loop:
0407B7 21 E6 FF FF       1102 	ld hl,KEY_LEFT
0407BB CD 47 10 04       1103 	call fn_inkey
0407BF FE 01             1104 	cp 1
0407C1 CC 80 08 04       1105 	call z,dsl_dec_pen
0407C5                   1106 
0407C5 21 86 FF FF       1107 	ld hl,KEY_RIGHT
0407C9 CD 47 10 04       1108 	call fn_inkey
0407CD FE 01             1109 	cp 1
0407CF CC AB 08 04       1110 	call z,dsl_inc_pen
0407D3                   1111 
0407D3 21 9F FF FF       1112 	ld hl,KEY_TAB
0407D7 CD 47 10 04       1113 	call fn_inkey
0407DB FE 01             1114 	cp 1
0407DD CA 63 08 04       1115 	jp z,dsl_draw_sprite_tool
0407E1                   1116 
0407E1 21 A9 FF FF       1117 	ld hl,KEY_L
0407E5 CD 47 10 04       1118 	call fn_inkey
0407E9 FE 01             1119 	cp 1
0407EB CC 0F 08 04       1120 	call z,dslp_load_sprite
0407EF                   1121 
0407EF 21 AE FF FF       1122 	ld hl,KEY_S
0407F3 CD 47 10 04       1123 	call fn_inkey
0407F7 FE 01             1124 	cp 1
0407F9 CC 3D 08 04       1125 	call z,dslp_save_sprite
0407FD                   1126 
0407FD 21 8F FF FF       1127 	ld hl,KEY_ESCAPE
040801 CD 47 10 04       1128 	call fn_inkey
040805 FE 01             1129 	cp 1
040807 CA D6 08 04       1130 	jp z,exit_program
04080B                   1131 
04080B C3 B7 07 04       1132 	jp dsl_palette_tool_loop
04080F                   1133 
04080F                   1134 dslp_load_sprite:
04080F 21 A9 FF FF       1135 	ld hl,KEY_L
040813 CD 47 10 04       1136 	call fn_inkey
040817 FE 00             1137 	cp 0
040819 20 F4             1138 	jr nz,dslp_load_sprite
04081B                   1139 
04081B 21 8C 10 04       1140 	ld hl,current_pen
04081F 4E                1141 	ld c,(hl)
040820 CD B4 0B 04       1142 	call fn_draw_palette_without_border
040824 CD 11 0D 04       1143 	call fn_load_sprite
040828 21 8C 10 04       1144 	ld hl,current_pen
04082C 4E                1145 	ld c,(hl)
04082D CD 39 0F 04       1146 	call fn_refresh_sprite
040831 CD 4F 0B 04       1147 	call fn_draw_palette_with_border
040835 CD 79 0F 04       1148 	call fn_change_frame
040839 C3 B7 07 04       1149 	jp dsl_palette_tool_loop
04083D                   1150 
04083D                   1151 dslp_save_sprite:
04083D 21 AE FF FF       1152 	ld hl,KEY_S
040841 CD 47 10 04       1153 	call fn_inkey
040845 FE 00             1154 	cp 0
040847 20 F4             1155 	jr nz,dslp_save_sprite
040849                   1156 
040849 21 8C 10 04       1157 	ld hl,current_pen
04084D 4E                1158 	ld c,(hl)
04084E CD B4 0B 04       1159 	call fn_draw_palette_without_border
040852 CD 0C 0E 04       1160 	call fn_save_sprite
040856 21 8C 10 04       1161 	ld hl,current_pen
04085A 4E                1162 	ld c,(hl)
04085B CD 4F 0B 04       1163 	call fn_draw_palette_with_border
04085F C3 B7 07 04       1164 	jp dsl_palette_tool_loop
040863                   1165 
040863                   1166 dsl_draw_sprite_tool:
040863 21 9F FF FF       1167 	ld hl,KEY_TAB
040867 CD 47 10 04       1168 	call fn_inkey
04086B FE 00             1169 	cp 0
04086D 20 F4             1170 	jr nz,dsl_draw_sprite_tool
04086F                   1171 
04086F                   1172 	; unselect palette color
04086F 21 8C 10 04       1173 	ld hl,current_pen
040873 4E                1174 	ld c,(hl)
040874 CD B4 0B 04       1175 	call fn_draw_palette_without_border
040878                   1176 
040878                   1177 	; draw the pixel with a border
040878 CD 87 0A 04       1178 	call fn_draw_pixel_with_border
04087C                   1179 
04087C C3 F2 02 04       1180 	jp draw_sprite_loop
040880                   1181 
040880                   1182 dsl_dec_pen:
040880 21 8C 10 04       1183 	ld hl,current_pen
040884 7E                1184 	ld a,(hl)
040885 FE 00             1185 	cp COLOR_MIN
040887 CA B7 07 04       1186 	jp z,dsl_palette_tool_loop
04088B                   1187 
04088B F5                1188 	push af
04088C E5                1189 	push hl
04088D                   1190 
04088D                   1191 	; unselect palette color
04088D 21 8C 10 04       1192 	ld hl,current_pen
040891 4E                1193 	ld c,(hl)
040892 CD B4 0B 04       1194 	call fn_draw_palette_without_border
040896                   1195 
040896 E1                1196 	pop hl
040897 F1                1197 	pop af
040898                   1198 
040898                   1199 	; dec the pen
040898 3D                1200 	dec a
040899 77                1201 	ld (hl),a
04089A                   1202 
04089A                   1203 	; select palette color
04089A 21 8C 10 04       1204 	ld hl,current_pen
04089E 4E                1205 	ld c,(hl)
04089F CD 4F 0B 04       1206 	call fn_draw_palette_with_border
0408A3 CD C2 0F 04       1207 	call fn_slowdown
0408A7 C3 B7 07 04       1208 	jp dsl_palette_tool_loop
0408AB                   1209 
0408AB                   1210 dsl_inc_pen:
0408AB 21 8C 10 04       1211 	ld hl,current_pen
0408AF 7E                1212 	ld a,(hl)
0408B0 FE 3F             1213 	cp COLOR_MAX
0408B2 CA B7 07 04       1214 	jp z,dsl_palette_tool_loop
0408B6                   1215 
0408B6 F5                1216 	push af
0408B7 E5                1217 	push hl
0408B8                   1218 
0408B8                   1219 	; unselect palette color
0408B8 21 8C 10 04       1220 	ld hl,current_pen
0408BC 4E                1221 	ld c,(hl)
0408BD CD B4 0B 04       1222 	call fn_draw_palette_without_border
0408C1                   1223 
0408C1 E1                1224 	pop hl
0408C2 F1                1225 	pop af
0408C3                   1226 
0408C3                   1227 	; inc the pen
0408C3 3C                1228 	inc a
0408C4 77                1229 	ld (hl),a
0408C5                   1230 
0408C5                   1231 	; select palette color
0408C5 21 8C 10 04       1232 	ld hl,current_pen
0408C9 4E                1233 	ld c,(hl)
0408CA CD 4F 0B 04       1234 	call fn_draw_palette_with_border
0408CE CD C2 0F 04       1235 	call fn_slowdown
0408D2 C3 B7 07 04       1236 	jp dsl_palette_tool_loop
0408D6                   1237 
0408D6                   1238 ; exit program
0408D6                   1239 exit_program:
0408D6                   1240 	; reset to mode 1
0408D6                   1241 	vdu 22
0408D6 3E 16             1241 		LD	A, function
0408D8 49 D7             1241 		RST.LIS	10h
0408DA                   1242 	vdu 1
0408DA 3E 01             1242 		LD	A, function
0408DC 49 D7             1242 		RST.LIS	10h
0408DE                   1243 
0408DE                   1244 	; position the texte cursor at home
0408DE                   1245 	vdu 30
0408DE 3E 1E             1245 		LD	A, function
0408E0 49 D7             1245 		RST.LIS	10h
0408E2                   1246 
0408E2                   1247 	; show cursor
0408E2                   1248 	vdu 23
0408E2 3E 17             1248 		LD	A, function
0408E4 49 D7             1248 		RST.LIS	10h
0408E6                   1249 	vdu 1
0408E6 3E 01             1249 		LD	A, function
0408E8 49 D7             1249 		RST.LIS	10h
0408EA                   1250 	vdu 1
0408EA 3E 01             1250 		LD	A, function
0408EC 49 D7             1250 		RST.LIS	10h
0408EE                   1251 
0408EE FD E1             1252 	pop iy
0408F0 DD E1             1253 	pop ix
0408F2 D1                1254 	pop de
0408F3 C1                1255 	pop bc
0408F4 F1                1256 	pop af
0408F5 21 00 00 00       1257 	ld hl,0
0408F9                   1258 
0408F9 C9                1259 	ret
0408FA                   1260 ;======================================================================
0408FA                   1261 
0408FA                   1262 ; draw a rectangle
0408FA                   1263 fn_rect:
0408FA                   1264 	vdu 25
0408FA 3E 19             1264 		LD	A, function
0408FC 49 D7             1264 		RST.LIS	10h
0408FE                   1265 	vdu 4
0408FE 3E 04             1265 		LD	A, function
040900 49 D7             1265 		RST.LIS	10h
040902 DD 21 78 10 04    1266 	ld ix,x1
040907 DD 7E 00          1267 	ld a,(ix + 0)
04090A                   1268 	vdu_a
04090A 49 D7             1268 		RST.LIS	10h
04090C DD 7E 01          1269 	ld a,(ix + 1)
04090F                   1270 	vdu_a
04090F 49 D7             1270 		RST.LIS	10h
040911 FD 21 7A 10 04    1271 	ld iy,y1
040916 FD 7E 00          1272 	ld a,(iy + 0)
040919                   1273 	vdu_a
040919 49 D7             1273 		RST.LIS	10h
04091B FD 7E 01          1274 	ld a,(iy + 1)
04091E                   1275 	vdu_a
04091E 49 D7             1275 		RST.LIS	10h
040920                   1276 
040920                   1277 	vdu 25
040920 3E 19             1277 		LD	A, function
040922 49 D7             1277 		RST.LIS	10h
040924                   1278 	vdu 5
040924 3E 05             1278 		LD	A, function
040926 49 D7             1278 		RST.LIS	10h
040928 DD 21 7C 10 04    1279 	ld ix,x2
04092D DD 7E 00          1280 	ld a,(ix + 0)
040930                   1281 	vdu_a
040930 49 D7             1281 		RST.LIS	10h
040932 DD 7E 01          1282 	ld a,(ix + 1)
040935                   1283 	vdu_a
040935 49 D7             1283 		RST.LIS	10h
040937 FD 21 7A 10 04    1284 	ld iy,y1
04093C FD 7E 00          1285 	ld a,(iy + 0)
04093F                   1286 	vdu_a
04093F 49 D7             1286 		RST.LIS	10h
040941 FD 7E 01          1287 	ld a,(iy + 1)
040944                   1288 	vdu_a
040944 49 D7             1288 		RST.LIS	10h
040946                   1289 
040946                   1290 	vdu 25
040946 3E 19             1290 		LD	A, function
040948 49 D7             1290 		RST.LIS	10h
04094A                   1291 	vdu 5
04094A 3E 05             1291 		LD	A, function
04094C 49 D7             1291 		RST.LIS	10h
04094E DD 21 7C 10 04    1292 	ld ix,x2
040953 DD 7E 00          1293 	ld a,(ix + 0)
040956                   1294 	vdu_a
040956 49 D7             1294 		RST.LIS	10h
040958 DD 7E 01          1295 	ld a,(ix + 1)
04095B                   1296 	vdu_a
04095B 49 D7             1296 		RST.LIS	10h
04095D FD 21 7E 10 04    1297 	ld iy,y2
040962 FD 7E 00          1298 	ld a,(iy + 0)
040965                   1299 	vdu_a
040965 49 D7             1299 		RST.LIS	10h
040967 FD 7E 01          1300 	ld a,(iy + 1)
04096A                   1301 	vdu_a
04096A 49 D7             1301 		RST.LIS	10h
04096C                   1302 
04096C                   1303 	vdu 25
04096C 3E 19             1303 		LD	A, function
04096E 49 D7             1303 		RST.LIS	10h
040970                   1304 	vdu 5
040970 3E 05             1304 		LD	A, function
040972 49 D7             1304 		RST.LIS	10h
040974 DD 21 78 10 04    1305 	ld ix,x1
040979 DD 7E 00          1306 	ld a,(ix + 0)
04097C                   1307 	vdu_a
04097C 49 D7             1307 		RST.LIS	10h
04097E DD 7E 01          1308 	ld a,(ix + 1)
040981                   1309 	vdu_a
040981 49 D7             1309 		RST.LIS	10h
040983 FD 21 7E 10 04    1310 	ld iy,y2
040988 FD 7E 00          1311 	ld a,(iy + 0)
04098B                   1312 	vdu_a
04098B 49 D7             1312 		RST.LIS	10h
04098D FD 7E 01          1313 	ld a,(iy + 1)
040990                   1314 	vdu_a
040990 49 D7             1314 		RST.LIS	10h
040992                   1315 
040992                   1316 	vdu 25
040992 3E 19             1316 		LD	A, function
040994 49 D7             1316 		RST.LIS	10h
040996                   1317 	vdu 5
040996 3E 05             1317 		LD	A, function
040998 49 D7             1317 		RST.LIS	10h
04099A DD 21 78 10 04    1318 	ld ix,x1
04099F DD 7E 00          1319 	ld a,(ix + 0)
0409A2                   1320 	vdu_a
0409A2 49 D7             1320 		RST.LIS	10h
0409A4 DD 7E 01          1321 	ld a,(ix + 1)
0409A7                   1322 	vdu_a
0409A7 49 D7             1322 		RST.LIS	10h
0409A9 FD 21 7A 10 04    1323 	ld iy,y1
0409AE FD 7E 00          1324 	ld a,(iy + 0)
0409B1                   1325 	vdu_a
0409B1 49 D7             1325 		RST.LIS	10h
0409B3 FD 7E 01          1326 	ld a,(iy + 1)
0409B6                   1327 	vdu_a
0409B6 49 D7             1327 		RST.LIS	10h
0409B8                   1328 
0409B8 C9                1329 	ret
0409B9                   1330 
0409B9                   1331 ; draw a filled rectangle
0409B9                   1332 fn_rectf:
0409B9 DD 21 78 10 04    1333 	ld ix,x1
0409BE FD 21 7A 10 04    1334 	ld iy,y1
0409C3                   1335 
0409C3                   1336 	vdu 25
0409C3 3E 19             1336 		LD	A, function
0409C5 49 D7             1336 		RST.LIS	10h
0409C7                   1337 	vdu 4
0409C7 3E 04             1337 		LD	A, function
0409C9 49 D7             1337 		RST.LIS	10h
0409CB DD 7E 00          1338 	ld a,(ix+0)
0409CE                   1339 	vdu_a
0409CE 49 D7             1339 		RST.LIS	10h
0409D0 DD 7E 01          1340 	ld a,(ix+1)
0409D3                   1341 	vdu_a
0409D3 49 D7             1341 		RST.LIS	10h
0409D5 FD 7E 00          1342 	ld a,(iy+0)
0409D8                   1343 	vdu_a
0409D8 49 D7             1343 		RST.LIS	10h
0409DA FD 7E 01          1344 	ld a,(iy+1)
0409DD                   1345 	vdu_a
0409DD 49 D7             1345 		RST.LIS	10h
0409DF                   1346 
0409DF DD 21 7C 10 04    1347 	ld ix,x2
0409E4 FD 21 7E 10 04    1348 	ld iy,y2
0409E9                   1349 
0409E9                   1350 	vdu 25
0409E9 3E 19             1350 		LD	A, function
0409EB 49 D7             1350 		RST.LIS	10h
0409ED                   1351 	vdu 101
0409ED 3E 65             1351 		LD	A, function
0409EF 49 D7             1351 		RST.LIS	10h
0409F1 DD 7E 00          1352 	ld a,(ix+0)
0409F4                   1353 	vdu_a
0409F4 49 D7             1353 		RST.LIS	10h
0409F6 DD 7E 01          1354 	ld a,(ix+1)
0409F9                   1355 	vdu_a
0409F9 49 D7             1355 		RST.LIS	10h
0409FB FD 7E 00          1356 	ld a,(iy+0)
0409FE                   1357 	vdu_a
0409FE 49 D7             1357 		RST.LIS	10h
040A00 FD 7E 01          1358 	ld a,(iy+1)
040A03                   1359 	vdu_a
040A03 49 D7             1359 		RST.LIS	10h
040A05                   1360 
040A05 C9                1361 	ret
040A06                   1362 
040A06                   1363 fn_calc_pixel_coords:
040A06 11 00 00 00       1364 	ld de,$000000 ; reset deu
040A0A                   1365 
040A0A                   1366 	; calculate coordinates x of the resized pixel
040A0A 21 88 10 04       1367 	ld hl,xpix
040A0E 5E                1368 	ld e,(hl) ; E = xpix
040A0F 21 8A 10 04       1369 	ld hl,pixel_width
040A13 56                1370 	ld d,(hl) ; D = pixel_width
040A14 D5                1371 	push de
040A15 E1                1372 	pop hl ; HL = DE
040A16 ED 6C             1373 	mlt hl ; HL = xpix * pixel_width
040A18 DD 21 80 10 04    1374 	ld ix,xs1
040A1D DD 5E 00          1375 	ld e,(ix+0)
040A20 DD 56 01          1376 	ld d,(ix+1)
040A23 13                1377 	inc de ; DE = xs1 + 1
040A24 19                1378 	add hl,de ; HL = (xpix * pixel_width) + xs1 + 1
040A25 FD 21 78 10 04    1379 	ld iy,x1
040A2A FD 75 00          1380 	ld (iy+0),l
040A2D FD 74 01          1381 	ld (iy+1),h ; x1 = (xpix * pixel_width) + xs1 + 1
040A30 E5                1382 	push hl
040A31 21 8A 10 04       1383 	ld hl,pixel_width
040A35 16 00             1384 	ld d,0
040A37 5E                1385 	ld e,(hl)
040A38 E1                1386 	pop hl
040A39 19                1387 	add hl,de
040A3A 2B                1388 	dec hl
040A3B FD 21 7C 10 04    1389 	ld iy,x2
040A40 FD 75 00          1390 	ld (iy+0),l
040A43 FD 74 01          1391 	ld (iy+1),h ; x2 = x1 + pixel_width - 1
040A46                   1392 
040A46 11 00 00 00       1393 	ld de,$000000 ; reset deu
040A4A                   1394 
040A4A                   1395 	; calculate coordinates y of the resized pixel
040A4A 21 89 10 04       1396 	ld hl,ypix
040A4E 5E                1397 	ld e,(hl) ; E = ypix
040A4F 21 8A 10 04       1398 	ld hl,pixel_width
040A53 56                1399 	ld d,(hl) ; D = pixel_width
040A54 D5                1400 	push de
040A55 E1                1401 	pop hl ; HL = DE
040A56 ED 6C             1402 	mlt hl ; HL = ypix * pixel_width
040A58 DD 21 82 10 04    1403 	ld ix,ys1
040A5D DD 5E 00          1404 	ld e,(ix+0)
040A60 DD 56 01          1405 	ld d,(ix+1) ; ys1 = ypix * pixel_width
040A63 13                1406 	inc de ; DE = ys1 + 1
040A64 19                1407 	add hl,de ; HL = (ypix * pixel_width) + ys1 + 1
040A65 FD 21 7A 10 04    1408 	ld iy,y1
040A6A FD 75 00          1409 	ld (iy+0),l
040A6D FD 74 01          1410 	ld (iy+1),h ; y1 = (ypix * pixel_width) + ys1 + 1
040A70 E5                1411 	push hl
040A71 21 8A 10 04       1412 	ld hl,pixel_width
040A75 16 00             1413 	ld d,0
040A77 5E                1414 	ld e,(hl)
040A78 E1                1415 	pop hl
040A79 19                1416 	add hl,de
040A7A 2B                1417 	dec hl
040A7B FD 21 7E 10 04    1418 	ld iy,y2
040A80 FD 75 00          1419 	ld (iy+0),l
040A83 FD 74 01          1420 	ld (iy+1),h ; y2 = y1 + pixel_width - 1
040A86                   1421 
040A86 C9                1422 	ret
040A87                   1423 
040A87                   1424 ; draw the resized pixel border, with its color
040A87                   1425 fn_draw_pixel_with_border:
040A87 CD 9B 0A 04       1426 	call fn_draw_pixel_without_border
040A8B                   1427 
040A8B                   1428 	; set graphics pen
040A8B                   1429 	vdu 18
040A8B 3E 12             1429 		LD	A, function
040A8D 49 D7             1429 		RST.LIS	10h
040A8F                   1430 	vdu 0
040A8F 3E 00             1430 		LD	A, function
040A91 49 D7             1430 		RST.LIS	10h
040A93                   1431 	vdu COLOR_GREY ; grey pen
040A93 3E 07             1431 		LD	A, function
040A95 49 D7             1431 		RST.LIS	10h
040A97                   1432 
040A97                   1433 	; draw the sprite's border rectangle
040A97 C3 FA 08 04       1434 	jp fn_rect
040A9B                   1435 
040A9B                   1436 ; draw the resized pixel color
040A9B                   1437 fn_draw_pixel_without_border:
040A9B CD 06 0A 04       1438 	call fn_calc_pixel_coords
040A9F                   1439 
040A9F                   1440 	; set graphics pen
040A9F                   1441 	vdu 18
040A9F 3E 12             1441 		LD	A, function
040AA1 49 D7             1441 		RST.LIS	10h
040AA3                   1442 	vdu 0
040AA3 3E 00             1442 		LD	A, function
040AA5 49 D7             1442 		RST.LIS	10h
040AA7 CD B1 0A 04       1443 	call fn_get_pixel_color
040AAB                   1444 	vdu_a
040AAB 49 D7             1444 		RST.LIS	10h
040AAD                   1445 
040AAD                   1446 	; draw the sprite's color rectangle
040AAD C3 B9 09 04       1447 	jp fn_rectf
040AB1                   1448 
040AB1                   1449 ; get pixel color value in the sprite buffer
040AB1                   1450 ; returns A: pixel color (0-63)
040AB1                   1451 fn_get_pixel_color:
040AB1 11 00 00 00       1452 	ld de,$000000 ; reset deu
040AB5                   1453 
040AB5                   1454 	; calculate the offset to add to the address
040AB5 21 89 10 04       1455 	ld hl,ypix
040AB9 5E                1456 	ld e,(hl) ; E = ypix
040ABA 21 8B 10 04       1457 	ld hl,spr_size
040ABE 56                1458 	ld d,(hl) ; D = sprsize
040ABF D5                1459 	push de
040AC0 E1                1460 	pop hl
040AC1 ED 6C             1461 	mlt hl ; HL = ypix * sprsize
040AC3 E5                1462 	push hl
040AC4 21 88 10 04       1463 	ld hl,xpix
040AC8 5E                1464 	ld e,(hl)
040AC9 16 00             1465 	ld d,0
040ACB E1                1466 	pop hl
040ACC 19                1467 	add hl,de ; HL = (ypix * sprsize) + xpix
040ACD                   1468 
040ACD 11 5D 11 04       1469 	ld de,current_frame
040AD1 1A                1470 	ld a,(de)
040AD2 FE 00             1471 	cp 0
040AD4 28 16             1472 	jr z,gpc_end_loop
040AD6                   1473 
040AD6 47                1474 	ld b,a
040AD7 E5                1475 	push hl
040AD8 11 00 00 00       1476 	ld de,$000000
040ADC 21 8B 10 04       1477 	ld hl,spr_size
040AE0 5E                1478 	ld e,(hl)
040AE1 56                1479 	ld d,(hl)
040AE2 D5                1480 	push de
040AE3 E1                1481 	pop hl
040AE4 ED 6C             1482 	mlt hl
040AE6 E5                1483 	push hl
040AE7 D1                1484 	pop de ; DE = sprsize²
040AE8 E1                1485 	pop hl
040AE9                   1486 
040AE9                   1487 gpc_loop:
040AE9 19                1488 	add hl,de
040AEA 10 FD             1489 	djnz gpc_loop
040AEC                   1490 
040AEC                   1491 gpc_end_loop:
040AEC                   1492 	; add the offset to the address
040AEC 11 66 11 04       1493 	ld de,sprite_buffer
040AF0 19                1494 	add hl,de ; HL = sprite_buffer + ((ypix * sprsize) + xpix)
040AF1                   1495 
040AF1                   1496 	; get pixel color value
040AF1 7E                1497 	ld a,(hl)
040AF2                   1498 
040AF2 C9                1499 	ret
040AF3                   1500 
040AF3                   1501 ; get pixel color value in the sprite buffer
040AF3                   1502 ; A: pixel color (0-63)
040AF3                   1503 fn_set_pixel_color:
040AF3 11 00 00 00       1504 	ld de,$000000 ; reset deu
040AF7                   1505 
040AF7                   1506 	; calculate the offset to add to the address
040AF7 21 89 10 04       1507 	ld hl,ypix
040AFB 5E                1508 	ld e,(hl) ; E = ypix
040AFC 21 8B 10 04       1509 	ld hl,spr_size
040B00 56                1510 	ld d,(hl) ; D = sprsize
040B01 D5                1511 	push de
040B02 E1                1512 	pop hl
040B03 ED 6C             1513 	mlt hl ; HL = ypix * sprsize
040B05 E5                1514 	push hl
040B06 21 88 10 04       1515 	ld hl,xpix
040B0A 5E                1516 	ld e,(hl)
040B0B 16 00             1517 	ld d,0
040B0D E1                1518 	pop hl
040B0E 19                1519 	add hl,de ; HL = (ypix * sprsize) + xpix
040B0F F5                1520 	push af
040B10                   1521 
040B10 11 5D 11 04       1522 	ld de,current_frame
040B14 1A                1523 	ld a,(de)
040B15 FE 00             1524 	cp 0
040B17 28 16             1525 	jr z,spc_end_loop
040B19                   1526 
040B19 47                1527 	ld b,a
040B1A E5                1528 	push hl
040B1B 11 00 00 00       1529 	ld de,$000000
040B1F 21 8B 10 04       1530 	ld hl,spr_size
040B23 5E                1531 	ld e,(hl)
040B24 56                1532 	ld d,(hl)
040B25 D5                1533 	push de
040B26 E1                1534 	pop hl
040B27 ED 6C             1535 	mlt hl
040B29 E5                1536 	push hl
040B2A D1                1537 	pop de ; DE = sprsize²
040B2B E1                1538 	pop hl
040B2C                   1539 
040B2C                   1540 spc_loop:
040B2C 19                1541 	add hl,de
040B2D 10 FD             1542 	djnz spc_loop
040B2F                   1543 
040B2F                   1544 spc_end_loop:
040B2F                   1545 
040B2F                   1546 	; add the offset to the address
040B2F 11 66 11 04       1547 	ld de,sprite_buffer
040B33 19                1548 	add hl,de ; HL = sprite_buffer + ((ypix * sprsize) + xpix)
040B34                   1549 
040B34                   1550 	; set pixel color value
040B34 F1                1551 	pop af
040B35 77                1552 	ld (hl),a
040B36                   1553 
040B36 C9                1554 	ret
040B37                   1555 
040B37                   1556 fn_move_up:
040B37 21 89 10 04       1557 	ld hl,ypix
040B3B 35                1558 	dec (hl)
040B3C C9                1559 	ret
040B3D                   1560 
040B3D                   1561 fn_move_down:
040B3D 21 89 10 04       1562 	ld hl,ypix
040B41 34                1563 	inc (hl)
040B42 C9                1564 	ret
040B43                   1565 
040B43                   1566 fn_move_left:
040B43 21 88 10 04       1567 	ld hl,xpix
040B47 35                1568 	dec (hl)
040B48 C9                1569 	ret
040B49                   1570 
040B49                   1571 fn_move_right:
040B49 21 88 10 04       1572 	ld hl,xpix
040B4D 34                1573 	inc (hl)
040B4E C9                1574 	ret
040B4F                   1575 
040B4F                   1576 ; draw palette color whit border and selection
040B4F                   1577 ; C = color number (0-63)
040B4F                   1578 fn_draw_palette_with_border:
040B4F C5                1579 	push bc
040B50                   1580 
040B50                   1581 	; choose palette color
040B50                   1582 	vdu 18
040B50 3E 12             1582 		LD	A, function
040B52 49 D7             1582 		RST.LIS	10h
040B54                   1583 	vdu 0
040B54 3E 00             1583 		LD	A, function
040B56 49 D7             1583 		RST.LIS	10h
040B58 C1                1584 	pop bc
040B59 C5                1585 	push bc
040B5A 79                1586 	ld a,c
040B5B                   1587 	vdu_a
040B5B 49 D7             1587 		RST.LIS	10h
040B5D                   1588 
040B5D                   1589 	; store coordinates for a palette square
040B5D DD 21 78 10 04    1590 	ld ix,x1
040B62 E1                1591 	pop hl
040B63 E5                1592 	push hl
040B64 26 05             1593 	ld h,5
040B66 ED 6C             1594 	mlt hl
040B68 E5                1595 	push hl
040B69 DD 75 00          1596 	ld (ix+0),l
040B6C DD 74 01          1597 	ld (ix+1),h
040B6F                   1598 
040B6F DD 21 7A 10 04    1599 	ld ix,y1
040B74 21 00 00 00       1600 	ld hl,0
040B78 DD 75 00          1601 	ld (ix+0),l
040B7B DD 74 01          1602 	ld (ix+1),h
040B7E                   1603 
040B7E DD 21 7C 10 04    1604 	ld ix,x2
040B83 E1                1605 	pop hl
040B84 11 04 00 00       1606 	ld de,4
040B88 19                1607 	add hl,de
040B89 DD 75 00          1608 	ld (ix+0),l
040B8C DD 74 01          1609 	ld (ix+1),h
040B8F                   1610 
040B8F DD 21 7E 10 04    1611 	ld ix,y2
040B94 21 0A 00 00       1612 	ld hl,10
040B98 DD 75 00          1613 	ld (ix+0),l
040B9B DD 74 01          1614 	ld (ix+1),h
040B9E                   1615 
040B9E                   1616 	; draw the palette filled square
040B9E CD B9 09 04       1617 	call fn_rectf
040BA2                   1618 
040BA2                   1619 	; choose grey color
040BA2                   1620 	vdu 18
040BA2 3E 12             1620 		LD	A, function
040BA4 49 D7             1620 		RST.LIS	10h
040BA6                   1621 	vdu 0
040BA6 3E 00             1621 		LD	A, function
040BA8 49 D7             1621 		RST.LIS	10h
040BAA 3E 07             1622 	ld a,COLOR_GREY
040BAC                   1623 	vdu_a
040BAC 49 D7             1623 		RST.LIS	10h
040BAE                   1624 
040BAE                   1625 	; draw the palette square border
040BAE CD FA 08 04       1626 	call fn_rect
040BB2                   1627 
040BB2                   1628 	; next color ?
040BB2 C1                1629 	pop bc
040BB3                   1630 
040BB3 C9                1631 	ret
040BB4                   1632 
040BB4                   1633 ; draw palette color whitout border and selection
040BB4                   1634 ; C = color number (0-63)
040BB4                   1635 fn_draw_palette_without_border:
040BB4 C5                1636 	push bc
040BB5                   1637 
040BB5                   1638 	; choose palette color
040BB5                   1639 	vdu 18
040BB5 3E 12             1639 		LD	A, function
040BB7 49 D7             1639 		RST.LIS	10h
040BB9                   1640 	vdu 0
040BB9 3E 00             1640 		LD	A, function
040BBB 49 D7             1640 		RST.LIS	10h
040BBD C1                1641 	pop bc
040BBE C5                1642 	push bc
040BBF 79                1643 	ld a,c
040BC0                   1644 	vdu_a
040BC0 49 D7             1644 		RST.LIS	10h
040BC2                   1645 
040BC2                   1646 	; store coordinates for a palette square
040BC2 DD 21 78 10 04    1647 	ld ix,x1
040BC7 E1                1648 	pop hl
040BC8 E5                1649 	push hl
040BC9 26 05             1650 	ld h,5
040BCB ED 6C             1651 	mlt hl
040BCD E5                1652 	push hl
040BCE DD 75 00          1653 	ld (ix+0),l
040BD1 DD 74 01          1654 	ld (ix+1),h
040BD4                   1655 
040BD4 DD 21 7A 10 04    1656 	ld ix,y1
040BD9 21 00 00 00       1657 	ld hl,0
040BDD DD 75 00          1658 	ld (ix+0),l
040BE0 DD 74 01          1659 	ld (ix+1),h
040BE3                   1660 
040BE3 DD 21 7C 10 04    1661 	ld ix,x2
040BE8 E1                1662 	pop hl
040BE9 11 04 00 00       1663 	ld de,4
040BED 19                1664 	add hl,de
040BEE DD 75 00          1665 	ld (ix+0),l
040BF1 DD 74 01          1666 	ld (ix+1),h
040BF4                   1667 
040BF4 DD 21 7E 10 04    1668 	ld ix,y2
040BF9 21 0A 00 00       1669 	ld hl,10
040BFD DD 75 00          1670 	ld (ix+0),l
040C00 DD 74 01          1671 	ld (ix+1),h
040C03                   1672 
040C03                   1673 	; draw the palette filled square
040C03 CD B9 09 04       1674 	call fn_rectf
040C07                   1675 
040C07 C1                1676 	pop bc
040C08                   1677 
040C08 C9                1678 	ret
040C09                   1679 
040C09                   1680 ; get an ascii key value
040C09                   1681 fn_input_key:
040C09 C5                1682 	push bc
040C0A                   1683 	moscall mos_getkey
040C0A 3E 00             1683 		LD	A, function
040C0C 49 CF             1683 		RST.LIS	08h
040C0E C1                1684 	pop bc
040C0F C9                1685 	ret
040C10                   1686 
040C10                   1687 ; input a text of 8 chars
040C10                   1688 fn_input_text8:
040C10                   1689 	; locate x,y
040C10                   1690 	vdu 31
040C10 3E 1F             1690 		LD	A, function
040C12 49 D7             1690 		RST.LIS	10h
040C14                   1691 	vdu FILENAME_X
040C14 3E 07             1691 		LD	A, function
040C16 49 D7             1691 		RST.LIS	10h
040C18                   1692 	vdu FILENAME_Y
040C18 3E 18             1692 		LD	A, function
040C1A 49 D7             1692 		RST.LIS	10h
040C1C                   1693 
040C1C                   1694 	; print text
040C1C 21 F8 10 04       1695 	ld hl,filename_label
040C20 01 00 00 00       1696 	ld bc,0
040C24 AF                1697 	xor a
040C25 49 DF             1698 	rst.lis $18
040C27                   1699 
040C27                   1700 	; show cursor
040C27                   1701 	vdu 23
040C27 3E 17             1701 		LD	A, function
040C29 49 D7             1701 		RST.LIS	10h
040C2B                   1702 	vdu 1
040C2B 3E 01             1702 		LD	A, function
040C2D 49 D7             1702 		RST.LIS	10h
040C2F                   1703 	vdu 1
040C2F 3E 01             1703 		LD	A, function
040C31 49 D7             1703 		RST.LIS	10h
040C33                   1704 
040C33 0E 00             1705 	ld c,0
040C35                   1706 
040C35                   1707 it8_loop:
040C35                   1708 	; get ascii key
040C35 CD 09 0C 04       1709 	call fn_input_key
040C39 B7                1710 	or a
040C3A CA 35 0C 04       1711 	jp z,it8_loop
040C3E                   1712 
040C3E FE 2E             1713 	cp '.'
040C40 CA 8A 0C 04       1714 	jp z,it8l_add_char
040C44                   1715 
040C44 FE 2D             1716 	cp '-'
040C46 CA 8A 0C 04       1717 	jp z,it8l_add_char
040C4A                   1718 
040C4A FE 5F             1719 	cp '_'
040C4C CA 8A 0C 04       1720 	jp z,it8l_add_char
040C50                   1721 
040C50 FE 7F             1722 	cp 127
040C52 CA BE 0C 04       1723 	jp z,it8l_backspace
040C56                   1724 
040C56 FE 0D             1725 	cp 13
040C58 CA ED 0C 04       1726 	jp z,it8l_return
040C5C                   1727 
040C5C FE 30             1728 	cp '0'
040C5E DA 35 0C 04       1729 	jp c,it8_loop
040C62                   1730 
040C62 16 39             1731 	ld d,'9'
040C64 14                1732 	inc d
040C65 BA                1733 	cp d
040C66 DA 8A 0C 04       1734 	jp c,it8l_add_char
040C6A                   1735 
040C6A FE 41             1736 	cp 'A'
040C6C DA 35 0C 04       1737 	jp c,it8_loop
040C70                   1738 
040C70 16 5A             1739 	ld d,'Z'
040C72 14                1740 	inc d
040C73 BA                1741 	cp d
040C74 DA 8A 0C 04       1742 	jp c,it8l_add_char
040C78                   1743 
040C78 FE 61             1744 	cp 'a'
040C7A DA 35 0C 04       1745 	jp c,it8_loop
040C7E                   1746 
040C7E 16 7A             1747 	ld d,'z'
040C80 14                1748 	inc d
040C81 BA                1749 	cp d
040C82 DA 8A 0C 04       1750 	jp c,it8l_add_char
040C86                   1751 
040C86 C3 35 0C 04       1752 	jp it8_loop
040C8A                   1753 
040C8A                   1754 it8l_add_char:
040C8A F5                1755 	push af
040C8B 79                1756 	ld a,c
040C8C FE 0C             1757 	cp 12
040C8E 38 05             1758 	jr c,it8l_poke_char
040C90 F1                1759 	pop af
040C91 C3 35 0C 04       1760 	jp it8_loop
040C95                   1761 
040C95                   1762 it8l_poke_char:
040C95 F1                1763 	pop af
040C96 21 02 11 04       1764 	ld hl,filename
040C9A 06 00             1765 	ld b,0
040C9C 09                1766 	add hl,bc
040C9D 77                1767 	ld (hl),a
040C9E 0C                1768 	inc c
040C9F F5                1769 	push af
040CA0 C5                1770 	push bc
040CA1                   1771 
040CA1                   1772 	; locate x,y
040CA1                   1773 	vdu 31
040CA1 3E 1F             1773 		LD	A, function
040CA3 49 D7             1773 		RST.LIS	10h
040CA5                   1774 	vdu FILENAME_X+10
040CA5 3E 11             1774 		LD	A, function
040CA7 49 D7             1774 		RST.LIS	10h
040CA9                   1775 	vdu FILENAME_Y
040CA9 3E 18             1775 		LD	A, function
040CAB 49 D7             1775 		RST.LIS	10h
040CAD                   1776 
040CAD                   1777 	; print text
040CAD 21 02 11 04       1778 	ld hl,filename
040CB1 01 00 00 00       1779 	ld bc,0
040CB5 AF                1780 	xor a
040CB6 49 DF             1781 	rst.lis $18
040CB8                   1782 
040CB8 C1                1783 	pop bc
040CB9 F1                1784 	pop af
040CBA                   1785 
040CBA C3 35 0C 04       1786 	jp it8_loop
040CBE                   1787 
040CBE                   1788 it8l_backspace:
040CBE 79                1789 	ld a,c
040CBF FE 00             1790 	cp 0
040CC1 CA 35 0C 04       1791 	jp z,it8_loop
040CC5                   1792 
040CC5                   1793 	; delete a character of the filename
040CC5 21 02 11 04       1794 	ld hl,filename
040CC9 06 00             1795 	ld b,0
040CCB 09                1796 	add hl,bc
040CCC AF                1797 	xor a
040CCD 77                1798 	ld (hl),a
040CCE 0D                1799 	dec c
040CCF C5                1800 	push bc
040CD0                   1801 
040CD0                   1802 	; locate x,y
040CD0                   1803 	vdu 31
040CD0 3E 1F             1803 		LD	A, function
040CD2 49 D7             1803 		RST.LIS	10h
040CD4 3E 11             1804 	ld a,FILENAME_X+10
040CD6 81                1805 	add a,c
040CD7                   1806 	vdu_a
040CD7 49 D7             1806 		RST.LIS	10h
040CD9                   1807 	vdu FILENAME_Y
040CD9 3E 18             1807 		LD	A, function
040CDB 49 D7             1807 		RST.LIS	10h
040CDD                   1808 
040CDD                   1809 	; print text
040CDD 21 15 11 04       1810 	ld hl,spacechar
040CE1 01 00 00 00       1811 	ld bc,0
040CE5 AF                1812 	xor a
040CE6 49 DF             1813 	rst.lis $18
040CE8                   1814 
040CE8 C1                1815 	pop bc
040CE9 C3 35 0C 04       1816 	jp it8_loop
040CED                   1817 
040CED                   1818 it8l_return:
040CED                   1819 	; locate x,y
040CED                   1820 	vdu 31
040CED 3E 1F             1820 		LD	A, function
040CEF 49 D7             1820 		RST.LIS	10h
040CF1                   1821 	vdu FILENAME_X
040CF1 3E 07             1821 		LD	A, function
040CF3 49 D7             1821 		RST.LIS	10h
040CF5                   1822 	vdu FILENAME_Y
040CF5 3E 18             1822 		LD	A, function
040CF7 49 D7             1822 		RST.LIS	10h
040CF9                   1823 
040CF9                   1824 	; print text
040CF9 21 17 11 04       1825 	ld hl,void_filename
040CFD 01 00 00 00       1826 	ld bc,0
040D01 AF                1827 	xor a
040D02 49 DF             1828 	rst.lis $18
040D04                   1829 
040D04                   1830 	; hide cursor
040D04                   1831 	vdu 23
040D04 3E 17             1831 		LD	A, function
040D06 49 D7             1831 		RST.LIS	10h
040D08                   1832 	vdu 1
040D08 3E 01             1832 		LD	A, function
040D0A 49 D7             1832 		RST.LIS	10h
040D0C                   1833 	vdu 0
040D0C 3E 00             1833 		LD	A, function
040D0E 49 D7             1833 		RST.LIS	10h
040D10                   1834 
040D10 C9                1835 	ret
040D11                   1836 
040D11                   1837 ; load a sprite, giving its name (must be on spredit folder)
040D11                   1838 fn_load_sprite:
040D11                   1839 	; clear filename
040D11 21 02 11 04       1840 	ld hl,filename
040D15 06 0C             1841 	ld b,12
040D17 AF                1842 	xor a
040D18                   1843 
040D18                   1844 ls_clear_filename:
040D18 77                1845 	ld (hl),a
040D19 23                1846 	inc hl
040D1A 10 FC             1847 	djnz ls_clear_filename
040D1C                   1848 
040D1C                   1849 	; get filename
040D1C CD 10 0C 04       1850 	call fn_input_text8
040D20                   1851 
040D20                   1852 	; set path to home
040D20 21 0F 11 04       1853 	ld hl,home_path
040D24                   1854 	moscall mos_cd
040D24 3E 03             1854 		LD	A, function
040D26 49 CF             1854 		RST.LIS	08h
040D28                   1855 
040D28                   1856 	; exit on error
040D28 FE 00             1857 	cp 0
040D2A C2 E7 0D 04       1858 	jp nz,ls_folder_error
040D2E                   1859 
040D2E                   1860 	; open the file for read
040D2E 21 02 11 04       1861 	ld hl,filename
040D32 0E 01             1862 	ld c,fa_open_existing|fa_read
040D34                   1863 	moscall mos_fopen
040D34 3E 0A             1863 		LD	A, function
040D36 49 CF             1863 		RST.LIS	08h
040D38                   1864 
040D38                   1865 	; exit on error
040D38 FE 00             1866 	cp 0
040D3A CA 07 0E 04       1867 	jp z,ls_file_error
040D3E                   1868 
040D3E                   1869 	; filehandle -> C
040D3E 4F                1870 	ld c,a
040D3F                   1871 
040D3F                   1872 	; get colors count
040D3F                   1873 	moscall mos_fgetc
040D3F 3E 0C             1873 		LD	A, function
040D41 49 CF             1873 		RST.LIS	08h
040D43 DA D0 0D 04       1874 	jp c,ls_close_error
040D47                   1875 
040D47 FE 40             1876 	cp MAX_COLORS
040D49 C2 D0 0D 04       1877 	jp nz,ls_close_error
040D4D                   1878 
040D4D                   1879 	; store colors count
040D4D 21 5C 11 04       1880 	ld hl,colors_count
040D51 77                1881 	ld (hl),a
040D52                   1882 
040D52                   1883 	; get frames count
040D52                   1884 	moscall mos_fgetc
040D52 3E 0C             1884 		LD	A, function
040D54 49 CF             1884 		RST.LIS	08h
040D56 DA D0 0D 04       1885 	jp c,ls_close_error
040D5A                   1886 
040D5A                   1887 	; store frames count
040D5A 21 5E 11 04       1888 	ld hl,frames_count
040D5E 77                1889 	ld (hl),a
040D5F 21 5D 11 04       1890 	ld hl,current_frame
040D63 3D                1891 	dec a
040D64 77                1892 	ld (hl),a
040D65                   1893 
040D65                   1894 	; get sprite size
040D65                   1895 	moscall mos_fgetc
040D65 3E 0C             1895 		LD	A, function
040D67 49 CF             1895 		RST.LIS	08h
040D69 DA D0 0D 04       1896 	jp c,ls_close_error
040D6D                   1897 
040D6D                   1898 	; store sprite size
040D6D 21 8B 10 04       1899 	ld hl,spr_size
040D71 77                1900 	ld (hl),a
040D72                   1901 
040D72                   1902 	; set 4x4 pixel width
040D72 FE 04             1903 	cp SPR44
040D74 20 09             1904 	jr nz,ls_next1
040D76                   1905 
040D76 21 8A 10 04       1906 	ld hl,pixel_width
040D7A 06 20             1907 	ld b,SPR44_width
040D7C 70                1908 	ld (hl),b
040D7D 18 21             1909 	jr ls_next4
040D7F                   1910 
040D7F                   1911 ls_next1:
040D7F                   1912 	; set 8x8 pixel width
040D7F FE 08             1913 	cp SPR88
040D81 20 09             1914 	jr nz,ls_next2
040D83                   1915 
040D83 21 8A 10 04       1916 	ld hl,pixel_width
040D87 06 10             1917 	ld b,SPR88_width
040D89 70                1918 	ld (hl),b
040D8A 18 14             1919 	jr ls_next4
040D8C                   1920 
040D8C                   1921 ls_next2:
040D8C                   1922 
040D8C                   1923 	; set 16x16 pixel width
040D8C FE 10             1924 	cp SPR1616
040D8E 20 09             1925 	jr nz,ls_next3
040D90                   1926 
040D90 21 8A 10 04       1927 	ld hl,pixel_width
040D94 06 08             1928 	ld b,SPR1616_width
040D96 70                1929 	ld (hl),b
040D97 18 07             1930 	jr ls_next4
040D99                   1931 
040D99                   1932 ls_next3:
040D99                   1933 
040D99 21 8A 10 04       1934 	ld hl,pixel_width
040D9D 06 04             1935 	ld b,SPR3232_width
040D9F 70                1936 	ld (hl),b
040DA0                   1937 
040DA0                   1938 ls_next4:
040DA0                   1939 
040DA0 6F                1940 	ld l,a
040DA1 67                1941 	ld h,a
040DA2 ED 6C             1942 	mlt hl ; HL = sprite length
040DA4 E5                1943 	push hl
040DA5                   1944 
040DA5                   1945 	; get frames count
040DA5 21 5D 11 04       1946 	ld hl,current_frame
040DA9 46                1947 	ld b,(hl)
040DAA                   1948 
040DAA E1                1949 	pop hl
040DAB                   1950 
040DAB 78                1951 	ld a,b
040DAC FE 00             1952 	cp 0
040DAE 28 07             1953 	jr z,ls_read_data
040DB0                   1954 
040DB0                   1955 	; de = size²
040DB0 11 00 04 00       1956 	ld de,ONE_FRAME_BUFFER_SIZE
040DB4                   1957 ls_add_length:
040DB4 19                1958 	add hl,de
040DB5 10 FD             1959 	djnz ls_add_length
040DB7                   1960 
040DB7                   1961 ls_read_data:
040DB7 E5                1962 	push hl
040DB8 E5                1963 	push hl
040DB9 D1                1964 	pop de
040DBA 7B                1965 	ld a,e
040DBB 21 66 11 04       1966 	ld hl,sprite_buffer
040DBF                   1967 	moscall mos_fread
040DBF 3E 1A             1967 		LD	A, function
040DC1 49 CF             1967 		RST.LIS	08h
040DC3 E1                1968 	pop hl
040DC4 7C                1969 	ld a,h
040DC5 BA                1970 	cp d
040DC6 20 08             1971 	jr nz,ls_close_error
040DC8 7D                1972 	ld a,l
040DC9 BB                1973 	cp e
040DCA 20 04             1974 	jr nz,ls_close_error
040DCC C3 EF 0D 04       1975 	jp ls_close
040DD0                   1976 
040DD0                   1977 ls_close_error:
040DD0 C5                1978 	push bc
040DD1                   1979 
040DD1                   1980 	; read error
040DD1 CD CB 0E 04       1981 	call fn_print_file_error
040DD5                   1982 
040DD5 C1                1983 	pop bc
040DD6                   1984 
040DD6                   1985 	; close the file
040DD6                   1986 	moscall mos_fclose
040DD6 3E 0B             1986 		LD	A, function
040DD8 49 CF             1986 		RST.LIS	08h
040DDA                   1987 
040DDA                   1988 	; reset current frame and coordinates of the drawing pixel
040DDA 21 88 10 04       1989 	ld hl,xpix
040DDE AF                1990 	xor a
040DDF 77                1991 	ld (hl),a
040DE0 21 89 10 04       1992 	ld hl,ypix
040DE4 77                1993 	ld (hl),a
040DE5 18 17             1994 	jr ls_exit
040DE7                   1995 
040DE7                   1996 ls_folder_error:
040DE7                   1997 	; write error
040DE7 CD 02 0F 04       1998 	call fn_print_folder_error
040DEB C3 FE 0D 04       1999 	jp ls_exit
040DEF                   2000 
040DEF                   2001 ls_close:
040DEF                   2002 	; close the file
040DEF                   2003 	moscall mos_fclose
040DEF 3E 0B             2003 		LD	A, function
040DF1 49 CF             2003 		RST.LIS	08h
040DF3                   2004 
040DF3                   2005 	; reset current frame and coordinates of the drawing pixel
040DF3 21 88 10 04       2006 	ld hl,xpix
040DF7 AF                2007 	xor a
040DF8 77                2008 	ld (hl),a
040DF9 21 89 10 04       2009 	ld hl,ypix
040DFD 77                2010 	ld (hl),a
040DFE                   2011 
040DFE                   2012 ls_exit:
040DFE CD E3 0F 04       2013 	call fn_show_spr_descr
040E02 CD 9E 0F 04       2014 	call fn_change_frames_count
040E06 C9                2015 	ret
040E07                   2016 
040E07                   2017 ls_file_error:
040E07 CD CB 0E 04       2018 	call fn_print_file_error
040E0B C9                2019 	ret
040E0C                   2020 
040E0C                   2021 ; save a sprite, giving its name (must be on spredit folder)
040E0C                   2022 fn_save_sprite:
040E0C                   2023 	; clear filename
040E0C 21 02 11 04       2024 	ld hl,filename
040E10 06 0C             2025 	ld b,12
040E12 AF                2026 	xor a
040E13                   2027 
040E13                   2028 ss_clear_filename:
040E13 77                2029 	ld (hl),a
040E14 23                2030 	inc hl
040E15 10 FC             2031 	djnz ss_clear_filename
040E17                   2032 
040E17                   2033 	; get filename
040E17 CD 10 0C 04       2034 	call fn_input_text8
040E1B                   2035 
040E1B                   2036 	; set path to home
040E1B 21 0F 11 04       2037 	ld hl,home_path
040E1F                   2038 	moscall mos_cd
040E1F 3E 03             2038 		LD	A, function
040E21 49 CF             2038 		RST.LIS	08h
040E23                   2039 
040E23                   2040 	; exit on error
040E23 FE 00             2041 	cp 0
040E25 C2 A3 0E 04       2042 	jp nz,ss_folder_error
040E29                   2043 
040E29                   2044 	; open the file for write
040E29 21 02 11 04       2045 	ld hl,filename
040E2D 0E 06             2046 	ld c,fa_create_new|fa_write
040E2F                   2047 	moscall mos_fopen
040E2F 3E 0A             2047 		LD	A, function
040E31 49 CF             2047 		RST.LIS	08h
040E33                   2048 
040E33                   2049 	; exit on error
040E33 FE 00             2050 	cp 0
040E35 CA C6 0E 04       2051 	jp z,ss_file_error
040E39                   2052 
040E39                   2053 	; filehandle -> C
040E39 4F                2054 	ld c,a
040E3A                   2055 
040E3A                   2056 	; store colors count in the file
040E3A 06 40             2057 	ld b,MAX_COLORS
040E3C                   2058 	moscall mos_fputc
040E3C 3E 0D             2058 		LD	A, function
040E3E 49 CF             2058 		RST.LIS	08h
040E40                   2059 
040E40                   2060 	; store frames count in the file
040E40 21 5E 11 04       2061 	ld hl,frames_count
040E44 46                2062 	ld b,(hl)
040E45                   2063 	moscall mos_fputc
040E45 3E 0D             2063 		LD	A, function
040E47 49 CF             2063 		RST.LIS	08h
040E49                   2064 
040E49                   2065 	; store sprite size in the file
040E49 21 8B 10 04       2066 	ld hl,spr_size
040E4D 46                2067 	ld b,(hl)
040E4E                   2068 	moscall mos_fputc
040E4E 3E 0D             2068 		LD	A, function
040E50 49 CF             2068 		RST.LIS	08h
040E52                   2069 
040E52                   2070 	; de = size²
040E52 68                2071 	ld l,b
040E53 60                2072 	ld h,b
040E54 ED 6C             2073 	mlt hl ; HL = sprite length
040E56 E5                2074 	push hl
040E57                   2075 
040E57                   2076 	; get frames count
040E57 21 5D 11 04       2077 	ld hl,current_frame
040E5B 46                2078 	ld b,(hl)
040E5C                   2079 
040E5C E1                2080 	pop hl
040E5D                   2081 
040E5D 78                2082 	ld a,b
040E5E FE 00             2083 	cp 0
040E60 28 07             2084 	jr z,ss_write_data
040E62                   2085 
040E62 11 00 04 00       2086 	ld de,ONE_FRAME_BUFFER_SIZE
040E66                   2087 ss_add_length:
040E66 19                2088 	add hl,de
040E67 10 FD             2089 	djnz ss_add_length
040E69                   2090 
040E69                   2091 ss_write_data:
040E69 E5                2092 	push hl
040E6A E5                2093 	push hl
040E6B D1                2094 	pop de
040E6C 21 66 11 04       2095 	ld hl,sprite_buffer
040E70                   2096 	moscall mos_fwrite
040E70 3E 1B             2096 		LD	A, function
040E72 49 CF             2096 		RST.LIS	08h
040E74 E1                2097 	pop hl
040E75 7C                2098 	ld a,h
040E76 BA                2099 	cp d
040E77 20 08             2100 	jr nz,ss_close_error
040E79 7D                2101 	ld a,l
040E7A BB                2102 	cp e
040E7B 20 04             2103 	jr nz,ss_close_error
040E7D C3 AB 0E 04       2104 	jp ss_close
040E81                   2105 
040E81                   2106 ss_close_error:
040E81 C5                2107 	push bc
040E82                   2108 
040E82                   2109 	; write error
040E82 CD CB 0E 04       2110 	call fn_print_file_error
040E86                   2111 
040E86 C1                2112 	pop bc
040E87                   2113 
040E87                   2114 	; close the file
040E87                   2115 	moscall mos_fclose
040E87 3E 0B             2115 		LD	A, function
040E89 49 CF             2115 		RST.LIS	08h
040E8B                   2116 
040E8B                   2117 	; reset current frame and coordinates of the drawing pixel
040E8B 21 5E 11 04       2118 	ld hl,frames_count
040E8F 7E                2119 	ld a,(hl)
040E90 3D                2120 	dec a
040E91 21 5D 11 04       2121 	ld hl,current_frame
040E95 77                2122 	ld (hl),a
040E96 21 88 10 04       2123 	ld hl,xpix
040E9A AF                2124 	xor a
040E9B 77                2125 	ld (hl),a
040E9C 21 89 10 04       2126 	ld hl,ypix
040EA0 77                2127 	ld (hl),a
040EA1 18 22             2128 	jr ss_exit
040EA3                   2129 
040EA3                   2130 ss_folder_error:
040EA3                   2131 	; write error
040EA3 CD 02 0F 04       2132 	call fn_print_folder_error
040EA7 C3 C5 0E 04       2133 	jp ss_exit
040EAB                   2134 
040EAB                   2135 ss_close:
040EAB                   2136 	; close the file
040EAB                   2137 	moscall mos_fclose
040EAB 3E 0B             2137 		LD	A, function
040EAD 49 CF             2137 		RST.LIS	08h
040EAF                   2138 
040EAF                   2139 	; reset current frame and coordinates of the drawing pixel
040EAF 21 5E 11 04       2140 	ld hl,frames_count
040EB3 7E                2141 	ld a,(hl)
040EB4 3D                2142 	dec a
040EB5 21 5D 11 04       2143 	ld hl,current_frame
040EB9 77                2144 	ld (hl),a
040EBA 21 88 10 04       2145 	ld hl,xpix
040EBE AF                2146 	xor a
040EBF 77                2147 	ld (hl),a
040EC0 21 89 10 04       2148 	ld hl,ypix
040EC4 77                2149 	ld (hl),a
040EC5                   2150 
040EC5                   2151 ss_exit:
040EC5 C9                2152 	ret
040EC6                   2153 
040EC6                   2154 ss_file_error:
040EC6 CD CB 0E 04       2155 	call fn_print_file_error
040ECA C9                2156 	ret
040ECB                   2157 
040ECB                   2158 ; print 'file error'
040ECB                   2159 fn_print_file_error:
040ECB                   2160 	vdu 7
040ECB 3E 07             2160 		LD	A, function
040ECD 49 D7             2160 		RST.LIS	10h
040ECF                   2161 
040ECF                   2162 	; locate x,y
040ECF                   2163 	vdu 31
040ECF 3E 1F             2163 		LD	A, function
040ED1 49 D7             2163 		RST.LIS	10h
040ED3                   2164 	vdu FILENAME_X
040ED3 3E 07             2164 		LD	A, function
040ED5 49 D7             2164 		RST.LIS	10h
040ED7                   2165 	vdu FILENAME_Y
040ED7 3E 18             2165 		LD	A, function
040ED9 49 D7             2165 		RST.LIS	10h
040EDB                   2166 
040EDB                   2167 	; print text
040EDB 21 2E 11 04       2168 	ld hl,file_error
040EDF 01 00 00 00       2169 	ld bc,0
040EE3 AF                2170 	xor a
040EE4 49 DF             2171 	rst.lis $18
040EE6                   2172 
040EE6 CD 09 0C 04       2173 	call fn_input_key
040EEA                   2174 
040EEA                   2175 	; locate x,y
040EEA                   2176 	vdu 31
040EEA 3E 1F             2176 		LD	A, function
040EEC 49 D7             2176 		RST.LIS	10h
040EEE                   2177 	vdu FILENAME_X
040EEE 3E 07             2177 		LD	A, function
040EF0 49 D7             2177 		RST.LIS	10h
040EF2                   2178 	vdu FILENAME_Y
040EF2 3E 18             2178 		LD	A, function
040EF4 49 D7             2178 		RST.LIS	10h
040EF6                   2179 
040EF6                   2180 	; print text
040EF6 21 17 11 04       2181 	ld hl,void_filename
040EFA 01 00 00 00       2182 	ld bc,0
040EFE AF                2183 	xor a
040EFF 49 DF             2184 	rst.lis $18
040F01                   2185 
040F01 C9                2186 	ret
040F02                   2187 
040F02                   2188 ; print 'folder error'
040F02                   2189 fn_print_folder_error:
040F02                   2190 	vdu 7
040F02 3E 07             2190 		LD	A, function
040F04 49 D7             2190 		RST.LIS	10h
040F06                   2191 
040F06                   2192 	; locate x,y
040F06                   2193 	vdu 31
040F06 3E 1F             2193 		LD	A, function
040F08 49 D7             2193 		RST.LIS	10h
040F0A                   2194 	vdu FILENAME_X
040F0A 3E 07             2194 		LD	A, function
040F0C 49 D7             2194 		RST.LIS	10h
040F0E                   2195 	vdu FILENAME_Y
040F0E 3E 18             2195 		LD	A, function
040F10 49 D7             2195 		RST.LIS	10h
040F12                   2196 
040F12                   2197 	; print text
040F12 21 45 11 04       2198 	ld hl,folder_error
040F16 01 00 00 00       2199 	ld bc,0
040F1A AF                2200 	xor a
040F1B 49 DF             2201 	rst.lis $18
040F1D                   2202 
040F1D CD 09 0C 04       2203 	call fn_input_key
040F21                   2204 
040F21                   2205 	; locate x,y
040F21                   2206 	vdu 31
040F21 3E 1F             2206 		LD	A, function
040F23 49 D7             2206 		RST.LIS	10h
040F25                   2207 	vdu FILENAME_X
040F25 3E 07             2207 		LD	A, function
040F27 49 D7             2207 		RST.LIS	10h
040F29                   2208 	vdu FILENAME_Y
040F29 3E 18             2208 		LD	A, function
040F2B 49 D7             2208 		RST.LIS	10h
040F2D                   2209 
040F2D                   2210 	; print text
040F2D 21 17 11 04       2211 	ld hl,void_filename
040F31 01 00 00 00       2212 	ld bc,0
040F35 AF                2213 	xor a
040F36 49 DF             2214 	rst.lis $18
040F38                   2215 
040F38 C9                2216 	ret
040F39                   2217 
040F39                   2218 ; refresh all the current sprite frame
040F39                   2219 fn_refresh_sprite:
040F39 06 00             2220 	ld b,0 ; B -> x cordinate
040F3B 0E 00             2221 	ld c,0 ; C -> y cordinate
040F3D                   2222 
040F3D                   2223 rs_loop:
040F3D C5                2224 	push bc
040F3E                   2225 
040F3E 21 88 10 04       2226 	ld hl,xpix
040F42 70                2227 	ld (hl),b
040F43 21 89 10 04       2228 	ld hl,ypix
040F47 71                2229 	ld (hl),c
040F48 CD 9B 0A 04       2230 	call fn_draw_pixel_without_border
040F4C                   2231 
040F4C C1                2232 	pop bc
040F4D                   2233 
040F4D 04                2234 	inc b
040F4E 21 8B 10 04       2235 	ld hl,spr_size
040F52 7E                2236 	ld a,(hl)
040F53 B8                2237 	cp b
040F54 28 04             2238 	jr z,rs_next_line
040F56 C3 3D 0F 04       2239 	jp rs_loop
040F5A                   2240 
040F5A                   2241 rs_next_line:
040F5A 06 00             2242 	ld b,0
040F5C 0C                2243 	inc c
040F5D 21 8B 10 04       2244 	ld hl,spr_size
040F61 7E                2245 	ld a,(hl)
040F62 B9                2246 	cp c
040F63 28 04             2247 	jr z,rs_end
040F65 C3 3D 0F 04       2248 	jp rs_loop
040F69                   2249 
040F69                   2250 rs_end:
040F69 AF                2251 	xor a
040F6A 21 88 10 04       2252 	ld hl,xpix
040F6E 77                2253 	ld (hl),a
040F6F 21 89 10 04       2254 	ld hl,ypix
040F73 77                2255 	ld (hl),a
040F74 CD 87 0A 04       2256 	call fn_draw_pixel_with_border
040F78                   2257 
040F78 C9                2258 	ret
040F79                   2259 
040F79                   2260 fn_change_frame:
040F79 21 5D 11 04       2261 	ld hl,current_frame
040F7D 7E                2262 	ld a,(hl)
040F7E 3C                2263 	inc a
040F7F C6 30             2264 	add a,48
040F81 21 5F 11 04       2265 	ld hl,current_frame_ascii
040F85 77                2266 	ld (hl),a
040F86                   2267 
040F86                   2268 	; locate 21,3
040F86                   2269 	vdu 31
040F86 3E 1F             2269 		LD	A, function
040F88 49 D7             2269 		RST.LIS	10h
040F8A                   2270 	vdu 21
040F8A 3E 15             2270 		LD	A, function
040F8C 49 D7             2270 		RST.LIS	10h
040F8E                   2271 	vdu 3
040F8E 3E 03             2271 		LD	A, function
040F90 49 D7             2271 		RST.LIS	10h
040F92                   2272 
040F92                   2273 	; print text
040F92 21 5F 11 04       2274 	ld hl,current_frame_ascii
040F96 01 00 00 00       2275 	ld bc,0
040F9A AF                2276 	xor a
040F9B 49 DF             2277 	rst.lis $18
040F9D                   2278 
040F9D C9                2279 	ret
040F9E                   2280 
040F9E                   2281 fn_change_frames_count:
040F9E 21 5E 11 04       2282 	ld hl,frames_count
040FA2 7E                2283 	ld a,(hl)
040FA3 C6 30             2284 	add a,48
040FA5 21 61 11 04       2285 	ld hl,frames_count_ascii
040FA9 77                2286 	ld (hl),a
040FAA                   2287 
040FAA                   2288 	; locate 23,3
040FAA                   2289 	vdu 31
040FAA 3E 1F             2289 		LD	A, function
040FAC 49 D7             2289 		RST.LIS	10h
040FAE                   2290 	vdu 23
040FAE 3E 17             2290 		LD	A, function
040FB0 49 D7             2290 		RST.LIS	10h
040FB2                   2291 	vdu 3
040FB2 3E 03             2291 		LD	A, function
040FB4 49 D7             2291 		RST.LIS	10h
040FB6                   2292 
040FB6                   2293 	; print text
040FB6 21 61 11 04       2294 	ld hl,frames_count_ascii
040FBA 01 00 00 00       2295 	ld bc,0
040FBE AF                2296 	xor a
040FBF 49 DF             2297 	rst.lis $18
040FC1                   2298 
040FC1 C9                2299 	ret
040FC2                   2300 
040FC2                   2301 ; slowdown (wait delay)
040FC2                   2302 fn_slowdown:
040FC2 DD 21 63 11 04    2303 	ld ix,keydata
040FC7 DD 7E 02          2304 	ld a,(ix+2)
040FCA E6 02             2305 	and 2
040FCC FE 02             2306 	cp 2 ; shift key to disable delay
040FCE C8                2307 	ret z
040FCF                   2308 
040FCF                   2309 	moscall mos_sysvars
040FCF 3E 08             2309 		LD	A, function
040FD1 49 CF             2309 		RST.LIS	08h
040FD3 DD 4E 00          2310 	ld c,(ix+sysvar_time)
040FD6                   2311 
040FD6                   2312 sd_loop:
040FD6                   2313 	moscall mos_sysvars
040FD6 3E 08             2313 		LD	A, function
040FD8 49 CF             2313 		RST.LIS	08h
040FDA DD 7E 00          2314 	ld a,(ix+sysvar_time)
040FDD 91                2315 	sub c
040FDE FE 14             2316 	cp SLOWDOWN_DELAY
040FE0 20 F4             2317 	jr nz,sd_loop
040FE2 C9                2318 	ret
040FE3                   2319 
040FE3                   2320 fn_show_spr_descr:
040FE3                   2321 	; locate 15,3
040FE3                   2322 	vdu 31
040FE3 3E 1F             2322 		LD	A, function
040FE5 49 D7             2322 		RST.LIS	10h
040FE7                   2323 	vdu 15
040FE7 3E 0F             2323 		LD	A, function
040FE9 49 D7             2323 		RST.LIS	10h
040FEB                   2324 	vdu 3
040FEB 3E 03             2324 		LD	A, function
040FED 49 D7             2324 		RST.LIS	10h
040FEF                   2325 
040FEF                   2326 	; print text
040FEF 21 D6 10 04       2327 	ld hl,spr_descr
040FF3 01 00 00 00       2328 	ld bc,0
040FF7 AF                2329 	xor a
040FF8 49 DF             2330 	rst.lis $18
040FFA                   2331 
040FFA                   2332 	; locate 15,5
040FFA                   2333 	vdu 31
040FFA 3E 1F             2333 		LD	A, function
040FFC 49 D7             2333 		RST.LIS	10h
040FFE                   2334 	vdu 15
040FFE 3E 0F             2334 		LD	A, function
041000 49 D7             2334 		RST.LIS	10h
041002                   2335 	vdu 5
041002 3E 05             2335 		LD	A, function
041004 49 D7             2335 		RST.LIS	10h
041006                   2336 
041006                   2337 	; check for sprite size...
041006 21 8B 10 04       2338 	ld hl,spr_size
04100A 7E                2339 	ld a,(hl)
04100B                   2340 
04100B FE 04             2341 	cp 4
04100D 20 0C             2342 	jr nz,ssd_8x8
04100F                   2343 
04100F                   2344 	; print text 4x4
04100F 21 E0 10 04       2345 	ld hl,spr_descr1
041013 01 00 00 00       2346 	ld bc,0
041017 AF                2347 	xor a
041018 49 DF             2348 	rst.lis $18
04101A C9                2349 	ret
04101B                   2350 
04101B                   2351 ssd_8x8:
04101B FE 08             2352 	cp 8
04101D 20 0C             2353 	jr nz,ssd_16x16
04101F                   2354 
04101F                   2355 	; print text 8x8
04101F 21 E6 10 04       2356 	ld hl,spr_descr2
041023 01 00 00 00       2357 	ld bc,0
041027 AF                2358 	xor a
041028 49 DF             2359 	rst.lis $18
04102A C9                2360 	ret
04102B                   2361 
04102B                   2362 ssd_16x16:
04102B FE 10             2363 	cp 16
04102D 20 0C             2364 	jr nz,ssd_32x32
04102F                   2365 
04102F                   2366 	; print text 16x16
04102F 21 EC 10 04       2367 	ld hl,spr_descr3
041033 01 00 00 00       2368 	ld bc,0
041037 AF                2369 	xor a
041038 49 DF             2370 	rst.lis $18
04103A C9                2371 	ret
04103B                   2372 
04103B                   2373 ssd_32x32:
04103B                   2374 	; print text 32x32
04103B 21 F2 10 04       2375 	ld hl,spr_descr4
04103F 01 00 00 00       2376 	ld bc,0
041043 AF                2377 	xor a
041044 49 DF             2378 	rst.lis $18
041046                   2379 
041046 C9                2380 	ret
041047                   2381 
041047                   2382 ; input: HL = negative key to check
041047                   2383 fn_inkey:
041047                   2384 	moscall mos_getkbmap
041047 3E 1E             2384 		LD	A, function
041049 49 CF             2384 		RST.LIS	08h
04104B 23                2385 	INC	HL
04104C 7D                2386 	LD	A, L
04104D ED 44             2387 	NEG
04104F 4F                2388 	LD	C, A
041050 3E 01             2389 	LD	A, 1
041052 FA 76 10 04       2390 	JP	M,i_false ; < -128 ?
041056                   2391 
041056 21 45 00 04       2392 	LD	HL,BITLOOKUP
04105A 11 00 00 00       2393 	LD	DE,0
04105E 79                2394 	LD	A,C
04105F E6 07             2395 	AND	00000111b
041061 5F                2396 	LD	E,A
041062 19                2397 	ADD	HL,DE
041063 46                2398 	LD	B,(HL)
041064                   2399 
041064 79                2400 	LD	A,C
041065 E6 78             2401 	AND	01111000b
041067 0F                2402 	RRCA
041068 0F                2403 	RRCA
041069 0F                2404 	RRCA
04106A 5F                2405 	LD	E, A
04106B DD 19             2406 	ADD	IX,DE
04106D DD 7E 00          2407 	LD	A,(IX+0)
041070 A0                2408 	AND	B
041071 28 03             2409 	JR Z,i_false
041073 3E 01             2410 	LD A,1
041075 C9                2411 	RET
041076                   2412 i_false:
041076 AF                2413 	XOR A
041077 C9                2414 	RET
041078                   2415 
041078                   2416 ;======================================================================
041078                   2417 
041078                   2418 ; coordinates for rectangles
041078                   2419 x1:
041078 00 00             2420 	dw $0000
04107A                   2421 y1:
04107A 00 00             2422 	dw $0000
04107C                   2423 x2:
04107C 00 00             2424 	dw $0000
04107E                   2425 y2:
04107E 00 00             2426 	dw $0000
041080                   2427 
041080                   2428 ; coordinates of the edited sprite
041080                   2429 xs1:
041080 5F 00             2430 	dw 95
041082                   2431 ys1:
041082 37 00             2432 	dw 55
041084                   2433 xs2:
041084 E0 00             2434 	dw 224
041086                   2435 ys2:
041086 B8 00             2436 	dw 184
041088                   2437 
041088                   2438 ; coordinates of active pixels to draw
041088                   2439 xpix:
041088 00                2440 	db 0
041089                   2441 ypix:
041089 00                2442 	db 0
04108A                   2443 
04108A                   2444 ; width of a pixel in the sprite
04108A                   2445 pixel_width:
04108A 00                2446 	db 0
04108B                   2447 
04108B                   2448 ; sprite size, in resized pixels
04108B                   2449 spr_size:
04108B 00                2450 	db 0
04108C                   2451 
04108C                   2452 ; pen color (0-63)
04108C                   2453 current_pen:
04108C 00                2454 	db 0
04108D                   2455 
04108D                   2456 ; texts for 1st menu
04108D                   2457 title:
04108D 53 50 52 2D 45 44 2458 	db "SPR-EDIT",0
       49 54 00          
041096                   2459 
041096                   2460 menu1:
041096 46 31 2E 20 34 78 2461 	db "F1. 4x4 Sprite",0
       34 20 53 70 72 69 
       74 65 00          
0410A5                   2462 menu2:
0410A5 46 32 2E 20 38 78 2463 	db "F2. 8x8 Sprite",0
       38 20 53 70 72 69 
       74 65 00          
0410B4                   2464 menu3:
0410B4 46 33 2E 20 31 36 2465 	db "F3. 16x16 Sprite",0
       78 31 36 20 53 70 
       72 69 74 65 00    
0410C5                   2466 menu4:
0410C5 46 34 2E 20 33 32 2467 	db "F4. 32x32 Sprite",0
       78 33 32 20 53 70 
       72 69 74 65 00    
0410D6                   2468 
0410D6                   2469 ; descriptions of sprites
0410D6                   2470 spr_descr:
0410D6 46 72 61 6D 65 3A 2471 	db "Frame:1/1",0
       31 2F 31 00       
0410E0                   2472 spr_descr1:
0410E0 34 78 34 20 20 00 2473 	db "4x4  ",0
0410E6                   2474 spr_descr2:
0410E6 38 78 38 20 20 00 2475 	db "8x8  ",0
0410EC                   2476 spr_descr3:
0410EC 31 36 78 31 36 00 2477 	db "16x16",0
0410F2                   2478 spr_descr4:
0410F2 33 32 78 33 32 00 2479 	db "32x32",0
0410F8                   2480 
0410F8                   2481 ; label before filename
0410F8                   2482 filename_label:
0410F8 46 69 6C 65 6E 61 2483 	db "Filename:",0
       6D 65 3A 00       
041102                   2484 
041102                   2485 ; filename without extension
041102                   2486 filename:
041102 00 00 00 00 00 00 2487 	ds 13,0
       00 00 00 00 00 00 
       00                
04110F                   2488 
04110F                   2489 home_path:
04110F 2F 68 6F 6D 65 00 2490 	db "/home",0
041115                   2491 
041115                   2492 ; single space char to print
041115                   2493 spacechar:
041115 20 00             2494 	db " ",0
041117                   2495 
041117                   2496 ; spaces to remove filename label
041117                   2497 void_filename:
041117 20 20 20 20 20 20 2498 	db "                      ",0
       20 20 20 20 20 20 
       20 20 20 20 20 20 
       20 20 20 20 00    
04112E                   2499 
04112E                   2500 ; file error message
04112E                   2501 file_error:
04112E 46 69 6C 65 20 65 2502 	db "File error !          ",0
       72 72 6F 72 20 21 
       20 20 20 20 20 20 
       20 20 20 20 00    
041145                   2503 
041145                   2504 ; folder error message
041145                   2505 folder_error:
041145 46 6F 6C 64 65 72 2506 	db "Folder error !        ",0
       20 65 72 72 6F 72 
       20 21 20 20 20 20 
       20 20 20 20 00    
04115C                   2507 
04115C                   2508 ; number of colors
04115C                   2509 colors_count:
04115C 00                2510 	db 0
04115D                   2511 
04115D                   2512 ; current frame
04115D                   2513 current_frame:
04115D 00                2514 	db 0
04115E                   2515 
04115E                   2516 ; frames count
04115E                   2517 frames_count:
04115E 00                2518 	db 0
04115F                   2519 
04115F                   2520 current_frame_ascii:
04115F 30 00             2521 	db '0',0
041161                   2522 
041161                   2523 frames_count_ascii:
041161 30 00             2524 	db '0',0
041163                   2525 
041163                   2526 ; keycode, keydown & keymods are stored here
041163                   2527 keydata:
041163 00 00 00          2528 	db 0,0,0
041166                   2529 
041166                   2530 ; buffer for the current sprite
041166                   2531 sprite_buffer:
041166 00 00 00 00 00 00 2532 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
041166 00 00 00 00 00 00 2532 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
041166 00 00 00 00 00 00 2532 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
041166 00 00 00 00 00 00 2532 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
041166 00 00 00 00 00 00 2532 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
041166 00 00 00 00 00 00 2532 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00             
043166                   2533 
043166                   2534 rgb_palette:
043166 00 00 00          2535 	db $00,$00,$00
043169 AA 00 00          2536 	db $AA,$00,$00
04316C 00 AA 00          2537 	db $00,$AA,$00
04316F AA AA 00          2538 	db $AA,$AA,$00
043172 00 00 AA          2539 	db $00,$00,$AA
043175 AA 00 AA          2540 	db $AA,$00,$AA
043178 00 AA AA          2541 	db $00,$AA,$AA
04317B AA AA AA          2542 	db $AA,$AA,$AA
04317E                   2543 
04317E 55 55 55          2544 	db $55,$55,$55
043181 FF 00 00          2545 	db $FF,$00,$00
043184 00 FF 00          2546 	db $00,$FF,$00
043187 FF FF 00          2547 	db $FF,$FF,$00
04318A 00 00 FF          2548 	db $00,$00,$FF
04318D FF 00 FF          2549 	db $FF,$00,$FF
043190 00 FF FF          2550 	db $00,$FF,$FF
043193 FF FF FF          2551 	db $FF,$FF,$FF
043196                   2552 
043196 00 00 55          2553 	db $00,$00,$55
043199 00 55 00          2554 	db $00,$55,$00
04319C 00 55 55          2555 	db $00,$55,$55
04319F 00 55 AA          2556 	db $00,$55,$AA
0431A2 00 55 FF          2557 	db $00,$55,$FF
0431A5 00 AA 55          2558 	db $00,$AA,$55
0431A8 00 AA FF          2559 	db $00,$AA,$FF
0431AB 00 FF 55          2560 	db $00,$FF,$55
0431AE                   2561 
0431AE 00 FF AA          2562 	db $00,$FF,$AA
0431B1 55 00 00          2563 	db $55,$00,$00
0431B4 55 00 55          2564 	db $55,$00,$55
0431B7 55 00 AA          2565 	db $55,$00,$AA
0431BA 55 00 FF          2566 	db $55,$00,$FF
0431BD 55 55 00          2567 	db $55,$55,$00
0431C0 55 55 AA          2568 	db $55,$55,$AA
0431C3 55 55 FF          2569 	db $55,$55,$FF
0431C6                   2570 
0431C6 55 AA 00          2571 	db $55,$AA,$00
0431C9 55 AA 55          2572 	db $55,$AA,$55
0431CC 55 AA AA          2573 	db $55,$AA,$AA
0431CF 55 AA FF          2574 	db $55,$AA,$FF
0431D2 55 FF 00          2575 	db $55,$FF,$00
0431D5 55 FF 55          2576 	db $55,$FF,$55
0431D8 55 FF AA          2577 	db $55,$FF,$AA
0431DB 55 FF FF          2578 	db $55,$FF,$FF
0431DE                   2579 
0431DE AA 00 55          2580 	db $AA,$00,$55
0431E1 AA 00 FF          2581 	db $AA,$00,$FF
0431E4 AA 55 00          2582 	db $AA,$55,$00
0431E7 AA 55 55          2583 	db $AA,$55,$55
0431EA AA 55 AA          2584 	db $AA,$55,$AA
0431ED AA 55 FF          2585 	db $AA,$55,$FF
0431F0 AA AA 55          2586 	db $AA,$AA,$55
0431F3 AA AA FF          2587 	db $AA,$AA,$FF
0431F6                   2588 
0431F6 AA FF 00          2589 	db $AA,$FF,$00
0431F9 AA FF 55          2590 	db $AA,$FF,$55
0431FC AA FF AA          2591 	db $AA,$FF,$AA
0431FF AA FF FF          2592 	db $AA,$FF,$FF
043202 FF 00 55          2593 	db $FF,$00,$55
043205 FF 00 AA          2594 	db $FF,$00,$AA
043208 FF 55 00          2595 	db $FF,$55,$00
04320B FF 55 55          2596 	db $FF,$55,$55
04320E                   2597 
04320E FF 55 AA          2598 	db $FF,$55,$AA
043211 FF 55 FF          2599 	db $FF,$55,$FF
043214 FF AA 00          2600 	db $FF,$AA,$00
043217 FF AA 55          2601 	db $FF,$AA,$55
04321A FF AA AA          2602 	db $FF,$AA,$AA
04321D FF AA FF          2603 	db $FF,$AA,$FF
043220 FF FF 55          2604 	db $FF,$FF,$55
043223 FF FF AA          2605 	db $FF,$FF,$AA
043226                   2606 
043226                   2607 ; sprite structure:
043226                   2608 ; =================
043226                   2609 ; colors_count  :   byte
043226                   2610 ; frames count	:	byte
043226                   2611 ; spr size		:	byte
043226                   2612 ; data			:   width x height bytes of colors
043226                   2613 
043226                   2614 
043226                   2615 ; TODO:
043226                   2616 ;---------
043226                   2617 ; add/remove frames must be done correctly
043226                   2618 ; read animations with 'p' key
043226                   2619 ; create a help text file with keyboard shorcuts list
043226                   2620 ; solve the 'copy frame' bug
043226                   2621 ; solve the bug of frames in fn_load/save sprite
