PC     Output            Line Source
040000                   0001 ; spredit.asm
040000                   0002 ;
040000                   0003 ; by B.Vignoli
040000                   0004 ; MIT 2023
040000                   0005 ;
040000                   0006 
040000                   0007 .assume adl=1
040000                   0008 .org $040000
040000                   0009 
040000 C3 4D 00 04       0010 	jp start
040004                   0011 
040004                   0012 ; MOS header
040004 FF FF FF FF FF FF 0013 .align 64
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
040040 4D 4F 53 00 01    0014 .db "MOS",0,1
040045                   0015 
040045                   0016 	include "mos_api.inc"
040045                   0001 ;
040045                   0002 ; Title:	AGON MOS - API for user projects
040045                   0003 ; Author:	Dean Belfield
040045                   0004 ; Created:	03/08/2022
040045                   0005 ; Last Updated:	10/08/2023
040045                   0006 ;
040045                   0007 ; Modinfo:
040045                   0008 ; 05/08/2022:	Added mos_feof
040045                   0009 ; 09/08/2022:	Added system variables: cursorX, cursorY
040045                   0010 ; 18/08/2022:	Added system variables: scrchar, scrpixel, audioChannel, audioSuccess, vpd_pflags
040045                   0011 ; 05/09/2022:	Added mos_ren, vdp_pflag_mode
040045                   0012 ; 24/09/2022:	Added mos_getError, mos_mkdir
040045                   0013 ; 13/10/2022:	Added mos_oscli
040045                   0014 ; 23/02/2023:	Added more sysvars, fixed typo in sysvar_audioSuccess, offsets for sysvar_scrCols, sysvar_scrRows
040045                   0015 ; 04/03/2023:	Added sysvar_scrpixelIndex
040045                   0016 ; 08/03/2023:	Renamed sysvar_keycode to sysvar_keyascii, added sysvar_vkeycode
040045                   0017 ; 15/03/2023:	Added mos_copy, mos_getrtc, mos_setrtc, rtc, vdp_pflag_rtc
040045                   0018 ; 21/03/2023:	Added mos_setintvector, sysvars for keyboard status, vdu codes for vdp
040045                   0019 ; 22/03/2023:	The VDP commands are now indexed from 0x80
040045                   0020 ; 29/03/2023:	Added mos_uopen, mos_uclose, mos_ugetc, mos_uputc
040045                   0021 ; 13/04/2023:	Added FatFS file structures (FFOBJID, FIL, DIR, FILINFO)
040045                   0022 ; 15/04/2023:	Added mos_getfil, mos_fread, mos_fwrite and mos_flseek
040045                   0023 ; 19/05/2023:	Added sysvar_scrMode
040045                   0024 ; 05/06/2023:	Added sysvar_rtcEnable
040045                   0025 ; 03/08/2023:	Added mos_setkbvector
040045                   0026 ; 10/08/2023:	Added mos_getkbmap
040045                   0027 
040045                   0028 ; VDP control (VDU 23, 0, n)
040045                   0029 ;
040045                   0030 vdp_gp:			EQU 	80h
040045                   0031 vdp_keycode:		EQU 	81h
040045                   0032 vdp_cursor:		EQU	82h
040045                   0033 vdp_scrchar:		EQU	83h
040045                   0034 vdp_scrpixel:		EQU	84h
040045                   0035 vdp_audio:		EQU	85h
040045                   0036 vdp_mode:		EQU	86h
040045                   0037 vdp_rtc:		EQU	87h
040045                   0038 vdp_keystate:		EQU	88h
040045                   0039 vdp_logicalcoords:	EQU	C0h
040045                   0040 vdp_terminalmode:	EQU	FFh
040045                   0041 
040045                   0042 ; MOS high level functions
040045                   0043 ;
040045                   0044 mos_getkey:		EQU	00h
040045                   0045 mos_load:		EQU	01h
040045                   0046 mos_save:		EQU	02h
040045                   0047 mos_cd:			EQU	03h
040045                   0048 mos_dir:		EQU	04h
040045                   0049 mos_del:		EQU	05h
040045                   0050 mos_ren:		EQU	06h
040045                   0051 mos_mkdir:		EQU	07h
040045                   0052 mos_sysvars:		EQU	08h
040045                   0053 mos_editline:		EQU	09h
040045                   0054 mos_fopen:		EQU	0Ah
040045                   0055 mos_fclose:		EQU	0Bh
040045                   0056 mos_fgetc:		EQU	0Ch
040045                   0057 mos_fputc:		EQU	0Dh
040045                   0058 mos_feof:		EQU	0Eh
040045                   0059 mos_getError:		EQU	0Fh
040045                   0060 mos_oscli:		EQU	10h
040045                   0061 mos_copy:		EQU	11h
040045                   0062 mos_getrtc:		EQU	12h
040045                   0063 mos_setrtc:		EQU	13h
040045                   0064 mos_setintvector:	EQU	14h
040045                   0065 mos_uopen:		EQU	15h
040045                   0066 mos_uclose:		EQU	16h
040045                   0067 mos_ugetc:		EQU	17h
040045                   0068 mos_uputc:		EQU 	18h
040045                   0069 mos_getfil:		EQU	19h
040045                   0070 mos_fread:		EQU	1Ah
040045                   0071 mos_fwrite:		EQU	1Bh
040045                   0072 mos_flseek:		EQU	1Ch
040045                   0073 mos_setkbvector:	EQU	1Dh
040045                   0074 mos_getkbmap:		EQU	1Eh
040045                   0075 
040045                   0076 ; FatFS file access functions
040045                   0077 ;
040045                   0078 ffs_fopen:		EQU	80h
040045                   0079 ffs_fclose:		EQU	81h
040045                   0080 ffs_fread:		EQU	82h
040045                   0081 ffs_fwrite:		EQU	83h
040045                   0082 ffs_flseek:		EQU	84h
040045                   0083 ffs_ftruncate:		EQU	85h
040045                   0084 ffs_fsync:		EQU	86h
040045                   0085 ffs_fforward:		EQU	87h
040045                   0086 ffs_fexpand:		EQU	88h
040045                   0087 ffs_fgets:		EQU	89h
040045                   0088 ffs_fputc:		EQU	8Ah
040045                   0089 ffs_fputs:		EQU	8Bh
040045                   0090 ffs_fprintf:		EQU	8Ch
040045                   0091 ffs_ftell:		EQU	8Dh
040045                   0092 ffs_feof:		EQU	8Eh
040045                   0093 ffs_fsize:		EQU	8Fh
040045                   0094 ffs_ferror:		EQU	90h
040045                   0095 
040045                   0096 ; FatFS directory access functions
040045                   0097 ;
040045                   0098 ffs_dopen:		EQU	91h
040045                   0099 ffs_dclose:		EQU	92h
040045                   0100 ffs_dread:		EQU	93h
040045                   0101 ffs_dfindfirst:		EQU	94h
040045                   0102 ffs_dfindnext:		EQU	95h
040045                   0103 
040045                   0104 ; FatFS file and directory management functions
040045                   0105 ;
040045                   0106 ffs_stat:		EQU	96h
040045                   0107 ffs_unlink:		EQU	97h
040045                   0108 ffs_rename:		EQU	98h
040045                   0109 ffs_chmod:		EQU	99h
040045                   0110 ffs_utime:		EQU	9Ah
040045                   0111 ffs_mkdir:		EQU	9Bh
040045                   0112 ffs_chdir:		EQU	9Ch
040045                   0113 ffs_chdrive:		EQU	9Dh
040045                   0114 ffs_getcwd:		EQU	9Eh
040045                   0115 
040045                   0116 ; FatFS volume management and system configuration functions
040045                   0117 ;
040045                   0118 ffs_mount:		EQU	9Fh
040045                   0119 ffs_mkfs:		EQU	A0h
040045                   0120 ffs_fdisk:		EQU	A1h
040045                   0121 ffs_getfree:		EQU	A2h
040045                   0122 ffs_getlabel:		EQU	A3h
040045                   0123 ffs_setlabel:		EQU	A4h
040045                   0124 ffs_setcp:		EQU	A5h
040045                   0125 
040045                   0126 ; File access modes
040045                   0127 ;
040045                   0128 fa_read:		EQU	01h
040045                   0129 fa_write:		EQU	02h
040045                   0130 fa_open_existing:	EQU	00h
040045                   0131 fa_create_new:		EQU	04h
040045                   0132 fa_create_always:	EQU	08h
040045                   0133 fa_open_always:		EQU	10h
040045                   0134 fa_open_append:		EQU	30h
040045                   0135 
040045                   0136 ; System variable indexes for api_sysvars
040045                   0137 ; Index into _sysvars in globals.asm
040045                   0138 ;
040045                   0139 sysvar_time:		EQU	00h	; 4: Clock timer in centiseconds (incremented by 2 every VBLANK)
040045                   0140 sysvar_vpd_pflags:	EQU	04h	; 1: Flags to indicate completion of VDP commands
040045                   0141 sysvar_keyascii:	EQU	05h	; 1: ASCII keycode, or 0 if no key is pressed
040045                   0142 sysvar_keymods:		EQU	06h	; 1: Keycode modifiers
040045                   0143 sysvar_cursorX:		EQU	07h	; 1: Cursor X position
040045                   0144 sysvar_cursorY:		EQU	08h	; 1: Cursor Y position
040045                   0145 sysvar_scrchar:		EQU	09h	; 1: Character read from screen
040045                   0146 sysvar_scrpixel:	EQU	0Ah	; 3: Pixel data read from screen (R,B,G)
040045                   0147 sysvar_audioChannel:	EQU	0Dh	; 1: Audio channel
040045                   0148 sysvar_audioSuccess:	EQU	0Eh	; 1: Audio channel note queued (0 = no, 1 = yes)
040045                   0149 sysvar_scrWidth:	EQU	0Fh	; 2: Screen width in pixels
040045                   0150 sysvar_scrHeight:	EQU	11h	; 2: Screen height in pixels
040045                   0151 sysvar_scrCols:		EQU	13h	; 1: Screen columns in characters
040045                   0152 sysvar_scrRows:		EQU	14h	; 1: Screen rows in characters
040045                   0153 sysvar_scrColours:	EQU	15h	; 1: Number of colours displayed
040045                   0154 sysvar_scrpixelIndex:	EQU	16h	; 1: Index of pixel data read from screen
040045                   0155 sysvar_vkeycode:	EQU	17h	; 1: Virtual key code from FabGL
040045                   0156 sysvar_vkeydown:	EQU	18h	; 1: Virtual key state from FabGL (0=up, 1=down)
040045                   0157 sysvar_vkeycount:	EQU	19h	; 1: Incremented every time a key packet is received
040045                   0158 sysvar_rtc:		EQU	1Ah	; 6: Real time clock data
040045                   0159 sysvar_spare:		EQU	20h	; 2: Spare, previously used by rtc
040045                   0160 sysvar_keydelay:	EQU	22h	; 2: Keyboard repeat delay
040045                   0161 sysvar_keyrate:		EQU	24h	; 2: Keyboard repeat reat
040045                   0162 sysvar_keyled:		EQU	26h	; 1: Keyboard LED status
040045                   0163 sysvar_scrMode:		EQU	27h	; 1: Screen mode
040045                   0164 sysvar_rtcEnable:	EQU	28h	; 1: RTC enable flag (0: disabled, 1: use ESP32 RTC)
040045                   0165 
040045                   0166 ; Flags for the VPD protocol
040045                   0167 ;
040045                   0168 vdp_pflag_cursor:	EQU	00000001b
040045                   0169 vdp_pflag_scrchar:	EQU	00000010b
040045                   0170 vdp_pflag_point:	EQU	00000100b
040045                   0171 vdp_pflag_audio:	EQU	00001000b
040045                   0172 vdp_pflag_mode:		EQU	00010000b
040045                   0173 vdp_pflag_rtc:		EQU	00100000b
040045                   0174 
040045                   0175 ;
040045                   0176 ; Macro for calling the API
040045                   0177 ; Parameters:
040045                   0178 ; - function: One of the function numbers listed above
040045                   0179 ;
040045                   0180 	MACRO moscall function
040045                   0181 		LD	A, function
040045                   0182 		RST.LIS	08h
040045                   0183 	ENDMACRO
040045                   0184 
040045                   0185 	MACRO vdu function
040045                   0186 		LD	A, function
040045                   0187 		RST.LIS	10h
040045                   0188 	ENDMACRO
040045                   0189 
040045                   0190 	MACRO vdu_a
040045                   0191 		RST.LIS	10h
040045                   0192 	ENDMACRO
040045                   0017 
040045                   0018 MAX_COLORS:		 	equ 64
040045                   0019 COLOR_MIN:	 		equ 0
040045                   0020 COLOR_MAX:	 		equ 63
040045                   0021 
040045                   0022 MAX_FRAMES:			equ 8
040045                   0023 
040045                   0024 COLOR_WHITE:		equ 15
040045                   0025 COLOR_GREY:			equ 7
040045                   0026 COLOR_BLACK:		equ 0
040045                   0027 
040045                   0028 TITLE_X: 	equ 17
040045                   0029 TITLE_Y: 	equ 2
040045                   0030 MENU_X: 	equ 13
040045                   0031 MENU1_Y: 	equ 8
040045                   0032 MENU2_Y: 	equ 12
040045                   0033 MENU3_Y: 	equ 16
040045                   0034 MENU4_Y: 	equ 20
040045                   0035 MENU5_Y: 	equ 24
040045                   0036 FILENAME_X: equ 7
040045                   0037 FILENAME_Y: equ 24
040045                   0038 
040045                   0039 SPR44: 		equ 4
040045                   0040 SPR88: 		equ 8
040045                   0041 SPR1616: 	equ 16
040045                   0042 SPR3232: 	equ 32
040045                   0043 
040045                   0044 SPR44_width: 	equ 32
040045                   0045 SPR88_width: 	equ 16
040045                   0046 SPR1616_width: 	equ 8
040045                   0047 SPR3232_width: 	equ 4
040045                   0048 
040045                   0049 BUFFER_SIZE:			equ 8192 ; 8 frames
040045                   0050 ONE_FRAME_BUFFER_SIZE:	equ 1024
040045                   0051 
040045                   0052 SLOWDOWN_DELAY:	equ 20
040045                   0053 
040045                   0054 KEY_SPACE: equ -99
040045                   0055 KEY_UP: equ -58
040045                   0056 KEY_DOWN: equ -42
040045                   0057 KEY_LEFT: equ -26
040045                   0058 KEY_RIGHT: equ -122
040045                   0059 KEY_DELETE: equ -90
040045                   0060 KEY_TAB: equ -97
040045                   0061 KEY_N: equ -86
040045                   0062 KEY_C: equ -83
040045                   0063 KEY_BACKSPACE: equ -48
040045                   0064 KEY_PGUP: equ -64
040045                   0065 KEY_PGDOWN: equ -79
040045                   0066 KEY_L: equ -87
040045                   0067 KEY_S: equ -82
040045                   0068 KEY_E: equ -35
040045                   0069 KEY_R: equ -52
040045                   0070 KEY_F: equ -68
040045                   0071 KEY_M: equ -102
040045                   0072 KEY_ESCAPE: equ -113
040045                   0073 KEY_F1: equ -114
040045                   0074 KEY_F2: equ -115
040045                   0075 KEY_F3: equ -116
040045                   0076 KEY_F4: equ -21
040045                   0077 
040045                   0078 BITLOOKUP:
040045 01 02 04 08       0079 	DB 01h,02h,04h,08h
040049 10 20 40 80       0080 	DB 10h,20h,40h,80h
04004D                   0081 
04004D                   0082 ;======================================================================
04004D                   0083 start:
04004D F5                0084 	push af
04004E C5                0085 	push bc
04004F D5                0086 	push de
040050 DD E5             0087 	push ix
040052 FD E5             0088 	push iy
040054                   0089 
040054                   0090 	; set mode 8 (320x240x64)
040054                   0091 	vdu 22
040054 3E 16             0091 		LD	A, function
040056 49 D7             0091 		RST.LIS	10h
040058                   0092 	vdu 8
040058 3E 08             0092 		LD	A, function
04005A 49 D7             0092 		RST.LIS	10h
04005C                   0093 
04005C                   0094 	; set logical coordinates system
04005C                   0095 	vdu 23
04005C 3E 17             0095 		LD	A, function
04005E 49 D7             0095 		RST.LIS	10h
040060                   0096 	vdu 0
040060 3E 00             0096 		LD	A, function
040062 49 D7             0096 		RST.LIS	10h
040064                   0097 	vdu $c0
040064 3E C0             0097 		LD	A, function
040066 49 D7             0097 		RST.LIS	10h
040068                   0098 	vdu 0
040068 3E 00             0098 		LD	A, function
04006A 49 D7             0098 		RST.LIS	10h
04006C                   0099 
04006C                   0100 	; set text colors
04006C                   0101 	vdu 17
04006C 3E 11             0101 		LD	A, function
04006E 49 D7             0101 		RST.LIS	10h
040070                   0102 	vdu 128 ; black background
040070 3E 80             0102 		LD	A, function
040072 49 D7             0102 		RST.LIS	10h
040074                   0103 
040074                   0104 	vdu 17
040074 3E 11             0104 		LD	A, function
040076 49 D7             0104 		RST.LIS	10h
040078                   0105 	vdu COLOR_WHITE ; white pen
040078 3E 0F             0105 		LD	A, function
04007A 49 D7             0105 		RST.LIS	10h
04007C                   0106 
04007C                   0107 	; set graphics pen
04007C                   0108 	vdu 18
04007C 3E 12             0108 		LD	A, function
04007E 49 D7             0108 		RST.LIS	10h
040080                   0109 	vdu 0
040080 3E 00             0109 		LD	A, function
040082 49 D7             0109 		RST.LIS	10h
040084                   0110 	vdu COLOR_WHITE ; white pen
040084 3E 0F             0110 		LD	A, function
040086 49 D7             0110 		RST.LIS	10h
040088                   0111 
040088                   0112 	; hide cursor
040088                   0113 	vdu 23
040088 3E 17             0113 		LD	A, function
04008A 49 D7             0113 		RST.LIS	10h
04008C                   0114 	vdu 1
04008C 3E 01             0114 		LD	A, function
04008E 49 D7             0114 		RST.LIS	10h
040090                   0115 	vdu 0
040090 3E 00             0115 		LD	A, function
040092 49 D7             0115 		RST.LIS	10h
040094                   0116 
040094                   0117 	; store coordinates
040094 DD 21 69 12 04    0118 	ld ix,x1
040099 21 00 00 00       0119 	ld hl,0
04009D DD 75 00          0120 	ld (ix+0),l
0400A0 DD 74 01          0121 	ld (ix+1),h
0400A3                   0122 
0400A3 DD 21 6B 12 04    0123 	ld ix,y1
0400A8 21 00 00 00       0124 	ld hl,0
0400AC DD 75 00          0125 	ld (ix+0),l
0400AF DD 74 01          0126 	ld (ix+1),h
0400B2                   0127 
0400B2 DD 21 6D 12 04    0128 	ld ix,x2
0400B7 21 3F 01 00       0129 	ld hl,319
0400BB DD 75 00          0130 	ld (ix+0),l
0400BE DD 74 01          0131 	ld (ix+1),h
0400C1                   0132 
0400C1 DD 21 6F 12 04    0133 	ld ix,y2
0400C6 21 EF 00 00       0134 	ld hl,239
0400CA DD 75 00          0135 	ld (ix+0),l
0400CD DD 74 01          0136 	ld (ix+1),h
0400D0                   0137 
0400D0                   0138 	; draw the border rectangle
0400D0 CD 21 09 04       0139 	call fn_rect
0400D4                   0140 
0400D4                   0141 	; locate x,y
0400D4                   0142 	vdu 31
0400D4 3E 1F             0142 		LD	A, function
0400D6 49 D7             0142 		RST.LIS	10h
0400D8                   0143 	vdu TITLE_X
0400D8 3E 11             0143 		LD	A, function
0400DA 49 D7             0143 		RST.LIS	10h
0400DC                   0144 	vdu TITLE_Y
0400DC 3E 02             0144 		LD	A, function
0400DE 49 D7             0144 		RST.LIS	10h
0400E0                   0145 
0400E0                   0146 	; print text
0400E0 21 7E 12 04       0147 	ld hl,title
0400E4 01 00 00 00       0148 	ld bc,0
0400E8 AF                0149 	xor a
0400E9 49 DF             0150 	rst.lis $18
0400EB                   0151 
0400EB                   0152 	; locate x,y
0400EB                   0153 	vdu 31
0400EB 3E 1F             0153 		LD	A, function
0400ED 49 D7             0153 		RST.LIS	10h
0400EF                   0154 	vdu MENU_X
0400EF 3E 0D             0154 		LD	A, function
0400F1 49 D7             0154 		RST.LIS	10h
0400F3                   0155 	vdu MENU1_Y
0400F3 3E 08             0155 		LD	A, function
0400F5 49 D7             0155 		RST.LIS	10h
0400F7                   0156 
0400F7                   0157 	; print text
0400F7 21 87 12 04       0158 	ld hl,menu1
0400FB 01 00 00 00       0159 	ld bc,0
0400FF AF                0160 	xor a
040100 49 DF             0161 	rst.lis $18
040102                   0162 
040102                   0163 	; locate x,y
040102                   0164 	vdu 31
040102 3E 1F             0164 		LD	A, function
040104 49 D7             0164 		RST.LIS	10h
040106                   0165 	vdu MENU_X
040106 3E 0D             0165 		LD	A, function
040108 49 D7             0165 		RST.LIS	10h
04010A                   0166 	vdu MENU2_Y
04010A 3E 0C             0166 		LD	A, function
04010C 49 D7             0166 		RST.LIS	10h
04010E                   0167 
04010E                   0168 	; print text
04010E 21 96 12 04       0169 	ld hl,menu2
040112 01 00 00 00       0170 	ld bc,0
040116 AF                0171 	xor a
040117 49 DF             0172 	rst.lis $18
040119                   0173 
040119                   0174 	; locate x,y
040119                   0175 	vdu 31
040119 3E 1F             0175 		LD	A, function
04011B 49 D7             0175 		RST.LIS	10h
04011D                   0176 	vdu MENU_X
04011D 3E 0D             0176 		LD	A, function
04011F 49 D7             0176 		RST.LIS	10h
040121                   0177 	vdu MENU3_Y
040121 3E 10             0177 		LD	A, function
040123 49 D7             0177 		RST.LIS	10h
040125                   0178 
040125                   0179 	; print text
040125 21 A5 12 04       0180 	ld hl,menu3
040129 01 00 00 00       0181 	ld bc,0
04012D AF                0182 	xor a
04012E 49 DF             0183 	rst.lis $18
040130                   0184 
040130                   0185 	; locate x,y
040130                   0186 	vdu 31
040130 3E 1F             0186 		LD	A, function
040132 49 D7             0186 		RST.LIS	10h
040134                   0187 	vdu MENU_X
040134 3E 0D             0187 		LD	A, function
040136 49 D7             0187 		RST.LIS	10h
040138                   0188 	vdu MENU4_Y
040138 3E 14             0188 		LD	A, function
04013A 49 D7             0188 		RST.LIS	10h
04013C                   0189 
04013C                   0190 	; print text
04013C 21 B6 12 04       0191 	ld hl,menu4
040140 01 00 00 00       0192 	ld bc,0
040144 AF                0193 	xor a
040145 49 DF             0194 	rst.lis $18
040147                   0195 
040147                   0196 ; menu loop
040147                   0197 menu_loop:
040147 21 8F FF FF       0198 	ld hl,KEY_ESCAPE
04014B CD 1B 12 04       0199 	call fn_inkey
04014F FE 01             0200 	CP 1
040151 CA FD 08 04       0201 	jp z,exit_program
040155                   0202 
040155 21 8E FF FF       0203 	ld hl,KEY_F1
040159 CD 1B 12 04       0204 	call fn_inkey
04015D FE 01             0205 	CP 1
04015F CA 91 01 04       0206 	jp z,ml_menu1
040163                   0207 
040163 21 8D FF FF       0208 	ld hl,KEY_F2
040167 CD 1B 12 04       0209 	call fn_inkey
04016B FE 01             0210 	CP 1
04016D CA 97 01 04       0211 	jp z,ml_menu2
040171                   0212 
040171 21 8C FF FF       0213 	ld hl,KEY_F3
040175 CD 1B 12 04       0214 	call fn_inkey
040179 FE 01             0215 	CP 1
04017B CA 9D 01 04       0216 	jp z,ml_menu3
04017F                   0217 
04017F 21 EB FF FF       0218 	ld hl,KEY_F4
040183 CD 1B 12 04       0219 	call fn_inkey
040187 FE 01             0220 	CP 1
040189 CA A3 01 04       0221 	jp z,ml_menu4
04018D                   0222 
04018D C3 47 01 04       0223 	jp menu_loop
040191                   0224 
040191                   0225 ml_menu1:
040191 3E 04             0226 	ld a,SPR44
040193 16 20             0227 	ld d,SPR44_width
040195 18 10             0228 	jr exit_menu_loop
040197                   0229 
040197                   0230 ml_menu2:
040197 3E 08             0231 	ld a,SPR88
040199 16 10             0232 	ld d,SPR88_width
04019B 18 0A             0233 	jr exit_menu_loop
04019D                   0234 
04019D                   0235 ml_menu3:
04019D 3E 10             0236 	ld a,SPR1616
04019F 16 08             0237 	ld d,SPR1616_width
0401A1 18 04             0238 	jr exit_menu_loop
0401A3                   0239 
0401A3                   0240 ml_menu4:
0401A3 3E 20             0241 	ld a,SPR3232
0401A5 16 04             0242 	ld d,SPR3232_width
0401A7                   0243 
0401A7                   0244 exit_menu_loop:
0401A7                   0245 	; store edited sprite size
0401A7 21 7C 12 04       0246 	ld hl,spr_size
0401AB 77                0247 	ld (hl),a
0401AC 21 7B 12 04       0248 	ld hl,pixel_width
0401B0 72                0249 	ld (hl),d
0401B1                   0250 
0401B1                   0251 	; clear the text screen
0401B1                   0252 	vdu 12
0401B1 3E 0C             0252 		LD	A, function
0401B3 49 D7             0252 		RST.LIS	10h
0401B5                   0253 
0401B5                   0254 	; draw the palette
0401B5 0E 00             0255 	ld c,0
0401B7                   0256 
0401B7                   0257 palette_loop:
0401B7 C5                0258 	push bc
0401B8                   0259 
0401B8                   0260 	; choose palette color
0401B8                   0261 	vdu 18
0401B8 3E 12             0261 		LD	A, function
0401BA 49 D7             0261 		RST.LIS	10h
0401BC                   0262 	vdu 0
0401BC 3E 00             0262 		LD	A, function
0401BE 49 D7             0262 		RST.LIS	10h
0401C0 C1                0263 	pop bc
0401C1 C5                0264 	push bc
0401C2 79                0265 	ld a,c
0401C3                   0266 	vdu_a
0401C3 49 D7             0266 		RST.LIS	10h
0401C5                   0267 
0401C5                   0268 	; store coordinates for a palette square
0401C5 DD 21 69 12 04    0269 	ld ix,x1
0401CA E1                0270 	pop hl
0401CB E5                0271 	push hl
0401CC 26 05             0272 	ld h,5
0401CE ED 6C             0273 	mlt hl
0401D0 E5                0274 	push hl
0401D1 DD 75 00          0275 	ld (ix+0),l
0401D4 DD 74 01          0276 	ld (ix+1),h
0401D7                   0277 
0401D7 DD 21 6B 12 04    0278 	ld ix,y1
0401DC 21 00 00 00       0279 	ld hl,0
0401E0 DD 75 00          0280 	ld (ix+0),l
0401E3 DD 74 01          0281 	ld (ix+1),h
0401E6                   0282 
0401E6 DD 21 6D 12 04    0283 	ld ix,x2
0401EB E1                0284 	pop hl
0401EC 11 04 00 00       0285 	ld de,4
0401F0 19                0286 	add hl,de
0401F1 DD 75 00          0287 	ld (ix+0),l
0401F4 DD 74 01          0288 	ld (ix+1),h
0401F7                   0289 
0401F7 DD 21 6F 12 04    0290 	ld ix,y2
0401FC 21 0A 00 00       0291 	ld hl,10
040200 DD 75 00          0292 	ld (ix+0),l
040203 DD 74 01          0293 	ld (ix+1),h
040206                   0294 
040206                   0295 	; draw the palette filled square
040206 CD E0 09 04       0296 	call fn_rectf
04020A                   0297 
04020A                   0298 	; next color ?
04020A C1                0299 	pop bc
04020B 0C                0300 	inc c
04020C 79                0301 	ld a,c
04020D FE 40             0302 	cp MAX_COLORS
04020F C2 B7 01 04       0303 	jp nz,palette_loop
040213                   0304 
040213                   0305 	; store coordinates
040213 DD 21 69 12 04    0306 	ld ix,x1
040218 21 00 00 00       0307 	ld hl,0
04021C DD 75 00          0308 	ld (ix+0),l
04021F DD 74 01          0309 	ld (ix+1),h
040222                   0310 
040222 DD 21 6B 12 04    0311 	ld ix,y1
040227 21 0B 00 00       0312 	ld hl,11
04022B DD 75 00          0313 	ld (ix+0),l
04022E DD 74 01          0314 	ld (ix+1),h
040231                   0315 
040231 DD 21 6D 12 04    0316 	ld ix,x2
040236 21 3F 01 00       0317 	ld hl,319
04023A DD 75 00          0318 	ld (ix+0),l
04023D DD 74 01          0319 	ld (ix+1),h
040240                   0320 
040240 DD 21 6F 12 04    0321 	ld ix,y2
040245 21 EF 00 00       0322 	ld hl,239
040249 DD 75 00          0323 	ld (ix+0),l
04024C DD 74 01          0324 	ld (ix+1),h
04024F                   0325 
04024F                   0326 	; draw the border rectangle
04024F CD 21 09 04       0327 	call fn_rect
040253                   0328 
040253                   0329 	; store edited sprite coordinates
040253 DD 21 71 12 04    0330 	ld ix,xs1
040258 FD 21 69 12 04    0331 	ld iy,x1
04025D DD 6E 00          0332 	ld l,(ix+0)
040260 DD 66 01          0333 	ld h,(ix+1)
040263 FD 75 00          0334 	ld (iy+0),l
040266 FD 74 01          0335 	ld (iy+1),h
040269                   0336 
040269 DD 21 73 12 04    0337 	ld ix,ys1
04026E FD 21 6B 12 04    0338 	ld iy,y1
040273 DD 6E 00          0339 	ld l,(ix+0)
040276 DD 66 01          0340 	ld h,(ix+1)
040279 FD 75 00          0341 	ld (iy+0),l
04027C FD 74 01          0342 	ld (iy+1),h
04027F                   0343 
04027F DD 21 75 12 04    0344 	ld ix,xs2
040284 FD 21 6D 12 04    0345 	ld iy,x2
040289 DD 6E 00          0346 	ld l,(ix+0)
04028C DD 66 01          0347 	ld h,(ix+1)
04028F FD 75 00          0348 	ld (iy+0),l
040292 FD 74 01          0349 	ld (iy+1),h
040295                   0350 
040295 DD 21 77 12 04    0351 	ld ix,ys2
04029A FD 21 6F 12 04    0352 	ld iy,y2
04029F DD 6E 00          0353 	ld l,(ix+0)
0402A2 DD 66 01          0354 	ld h,(ix+1)
0402A5 FD 75 00          0355 	ld (iy+0),l
0402A8 FD 74 01          0356 	ld (iy+1),h
0402AB                   0357 
0402AB                   0358 	; draw the sprite's border rectangle
0402AB CD 21 09 04       0359 	call fn_rect
0402AF                   0360 
0402AF                   0361 	; update sprite size descriptions
0402AF CD B7 11 04       0362 	call fn_show_spr_descr
0402B3                   0363 
0402B3                   0364 ; initialize sprite vars
0402B3                   0365 init_sprite_vars:
0402B3                   0366 	; initialize coordinates before drawing the sprite
0402B3 DD 21 79 12 04    0367 	ld ix,xpix
0402B8 AF                0368 	xor a
0402B9 DD 77 00          0369 	ld (ix+0),a ; xpix = 0
0402BC DD 77 01          0370 	ld (ix+1),a	; ypix = 0
0402BF DD 21 7D 12 04    0371 	ld ix,current_pen
0402C4 3E 0F             0372 	ld a,COLOR_WHITE
0402C6 DD 77 00          0373 	ld (ix+0),a ; current pen -> white
0402C9                   0374 
0402C9                   0375 	; set vars
0402C9 21 52 13 04       0376 	ld hl,colors_count
0402CD 3E 40             0377 	ld a,MAX_COLORS
0402CF 77                0378 	ld (hl),a
0402D0 21 53 13 04       0379 	ld hl,current_frame
0402D4 AF                0380 	xor a
0402D5 77                0381 	ld (hl),a
0402D6 3C                0382 	inc a
0402D7 21 54 13 04       0383 	ld hl,frames_count
0402DB 77                0384 	ld (hl),a
0402DC                   0385 
0402DC                   0386 	; fill buffers with zeros
0402DC 01 00 20 00       0387 	ld bc,BUFFER_SIZE
0402E0 21 5C 13 04       0388 	ld hl,sprite_buffer
0402E4                   0389 
0402E4                   0390 isv_fill_loop:
0402E4 AF                0391 	xor a
0402E5 77                0392 	ld (hl),a
0402E6 0B                0393 	dec bc
0402E7 23                0394 	inc hl
0402E8 78                0395 	ld a,b
0402E9 B1                0396 	or c
0402EA FE 00             0397 	cp 0
0402EC 20 F6             0398 	jr nz,isv_fill_loop
0402EE                   0399 
0402EE                   0400 ; draw the pixel with a border
0402EE CD AE 0A 04       0401 	call fn_draw_pixel_with_border
0402F2                   0402 
0402F2                   0403 ; draw sprite loop
0402F2                   0404 draw_sprite_loop:
0402F2 21 9D FF FF       0405 	ld hl,KEY_SPACE
0402F6 CD 1B 12 04       0406 	call fn_inkey
0402FA FE 01             0407 	cp 1
0402FC CC 00 04 04       0408 	call z,dsl_set_pen
040300                   0409 
040300 21 C6 FF FF       0410 	ld hl,KEY_UP
040304 CD 1B 12 04       0411 	call fn_inkey
040308 FE 01             0412 	cp 1
04030A CC 25 04 04       0413 	call z,dsl_up
04030E                   0414 
04030E 21 D6 FF FF       0415 	ld hl,KEY_DOWN
040312 CD 1B 12 04       0416 	call fn_inkey
040316 FE 01             0417 	cp 1
040318 CC 4C 04 04       0418 	call z,dsl_down
04031C                   0419 
04031C 21 E6 FF FF       0420 	ld hl,KEY_LEFT
040320 CD 1B 12 04       0421 	call fn_inkey
040324 FE 01             0422 	cp 1
040326 CC 78 04 04       0423 	call z,dsl_left
04032A                   0424 
04032A 21 86 FF FF       0425 	ld hl,KEY_RIGHT
04032E CD 1B 12 04       0426 	call fn_inkey
040332 FE 01             0427 	cp 1
040334 CC 9F 04 04       0428 	call z,dsl_right
040338                   0429 
040338 21 A6 FF FF       0430 	ld hl,KEY_DELETE
04033C CD 1B 12 04       0431 	call fn_inkey
040340 FE 01             0432 	cp 1
040342 CC 14 04 04       0433 	call z,dsl_reset_pen
040346                   0434 
040346 21 9F FF FF       0435 	ld hl,KEY_TAB
04034A CD 1B 12 04       0436 	call fn_inkey
04034E FE 01             0437 	cp 1
040350 CA C5 07 04       0438 	jp z,dsl_palette_tool
040354                   0439 
040354 21 AA FF FF       0440 	ld hl,KEY_N
040358 CD 1B 12 04       0441 	call fn_inkey
04035C FE 01             0442 	cp 1
04035E CC 1E 05 04       0443 	call z,dsl_add_frame
040362                   0444 
040362 21 AD FF FF       0445 	ld hl,KEY_C
040366 CD 1B 12 04       0446 	call fn_inkey
04036A FE 01             0447 	cp 1
04036C CC B5 05 04       0448 	call z,dsl_add_and_copy_frame
040370                   0449 
040370 21 D0 FF FF       0450 	ld hl,KEY_BACKSPACE
040374 CD 1B 12 04       0451 	call fn_inkey
040378 FE 01             0452 	cp 1
04037A CC 1C 06 04       0453 	call z,dsl_delete_frame
04037E                   0454 
04037E 21 C0 FF FF       0455 	ld hl,KEY_PGUP
040382 CD 1B 12 04       0456 	call fn_inkey
040386 FE 01             0457 	cp 1
040388 CC 15 07 04       0458 	call z,dsl_next_frame
04038C                   0459 
04038C 21 B1 FF FF       0460 	ld hl,KEY_PGDOWN
040390 CD 1B 12 04       0461 	call fn_inkey
040394 FE 01             0462 	cp 1
040396 CC F6 06 04       0463 	call z,dsl_previous_frame
04039A                   0464 
04039A 21 A9 FF FF       0465 	ld hl,KEY_L
04039E CD 1B 12 04       0466 	call fn_inkey
0403A2 FE 01             0467 	cp 1
0403A4 CC CB 04 04       0468 	call z,dsl_load_sprite
0403A8                   0469 
0403A8 21 AE FF FF       0470 	ld hl,KEY_S
0403AC CD 1B 12 04       0471 	call fn_inkey
0403B0 FE 01             0472 	cp 1
0403B2 CC EC 04 04       0473 	call z,dsl_save_sprite
0403B6                   0474 
0403B6 21 DD FF FF       0475 	ld hl,KEY_E
0403BA CD 1B 12 04       0476 	call fn_inkey
0403BE FE 01             0477 	cp 1
0403C0 CC 05 05 04       0478 	call z,dsl_export_sprite
0403C4                   0479 
0403C4 21 CC FF FF       0480 	ld hl,KEY_R
0403C8 CD 1B 12 04       0481 	call fn_inkey
0403CC FE 01             0482 	cp 1
0403CE CC 3B 07 04       0483 	call z,dsl_rotate_frame
0403D2                   0484 
0403D2 21 BC FF FF       0485 	ld hl,KEY_F
0403D6 CD 1B 12 04       0486 	call fn_inkey
0403DA FE 01             0487 	cp 1
0403DC CC 4C 07 04       0488 	call z,dsl_flip_frame
0403E0                   0489 
0403E0 21 9A FF FF       0490 	ld hl,KEY_M
0403E4 CD 1B 12 04       0491 	call fn_inkey
0403E8 FE 01             0492 	cp 1
0403EA CC B4 07 04       0493 	call z,dsl_mirror_frame
0403EE                   0494 
0403EE 21 8F FF FF       0495 	ld hl,KEY_ESCAPE
0403F2 CD 1B 12 04       0496 	call fn_inkey
0403F6 FE 01             0497 	cp 1
0403F8 CA FD 08 04       0498 	jp z,exit_program
0403FC                   0499 
0403FC C3 F2 02 04       0500 	jp draw_sprite_loop
040400                   0501 
040400                   0502 ; set the pen of the current pixel
040400                   0503 dsl_set_pen:
040400 CD D8 0A 04       0504 	call fn_get_pixel_color
040404 21 7D 12 04       0505 	ld hl,current_pen
040408 BE                0506 	cp (hl)
040409 C8                0507 	ret z
04040A 7E                0508 	ld a,(hl)
04040B CD 1A 0B 04       0509 	call fn_set_pixel_color
04040F CD AE 0A 04       0510 	call fn_draw_pixel_with_border
040413 C9                0511 	ret
040414                   0512 
040414                   0513 ; reset the pen of the current pixel
040414                   0514 dsl_reset_pen:
040414 CD D8 0A 04       0515 	call fn_get_pixel_color
040418 FE 00             0516 	cp 0
04041A C8                0517 	ret z
04041B AF                0518 	xor a
04041C CD 1A 0B 04       0519 	call fn_set_pixel_color
040420 CD AE 0A 04       0520 	call fn_draw_pixel_with_border
040424 C9                0521 	ret
040425                   0522 
040425                   0523 ; move pixel up
040425                   0524 dsl_up:
040425 21 7A 12 04       0525 	ld hl,ypix
040429 7E                0526 	ld a,(hl)
04042A FE 00             0527 	cp 0
04042C C8                0528 	ret z
04042D                   0529 
04042D 21 9D FF FF       0530 	ld hl,KEY_SPACE
040431 CD 1B 12 04       0531 	call fn_inkey
040435 FE 01             0532 	cp 1
040437 CC 00 04 04       0533 	call z,dsl_set_pen
04043B                   0534 
04043B CD C2 0A 04       0535 	call fn_draw_pixel_without_border
04043F CD 5E 0B 04       0536 	call fn_move_up
040443 CD AE 0A 04       0537 	call fn_draw_pixel_with_border
040447 CD 96 11 04       0538 	call fn_slowdown
04044B C9                0539 	ret
04044C                   0540 
04044C                   0541 ; move pixel down
04044C                   0542 dsl_down:
04044C 21 7C 12 04       0543 	ld hl,spr_size
040450 56                0544 	ld d,(hl)
040451 15                0545 	dec d
040452                   0546 
040452 21 7A 12 04       0547 	ld hl,ypix
040456 7E                0548 	ld a,(hl)
040457 BA                0549 	cp d
040458 C8                0550 	ret z
040459                   0551 
040459 21 9D FF FF       0552 	ld hl,KEY_SPACE
04045D CD 1B 12 04       0553 	call fn_inkey
040461 FE 01             0554 	cp 1
040463 CC 00 04 04       0555 	call z,dsl_set_pen
040467                   0556 
040467 CD C2 0A 04       0557 	call fn_draw_pixel_without_border
04046B CD 64 0B 04       0558 	call fn_move_down
04046F CD AE 0A 04       0559 	call fn_draw_pixel_with_border
040473 CD 96 11 04       0560 	call fn_slowdown
040477 C9                0561 	ret
040478                   0562 
040478                   0563 ; move pixel left
040478                   0564 dsl_left:
040478 21 79 12 04       0565 	ld hl,xpix
04047C 7E                0566 	ld a,(hl)
04047D FE 00             0567 	cp 0
04047F C8                0568 	ret z
040480                   0569 
040480 21 9D FF FF       0570 	ld hl,KEY_SPACE
040484 CD 1B 12 04       0571 	call fn_inkey
040488 FE 01             0572 	cp 1
04048A CC 00 04 04       0573 	call z,dsl_set_pen
04048E                   0574 
04048E CD C2 0A 04       0575 	call fn_draw_pixel_without_border
040492 CD 6A 0B 04       0576 	call fn_move_left
040496 CD AE 0A 04       0577 	call fn_draw_pixel_with_border
04049A CD 96 11 04       0578 	call fn_slowdown
04049E C9                0579 	ret
04049F                   0580 
04049F                   0581 ; move pixel right
04049F                   0582 dsl_right:
04049F 21 7C 12 04       0583 	ld hl,spr_size
0404A3 56                0584 	ld d,(hl)
0404A4 15                0585 	dec d
0404A5                   0586 
0404A5 21 79 12 04       0587 	ld hl,xpix
0404A9 7E                0588 	ld a,(hl)
0404AA BA                0589 	cp d
0404AB C8                0590 	ret z
0404AC                   0591 
0404AC 21 9D FF FF       0592 	ld hl,KEY_SPACE
0404B0 CD 1B 12 04       0593 	call fn_inkey
0404B4 FE 01             0594 	cp 1
0404B6 CC 00 04 04       0595 	call z,dsl_set_pen
0404BA                   0596 
0404BA CD C2 0A 04       0597 	call fn_draw_pixel_without_border
0404BE CD 70 0B 04       0598 	call fn_move_right
0404C2 CD AE 0A 04       0599 	call fn_draw_pixel_with_border
0404C6 CD 96 11 04       0600 	call fn_slowdown
0404CA C9                0601 	ret
0404CB                   0602 
0404CB                   0603 ; load a sprite
0404CB                   0604 dsl_load_sprite:
0404CB 21 A9 FF FF       0605 	ld hl,KEY_L
0404CF CD 1B 12 04       0606 	call fn_inkey
0404D3 FE 00             0607 	cp 0
0404D5 20 F4             0608 	jr nz,dsl_load_sprite
0404D7                   0609 
0404D7 CD C2 0A 04       0610 	call fn_draw_pixel_without_border
0404DB CD 38 0D 04       0611 	call fn_load_sprite
0404DF CD 0D 11 04       0612 	call fn_refresh_sprite
0404E3 CD AE 0A 04       0613 	call fn_draw_pixel_with_border
0404E7 CD 4D 11 04       0614 	call fn_change_frame
0404EB C9                0615 	ret
0404EC                   0616 
0404EC                   0617 ; save a sprite
0404EC                   0618 dsl_save_sprite:
0404EC 21 AE FF FF       0619 	ld hl,KEY_S
0404F0 CD 1B 12 04       0620 	call fn_inkey
0404F4 FE 00             0621 	cp 0
0404F6 20 F4             0622 	jr nz,dsl_save_sprite
0404F8                   0623 
0404F8 CD C2 0A 04       0624 	call fn_draw_pixel_without_border
0404FC CD 5D 0E 04       0625 	call fn_save_sprite
040500 CD 0D 11 04       0626 	call fn_refresh_sprite
040504 C9                0627 	ret
040505                   0628 
040505                   0629 dsl_export_sprite:
040505 21 DD FF FF       0630 	ld hl,KEY_E
040509 CD 1B 12 04       0631 	call fn_inkey
04050D FE 00             0632 	cp 0
04050F 20 F4             0633 	jr nz,dsl_export_sprite
040511                   0634 
040511 CD C2 0A 04       0635 	call fn_draw_pixel_without_border
040515 CD 58 0F 04       0636 	call fn_export_sprite
040519 CD 0D 11 04       0637 	call fn_refresh_sprite
04051D C9                0638 	ret
04051E                   0639 
04051E                   0640 
04051E                   0641 ; add a frame to the animation
04051E                   0642 dsl_add_frame:
04051E 21 AA FF FF       0643 	ld hl,KEY_N
040522 CD 1B 12 04       0644 	call fn_inkey
040526 FE 00             0645 	cp 0
040528 20 F4             0646 	jr nz,dsl_add_frame
04052A                   0647 
04052A                   0648 	; frames limit reached ? exit
04052A 21 54 13 04       0649 	ld hl,frames_count
04052E 7E                0650 	ld a,(hl)
04052F FE 08             0651 	cp MAX_FRAMES
040531 C8                0652 	ret z
040532                   0653 
040532                   0654 	; get the number of frames to copy
040532 21 54 13 04       0655 	ld hl,frames_count
040536 7E                0656 	ld a,(hl)
040537 21 53 13 04       0657 	ld hl,current_frame
04053B 46                0658 	ld b,(hl)
04053C 90                0659 	sub b
04053D 3D                0660 	dec a
04053E                   0661 
04053E                   0662 	; get sprsize² (length of a sprite, in bytes)
04053E 21 7C 12 04       0663 	ld hl,spr_size
040542 11 00 00 00       0664 	ld de,$000000
040546 5E                0665 	ld e,(hl)
040547 56                0666 	ld d,(hl)
040548 ED 5C             0667 	mlt de ; DE = sprsize²
04054A                   0668 
04054A                   0669 	; prepare for the case we goto af_zap...
04054A 21 5C 13 04       0670 	ld hl,sprite_buffer
04054E                   0671 
04054E F5                0672 	push af
04054F E5                0673 	push hl
040550 21 53 13 04       0674 	ld hl,current_frame
040554 7E                0675 	ld a,(hl)
040555 3C                0676 	inc a
040556 47                0677 	ld b,a
040557 E1                0678 	pop hl
040558 F1                0679 	pop af
040559                   0680 
040559                   0681 af_loop0:
040559 19                0682 	add hl,de ; for if current frame = 0 (prepare to zap!)
04055A 10 FD             0683 	djnz af_loop0
04055C                   0684 
04055C E5                0685 	push hl ; store HL = sprite buffer + sprsize²
04055D FE 00             0686 	cp 0
04055F CA 87 05 04       0687 	jp z,af_zap ; zap the copy, if the 'current frame' is at the last frame
040563 E1                0688 	pop hl ; HL unused in this case
040564                   0689 
040564 21 00 00 00       0690 	ld hl,$000000 ; HL is 0 to store the result
040568 47                0691 	ld b,a ; B = frames to copy
040569                   0692 
040569                   0693 ; multiply number of frames to copy by sprsize²
040569                   0694 af_loop1:
040569 19                0695 	add hl,de ; HL = length (in bytes) to copy (a few frames)
04056A 10 FD             0696 	djnz af_loop1
04056C                   0697 
04056C E5                0698 	push hl
04056D C1                0699 	pop bc ; BC = HL = length (in bytes) to copy (a few frames)
04056E                   0700 
04056E 21 53 13 04       0701 	ld hl,current_frame
040572 7E                0702 	ld a,(hl)
040573 3C                0703 	inc a
040574 21 5C 13 04       0704 	ld hl,sprite_buffer
040578                   0705 
040578 C5                0706 	push bc
040579 47                0707 	ld b,a
04057A                   0708 
04057A                   0709 af_loop2:
04057A 19                0710 	add hl,de ; HL = sprite buffer + length to copy
04057B 10 FD             0711 	djnz af_loop2
04057D                   0712 
04057D C1                0713 	pop bc
04057E                   0714 
04057E E5                0715 	push hl ; HL = sprite_buffer + (current frame * sprsize²)
04057F                   0716 
04057F 09                0717 	add hl,bc
040580 2B                0718 	dec hl ; HL = end address to copy to end target address
040581                   0719 
040581 E5                0720 	push hl
040582 19                0721 	add hl,de
040583 EB                0722 	ex de,hl ; DE = end target address
040584 E1                0723 	pop hl
040585                   0724 
040585 ED B8             0725 	lddr
040587                   0726 
040587                   0727 af_zap:
040587                   0728 	; multiply number of frames to copy by sprsize²
040587 21 7C 12 04       0729 	ld hl,spr_size
04058B 01 00 00 00       0730 	ld bc,$000000
04058F 4E                0731 	ld c,(hl)
040590 46                0732 	ld b,(hl)
040591 ED 4C             0733 	mlt bc ; BC = sprsize²
040593                   0734 
040593 E1                0735 	pop hl ; HL = sprite_buffer + (current frame * sprsize²)
040594                   0736 
040594                   0737 ; fill frame with 0 color
040594                   0738 af_loop3:
040594 AF                0739 	xor a
040595 77                0740 	ld (hl),a
040596 23                0741 	inc hl
040597 0B                0742 	dec bc
040598 78                0743 	ld a,b
040599 B1                0744 	or c
04059A FE 00             0745 	cp 0
04059C 20 F6             0746 	jr nz,af_loop3
04059E                   0747 
04059E                   0748 	; increment the frames count and the current frame values
04059E 21 54 13 04       0749 	ld hl,frames_count
0405A2 34                0750 	inc (hl)
0405A3 21 53 13 04       0751 	ld hl,current_frame
0405A7 34                0752 	inc (hl)
0405A8                   0753 
0405A8 CD 4D 11 04       0754 	call fn_change_frame
0405AC CD 72 11 04       0755 	call fn_change_frames_count
0405B0 CD 0D 11 04       0756 	call fn_refresh_sprite
0405B4 C9                0757 	ret
0405B5                   0758 
0405B5                   0759 ; add a copy of the current frame to the animation
0405B5                   0760 dsl_add_and_copy_frame: ; TODO! debug me!
0405B5 21 AD FF FF       0761 	ld hl,KEY_C
0405B9 CD 1B 12 04       0762 	call fn_inkey
0405BD FE 00             0763 	cp 0
0405BF 20 F4             0764 	jr nz,dsl_add_and_copy_frame
0405C1                   0765 
0405C1                   0766 	; frames limit reached ? exit
0405C1 21 54 13 04       0767 	ld hl,frames_count
0405C5 7E                0768 	ld a,(hl)
0405C6 FE 08             0769 	cp MAX_FRAMES
0405C8 C8                0770 	ret z
0405C9                   0771 
0405C9                   0772 	; get the number of frames to copy
0405C9 21 54 13 04       0773 	ld hl,frames_count
0405CD 7E                0774 	ld a,(hl)
0405CE 21 53 13 04       0775 	ld hl,current_frame
0405D2 46                0776 	ld b,(hl)
0405D3 90                0777 	sub b
0405D4                   0778 
0405D4                   0779 	; get sprsize² (length of a sprite, in bytes)
0405D4 21 7C 12 04       0780 	ld hl,spr_size
0405D8 11 00 00 00       0781 	ld de,$000000
0405DC 5E                0782 	ld e,(hl)
0405DD 56                0783 	ld d,(hl)
0405DE ED 5C             0784 	mlt de ; DE = sprsize²
0405E0                   0785 
0405E0 21 00 00 00       0786 	ld hl,$000000 ; HL is 0 to store the result
0405E4 47                0787 	ld b,a ; B = frames to copy
0405E5                   0788 
0405E5                   0789 ; multiply number of frames to copy by sprsize²
0405E5                   0790 aacf_loop1:
0405E5 19                0791 	add hl,de ; HL = length (in bytes) to copy (a few frames)
0405E6 10 FD             0792 	djnz aacf_loop1
0405E8                   0793 
0405E8 E5                0794 	push hl
0405E9 C1                0795 	pop bc ; BC = HL = length (in bytes) to copy (a few frames)
0405EA                   0796 
0405EA 21 53 13 04       0797 	ld hl,current_frame
0405EE 7E                0798 	ld a,(hl)
0405EF 21 5C 13 04       0799 	ld hl,sprite_buffer
0405F3 FE 00             0800 	cp 0
0405F5 28 06             0801 	jr z,aacf_loop_end2
0405F7                   0802 
0405F7 C5                0803 	push bc
0405F8 47                0804 	ld b,a
0405F9                   0805 
0405F9                   0806 aacf_loop2:
0405F9 19                0807 	add hl,de ; HL = sprite buffer + length to copy
0405FA 10 FD             0808 	djnz aacf_loop2
0405FC                   0809 
0405FC C1                0810 	pop bc
0405FD                   0811 
0405FD                   0812 aacf_loop_end2:
0405FD 09                0813 	add hl,bc
0405FE 2B                0814 	dec hl ; HL = end address to copy to end target address
0405FF                   0815 
0405FF E5                0816 	push hl
040600 19                0817 	add hl,de
040601 EB                0818 	ex de,hl ; DE = end target address
040602 E1                0819 	pop hl
040603                   0820 
040603 ED B8             0821 	lddr
040605                   0822 
040605                   0823 	; increment the frames count and the current frame values
040605 21 54 13 04       0824 	ld hl,frames_count
040609 34                0825 	inc (hl)
04060A 21 53 13 04       0826 	ld hl,current_frame
04060E 34                0827 	inc (hl)
04060F                   0828 
04060F CD 4D 11 04       0829 	call fn_change_frame
040613 CD 72 11 04       0830 	call fn_change_frames_count
040617 CD 0D 11 04       0831 	call fn_refresh_sprite
04061B C9                0832 	ret
04061C                   0833 
04061C                   0834 ; delete last frame from animation
04061C                   0835 dsl_delete_frame:
04061C 21 D0 FF FF       0836 	ld hl,KEY_BACKSPACE
040620 CD 1B 12 04       0837 	call fn_inkey
040624 FE 00             0838 	cp 0
040626 20 F4             0839 	jr nz,dsl_delete_frame
040628                   0840 
040628                   0841 	; delete current selected frame
040628 21 7C 12 04       0842 	ld hl,spr_size
04062C 01 00 00 00       0843 	ld bc,$000000
040630 4E                0844 	ld c,(hl)
040631 46                0845 	ld b,(hl)
040632 ED 4C             0846 	mlt bc ; BC = sprsize²
040634 21 53 13 04       0847 	ld hl,current_frame
040638 7E                0848 	ld a,(hl) ; A = current frame
040639 21 5C 13 04       0849 	ld hl,sprite_buffer ; HL = sprite buffer
04063D C5                0850 	push bc
04063E FE 00             0851 	cp 0
040640 28 06             0852 	jr z,df_loop2
040642                   0853 
040642                   0854 df_loop1:
040642 09                0855 	add hl,bc ; HL = sprite buffer + (current frame * sprsize²)
040643 3D                0856 	dec a
040644 FE 00             0857 	cp 0
040646 20 FA             0858 	jr nz,df_loop1
040648                   0859 
040648                   0860 ; clear the current frame
040648                   0861 df_loop2:
040648 AF                0862 	xor a
040649 77                0863 	ld (hl),a
04064A 23                0864 	inc hl
04064B 0B                0865 	dec bc
04064C 78                0866 	ld a,b
04064D B1                0867 	or c
04064E FE 00             0868 	cp 0
040650 20 F6             0869 	jr nz,df_loop2
040652                   0870 
040652                   0871 	; current frame + 1 = frames count ?
040652 E5                0872 	push hl
040653 21 53 13 04       0873 	ld hl,current_frame
040657 5E                0874 	ld e,(hl)
040658 1C                0875 	inc e
040659 21 54 13 04       0876 	ld hl,frames_count
04065D 7E                0877 	ld a,(hl)
04065E BB                0878 	cp e
04065F E1                0879 	pop hl
040660 C1                0880 	pop bc
040661 CA DA 06 04       0881 	jp z,df_exit
040665                   0882 
040665 11 54 13 04       0883 	ld de,frames_count
040669 1A                0884 	ld a,(de) ; A = frames count
04066A E5                0885 	push hl
04066B 21 53 13 04       0886 	ld hl,current_frame
04066F 5E                0887 	ld e,(hl) ; E = current frame
040670 E1                0888 	pop hl
040671 93                0889 	sub e
040672 3D                0890 	dec a ; A = number of frames to copy back
040673                   0891 
040673 EB                0892 	ex de,hl ; DE = sprite buffer + ((current frame + 1) * sprsize²)
040674 21 00 00 00       0893 	ld hl,$000000
040678 FE 00             0894 	cp 0 ; 0 frames to copy ?
04067A 28 06             0895 	jr z,df_exit_loop3
04067C                   0896 
04067C                   0897 df_loop3:
04067C 09                0898 	add hl,bc ; HL = length of a frame (sprsize²) * frames count
04067D 3D                0899 	dec a
04067E FE 00             0900 	cp 0
040680 20 FA             0901 	jr nz,df_loop3
040682                   0902 
040682                   0903 df_exit_loop3:
040682 E5                0904 	push hl
040683 C1                0905 	pop bc ; BC = total length of area to copy
040684 D5                0906 	push de
040685 E1                0907 	pop hl ; HL = DE = start of area to copy
040686                   0908 
040686 C5                0909 	push bc
040687 D5                0910 	push de
040688 E5                0911 	push hl
040689 21 7C 12 04       0912 	ld hl,spr_size
04068D 11 00 00 00       0913 	ld de,$000000
040691 5E                0914 	ld e,(hl)
040692 56                0915 	ld d,(hl)
040693 ED 5C             0916 	mlt de ; DE = one sprite frame length
040695 E1                0917 	pop hl
040696 B7                0918 	or a
040697 ED 52             0919 	sbc hl,de ; HL = target area to copy
040699 D1                0920 	pop de
04069A EB                0921 	ex de,hl ; DE = target, HL = start
04069B C1                0922 	pop bc
04069C ED B0             0923 	ldir
04069E                   0924 
04069E 21 7C 12 04       0925 	ld hl,spr_size
0406A2 01 00 00 00       0926 	ld bc,$000000
0406A6 4E                0927 	ld c,(hl)
0406A7 46                0928 	ld b,(hl)
0406A8 ED 4C             0929 	mlt bc ; DE = one sprite frame length
0406AA                   0930 
0406AA                   0931 	; delete last frame data
0406AA 21 54 13 04       0932 	ld hl,frames_count
0406AE 7E                0933 	ld a,(hl) ; A =frames count
0406AF 3D                0934 	dec a ; A = last frame
0406B0 21 5C 13 04       0935 	ld hl,sprite_buffer ; HL = sprite buffer
0406B4 FE 00             0936 	cp 0
0406B6 28 06             0937 	jr z,df_loop5
0406B8                   0938 
0406B8                   0939 df_loop4:
0406B8 09                0940 	add hl,bc ; HL = sprite buffer + (last frame * sprsize²)
0406B9 3D                0941 	dec a
0406BA FE 00             0942 	cp 0
0406BC 20 FA             0943 	jr nz,df_loop4
0406BE                   0944 
0406BE                   0945 ; clear the current frame
0406BE                   0946 df_loop5:
0406BE AF                0947 	xor a
0406BF 77                0948 	ld (hl),a
0406C0 23                0949 	inc hl
0406C1 0B                0950 	dec bc
0406C2 78                0951 	ld a,b
0406C3 B1                0952 	or c
0406C4 FE 00             0953 	cp 0
0406C6 20 F6             0954 	jr nz,df_loop5
0406C8                   0955 
0406C8                   0956 	; decrement frames count
0406C8 21 54 13 04       0957 	ld hl,frames_count
0406CC 35                0958 	dec (hl)
0406CD                   0959 
0406CD CD 4D 11 04       0960 	call fn_change_frame
0406D1 CD 72 11 04       0961 	call fn_change_frames_count
0406D5 CD 0D 11 04       0962 	call fn_refresh_sprite
0406D9 C9                0963 	ret
0406DA                   0964 
0406DA                   0965 df_exit:
0406DA 21 54 13 04       0966 	ld hl,frames_count
0406DE 7E                0967 	ld a,(hl)
0406DF FE 01             0968 	cp 1
0406E1 28 06             0969 	jr z,df_exit_end
0406E3 35                0970 	dec (hl)
0406E4 21 53 13 04       0971 	ld hl,current_frame
0406E8 35                0972 	dec (hl)
0406E9                   0973 
0406E9                   0974 df_exit_end:
0406E9 CD 4D 11 04       0975 	call fn_change_frame
0406ED CD 72 11 04       0976 	call fn_change_frames_count
0406F1 CD 0D 11 04       0977 	call fn_refresh_sprite
0406F5 C9                0978 	ret
0406F6                   0979 
0406F6                   0980 ; goto previous frame
0406F6                   0981 dsl_previous_frame:
0406F6 21 B1 FF FF       0982 	ld hl,KEY_PGDOWN
0406FA CD 1B 12 04       0983 	call fn_inkey
0406FE FE 00             0984 	cp 0
040700 20 F4             0985 	jr nz,dsl_previous_frame
040702                   0986 
040702 21 53 13 04       0987 	ld hl,current_frame
040706 7E                0988 	ld a,(hl)
040707 FE 00             0989 	cp 0
040709 C8                0990 	ret z
04070A                   0991 
04070A 3D                0992 	dec a
04070B 77                0993 	ld (hl),a
04070C CD 4D 11 04       0994 	call fn_change_frame
040710 CD 0D 11 04       0995 	call fn_refresh_sprite
040714 C9                0996 	ret
040715                   0997 
040715                   0998 ; goto next frame
040715                   0999 dsl_next_frame:
040715 21 C0 FF FF       1000 	ld hl,KEY_PGUP
040719 CD 1B 12 04       1001 	call fn_inkey
04071D FE 00             1002 	cp 0
04071F 20 F4             1003 	jr nz,dsl_next_frame
040721                   1004 
040721 21 53 13 04       1005 	ld hl,current_frame
040725 7E                1006 	ld a,(hl)
040726 3C                1007 	inc a
040727 21 54 13 04       1008 	ld hl,frames_count
04072B BE                1009 	cp (hl)
04072C C8                1010 	ret z
04072D                   1011 
04072D 21 53 13 04       1012 	ld hl,current_frame
040731 77                1013 	ld (hl),a
040732 CD 4D 11 04       1014 	call fn_change_frame
040736 CD 0D 11 04       1015 	call fn_refresh_sprite
04073A C9                1016 	ret
04073B                   1017 
04073B                   1018 ; rotate a frame 90° clockwise
04073B                   1019 dsl_rotate_frame:
04073B 21 CC FF FF       1020 	ld hl,KEY_R
04073F CD 1B 12 04       1021 	call fn_inkey
040743 FE 00             1022 	cp 0
040745 20 F4             1023 	jr nz,dsl_rotate_frame
040747                   1024 
040747 CD 0D 11 04       1025 	call fn_refresh_sprite
04074B C9                1026 	ret
04074C                   1027 
04074C                   1028 ; flip frame horizontally
04074C                   1029 dsl_flip_frame:
04074C 21 BC FF FF       1030 	ld hl,KEY_F
040750 CD 1B 12 04       1031 	call fn_inkey
040754 FE 00             1032 	cp 0
040756 20 F4             1033 	jr nz,dsl_flip_frame
040758                   1034 
040758 21 7C 12 04       1035 	ld hl,spr_size
04075C 11 00 00 00       1036 	ld de,$000000
040760 5E                1037 	ld e,(hl)
040761 56                1038 	ld d,(hl)
040762 4B                1039 	ld c,e
040763 ED 5C             1040 	mlt de ; DE = sprite length in bytes
040765 21 53 13 04       1041 	ld hl,current_frame
040769 7E                1042 	ld a,(hl) ; A = current frame
04076A 21 5C 13 04       1043 	ld hl,sprite_buffer
04076E FE 00             1044 	cp 0
040770 28 04             1045 	jr z,ff_noloop1
040772 47                1046 	ld b,a
040773                   1047 
040773                   1048 ff_loop1:
040773 19                1049 	add hl,de ; HL = sprite_buffer + (current frame * sprsize²)
040774 10 FD             1050 	djnz ff_loop1
040776                   1051 
040776                   1052 ff_noloop1:
040776 41                1053 	ld b,c ; B = sprite height
040777 11 00 00 00       1054 	ld de,$000000
04077B 59                1055 	ld e,c ; DE = sprite width
04077C 79                1056 	ld a,c ; A = sprite width
04077D 0F                1057 	rrca
04077E E6 7F             1058 	and 127 ; A = sprite width / 2
040780                   1059 
040780 E5                1060 	push hl
040781 DD E1             1061 	pop ix ; IX = frame address
040783 19                1062 	add hl,de ; HL = frame address + sprite width - 1
040784 2B                1063 	dec hl
040785 E5                1064 	push hl
040786 FD E1             1065 	pop iy ; IY = YX + sprite width - 1
040788                   1066 
040788                   1067 ff_loop2:
040788 F5                1068 	push af
040789 D5                1069 	push de
04078A DD E5             1070 	push ix
04078C FD E5             1071 	push iy
04078E                   1072 ff_loop3:
04078E DD 5E 00          1073 	ld e,(ix+0)
040791 FD 56 00          1074 	ld d,(iy+0)
040794 DD 72 00          1075 	ld (ix+0),d
040797 FD 73 00          1076 	ld (iy+0),e
04079A DD 23             1077 	inc ix
04079C FD 2B             1078 	dec iy
04079E 3D                1079 	dec a
04079F FE 00             1080 	cp 0
0407A1 20 EB             1081 	jr nz,ff_loop3
0407A3 FD E1             1082 	pop iy
0407A5 DD E1             1083 	pop ix
0407A7 D1                1084 	pop de
0407A8 F1                1085 	pop af
0407A9 DD 19             1086 	add ix,de
0407AB FD 19             1087 	add iy,de
0407AD 10 D9             1088 	djnz ff_loop2
0407AF                   1089 
0407AF CD 0D 11 04       1090 	call fn_refresh_sprite
0407B3 C9                1091 	ret
0407B4                   1092 
0407B4                   1093 ; mirror frame vertically
0407B4                   1094 dsl_mirror_frame:
0407B4 21 9A FF FF       1095 	ld hl,KEY_M
0407B8 CD 1B 12 04       1096 	call fn_inkey
0407BC FE 00             1097 	cp 0
0407BE 20 F4             1098 	jr nz,dsl_mirror_frame
0407C0                   1099 
0407C0 CD 0D 11 04       1100 	call fn_refresh_sprite
0407C4 C9                1101 	ret
0407C5                   1102 
0407C5                   1103 ; change current tool to palette
0407C5                   1104 dsl_palette_tool:
0407C5 21 9F FF FF       1105 	ld hl,KEY_TAB
0407C9 CD 1B 12 04       1106 	call fn_inkey
0407CD FE 00             1107 	cp 0
0407CF 20 F4             1108 	jr nz,dsl_palette_tool
0407D1                   1109 
0407D1                   1110 	; hide sprite drawing cursor
0407D1 CD C2 0A 04       1111 	call fn_draw_pixel_without_border
0407D5                   1112 
0407D5                   1113 	; draw selected palette color
0407D5 21 7D 12 04       1114 	ld hl,current_pen
0407D9 4E                1115 	ld c,(hl)
0407DA CD 76 0B 04       1116 	call fn_draw_palette_with_border
0407DE                   1117 
0407DE                   1118 ; select palette color
0407DE                   1119 dsl_palette_tool_loop:
0407DE 21 E6 FF FF       1120 	ld hl,KEY_LEFT
0407E2 CD 1B 12 04       1121 	call fn_inkey
0407E6 FE 01             1122 	cp 1
0407E8 CC A7 08 04       1123 	call z,dsl_dec_pen
0407EC                   1124 
0407EC 21 86 FF FF       1125 	ld hl,KEY_RIGHT
0407F0 CD 1B 12 04       1126 	call fn_inkey
0407F4 FE 01             1127 	cp 1
0407F6 CC D2 08 04       1128 	call z,dsl_inc_pen
0407FA                   1129 
0407FA 21 9F FF FF       1130 	ld hl,KEY_TAB
0407FE CD 1B 12 04       1131 	call fn_inkey
040802 FE 01             1132 	cp 1
040804 CA 8A 08 04       1133 	jp z,dsl_draw_sprite_tool
040808                   1134 
040808 21 A9 FF FF       1135 	ld hl,KEY_L
04080C CD 1B 12 04       1136 	call fn_inkey
040810 FE 01             1137 	cp 1
040812 CC 36 08 04       1138 	call z,dslp_load_sprite
040816                   1139 
040816 21 AE FF FF       1140 	ld hl,KEY_S
04081A CD 1B 12 04       1141 	call fn_inkey
04081E FE 01             1142 	cp 1
040820 CC 64 08 04       1143 	call z,dslp_save_sprite
040824                   1144 
040824 21 8F FF FF       1145 	ld hl,KEY_ESCAPE
040828 CD 1B 12 04       1146 	call fn_inkey
04082C FE 01             1147 	cp 1
04082E CA FD 08 04       1148 	jp z,exit_program
040832                   1149 
040832 C3 DE 07 04       1150 	jp dsl_palette_tool_loop
040836                   1151 
040836                   1152 dslp_load_sprite:
040836 21 A9 FF FF       1153 	ld hl,KEY_L
04083A CD 1B 12 04       1154 	call fn_inkey
04083E FE 00             1155 	cp 0
040840 20 F4             1156 	jr nz,dslp_load_sprite
040842                   1157 
040842 21 7D 12 04       1158 	ld hl,current_pen
040846 4E                1159 	ld c,(hl)
040847 CD DB 0B 04       1160 	call fn_draw_palette_without_border
04084B CD 38 0D 04       1161 	call fn_load_sprite
04084F 21 7D 12 04       1162 	ld hl,current_pen
040853 4E                1163 	ld c,(hl)
040854 CD 0D 11 04       1164 	call fn_refresh_sprite
040858 CD 76 0B 04       1165 	call fn_draw_palette_with_border
04085C CD 4D 11 04       1166 	call fn_change_frame
040860 C3 DE 07 04       1167 	jp dsl_palette_tool_loop
040864                   1168 
040864                   1169 dslp_save_sprite:
040864 21 AE FF FF       1170 	ld hl,KEY_S
040868 CD 1B 12 04       1171 	call fn_inkey
04086C FE 00             1172 	cp 0
04086E 20 F4             1173 	jr nz,dslp_save_sprite
040870                   1174 
040870 21 7D 12 04       1175 	ld hl,current_pen
040874 4E                1176 	ld c,(hl)
040875 CD DB 0B 04       1177 	call fn_draw_palette_without_border
040879 CD 5D 0E 04       1178 	call fn_save_sprite
04087D 21 7D 12 04       1179 	ld hl,current_pen
040881 4E                1180 	ld c,(hl)
040882 CD 76 0B 04       1181 	call fn_draw_palette_with_border
040886 C3 DE 07 04       1182 	jp dsl_palette_tool_loop
04088A                   1183 
04088A                   1184 dsl_draw_sprite_tool:
04088A 21 9F FF FF       1185 	ld hl,KEY_TAB
04088E CD 1B 12 04       1186 	call fn_inkey
040892 FE 00             1187 	cp 0
040894 20 F4             1188 	jr nz,dsl_draw_sprite_tool
040896                   1189 
040896                   1190 	; unselect palette color
040896 21 7D 12 04       1191 	ld hl,current_pen
04089A 4E                1192 	ld c,(hl)
04089B CD DB 0B 04       1193 	call fn_draw_palette_without_border
04089F                   1194 
04089F                   1195 	; draw the pixel with a border
04089F CD AE 0A 04       1196 	call fn_draw_pixel_with_border
0408A3                   1197 
0408A3 C3 F2 02 04       1198 	jp draw_sprite_loop
0408A7                   1199 
0408A7                   1200 dsl_dec_pen:
0408A7 21 7D 12 04       1201 	ld hl,current_pen
0408AB 7E                1202 	ld a,(hl)
0408AC FE 00             1203 	cp COLOR_MIN
0408AE CA DE 07 04       1204 	jp z,dsl_palette_tool_loop
0408B2                   1205 
0408B2 F5                1206 	push af
0408B3 E5                1207 	push hl
0408B4                   1208 
0408B4                   1209 	; unselect palette color
0408B4 21 7D 12 04       1210 	ld hl,current_pen
0408B8 4E                1211 	ld c,(hl)
0408B9 CD DB 0B 04       1212 	call fn_draw_palette_without_border
0408BD                   1213 
0408BD E1                1214 	pop hl
0408BE F1                1215 	pop af
0408BF                   1216 
0408BF                   1217 	; dec the pen
0408BF 3D                1218 	dec a
0408C0 77                1219 	ld (hl),a
0408C1                   1220 
0408C1                   1221 	; select palette color
0408C1 21 7D 12 04       1222 	ld hl,current_pen
0408C5 4E                1223 	ld c,(hl)
0408C6 CD 76 0B 04       1224 	call fn_draw_palette_with_border
0408CA CD 96 11 04       1225 	call fn_slowdown
0408CE C3 DE 07 04       1226 	jp dsl_palette_tool_loop
0408D2                   1227 
0408D2                   1228 dsl_inc_pen:
0408D2 21 7D 12 04       1229 	ld hl,current_pen
0408D6 7E                1230 	ld a,(hl)
0408D7 FE 3F             1231 	cp COLOR_MAX
0408D9 CA DE 07 04       1232 	jp z,dsl_palette_tool_loop
0408DD                   1233 
0408DD F5                1234 	push af
0408DE E5                1235 	push hl
0408DF                   1236 
0408DF                   1237 	; unselect palette color
0408DF 21 7D 12 04       1238 	ld hl,current_pen
0408E3 4E                1239 	ld c,(hl)
0408E4 CD DB 0B 04       1240 	call fn_draw_palette_without_border
0408E8                   1241 
0408E8 E1                1242 	pop hl
0408E9 F1                1243 	pop af
0408EA                   1244 
0408EA                   1245 	; inc the pen
0408EA 3C                1246 	inc a
0408EB 77                1247 	ld (hl),a
0408EC                   1248 
0408EC                   1249 	; select palette color
0408EC 21 7D 12 04       1250 	ld hl,current_pen
0408F0 4E                1251 	ld c,(hl)
0408F1 CD 76 0B 04       1252 	call fn_draw_palette_with_border
0408F5 CD 96 11 04       1253 	call fn_slowdown
0408F9 C3 DE 07 04       1254 	jp dsl_palette_tool_loop
0408FD                   1255 
0408FD                   1256 ; exit program
0408FD                   1257 exit_program:
0408FD                   1258 	; reset to mode 1
0408FD                   1259 	vdu 22
0408FD 3E 16             1259 		LD	A, function
0408FF 49 D7             1259 		RST.LIS	10h
040901                   1260 	vdu 1
040901 3E 01             1260 		LD	A, function
040903 49 D7             1260 		RST.LIS	10h
040905                   1261 
040905                   1262 	; position the texte cursor at home
040905                   1263 	vdu 30
040905 3E 1E             1263 		LD	A, function
040907 49 D7             1263 		RST.LIS	10h
040909                   1264 
040909                   1265 	; show cursor
040909                   1266 	vdu 23
040909 3E 17             1266 		LD	A, function
04090B 49 D7             1266 		RST.LIS	10h
04090D                   1267 	vdu 1
04090D 3E 01             1267 		LD	A, function
04090F 49 D7             1267 		RST.LIS	10h
040911                   1268 	vdu 1
040911 3E 01             1268 		LD	A, function
040913 49 D7             1268 		RST.LIS	10h
040915                   1269 
040915 FD E1             1270 	pop iy
040917 DD E1             1271 	pop ix
040919 D1                1272 	pop de
04091A C1                1273 	pop bc
04091B F1                1274 	pop af
04091C 21 00 00 00       1275 	ld hl,0
040920                   1276 
040920 C9                1277 	ret
040921                   1278 ;======================================================================
040921                   1279 
040921                   1280 ; draw a rectangle
040921                   1281 fn_rect:
040921                   1282 	vdu 25
040921 3E 19             1282 		LD	A, function
040923 49 D7             1282 		RST.LIS	10h
040925                   1283 	vdu 4
040925 3E 04             1283 		LD	A, function
040927 49 D7             1283 		RST.LIS	10h
040929 DD 21 69 12 04    1284 	ld ix,x1
04092E DD 7E 00          1285 	ld a,(ix + 0)
040931                   1286 	vdu_a
040931 49 D7             1286 		RST.LIS	10h
040933 DD 7E 01          1287 	ld a,(ix + 1)
040936                   1288 	vdu_a
040936 49 D7             1288 		RST.LIS	10h
040938 FD 21 6B 12 04    1289 	ld iy,y1
04093D FD 7E 00          1290 	ld a,(iy + 0)
040940                   1291 	vdu_a
040940 49 D7             1291 		RST.LIS	10h
040942 FD 7E 01          1292 	ld a,(iy + 1)
040945                   1293 	vdu_a
040945 49 D7             1293 		RST.LIS	10h
040947                   1294 
040947                   1295 	vdu 25
040947 3E 19             1295 		LD	A, function
040949 49 D7             1295 		RST.LIS	10h
04094B                   1296 	vdu 5
04094B 3E 05             1296 		LD	A, function
04094D 49 D7             1296 		RST.LIS	10h
04094F DD 21 6D 12 04    1297 	ld ix,x2
040954 DD 7E 00          1298 	ld a,(ix + 0)
040957                   1299 	vdu_a
040957 49 D7             1299 		RST.LIS	10h
040959 DD 7E 01          1300 	ld a,(ix + 1)
04095C                   1301 	vdu_a
04095C 49 D7             1301 		RST.LIS	10h
04095E FD 21 6B 12 04    1302 	ld iy,y1
040963 FD 7E 00          1303 	ld a,(iy + 0)
040966                   1304 	vdu_a
040966 49 D7             1304 		RST.LIS	10h
040968 FD 7E 01          1305 	ld a,(iy + 1)
04096B                   1306 	vdu_a
04096B 49 D7             1306 		RST.LIS	10h
04096D                   1307 
04096D                   1308 	vdu 25
04096D 3E 19             1308 		LD	A, function
04096F 49 D7             1308 		RST.LIS	10h
040971                   1309 	vdu 5
040971 3E 05             1309 		LD	A, function
040973 49 D7             1309 		RST.LIS	10h
040975 DD 21 6D 12 04    1310 	ld ix,x2
04097A DD 7E 00          1311 	ld a,(ix + 0)
04097D                   1312 	vdu_a
04097D 49 D7             1312 		RST.LIS	10h
04097F DD 7E 01          1313 	ld a,(ix + 1)
040982                   1314 	vdu_a
040982 49 D7             1314 		RST.LIS	10h
040984 FD 21 6F 12 04    1315 	ld iy,y2
040989 FD 7E 00          1316 	ld a,(iy + 0)
04098C                   1317 	vdu_a
04098C 49 D7             1317 		RST.LIS	10h
04098E FD 7E 01          1318 	ld a,(iy + 1)
040991                   1319 	vdu_a
040991 49 D7             1319 		RST.LIS	10h
040993                   1320 
040993                   1321 	vdu 25
040993 3E 19             1321 		LD	A, function
040995 49 D7             1321 		RST.LIS	10h
040997                   1322 	vdu 5
040997 3E 05             1322 		LD	A, function
040999 49 D7             1322 		RST.LIS	10h
04099B DD 21 69 12 04    1323 	ld ix,x1
0409A0 DD 7E 00          1324 	ld a,(ix + 0)
0409A3                   1325 	vdu_a
0409A3 49 D7             1325 		RST.LIS	10h
0409A5 DD 7E 01          1326 	ld a,(ix + 1)
0409A8                   1327 	vdu_a
0409A8 49 D7             1327 		RST.LIS	10h
0409AA FD 21 6F 12 04    1328 	ld iy,y2
0409AF FD 7E 00          1329 	ld a,(iy + 0)
0409B2                   1330 	vdu_a
0409B2 49 D7             1330 		RST.LIS	10h
0409B4 FD 7E 01          1331 	ld a,(iy + 1)
0409B7                   1332 	vdu_a
0409B7 49 D7             1332 		RST.LIS	10h
0409B9                   1333 
0409B9                   1334 	vdu 25
0409B9 3E 19             1334 		LD	A, function
0409BB 49 D7             1334 		RST.LIS	10h
0409BD                   1335 	vdu 5
0409BD 3E 05             1335 		LD	A, function
0409BF 49 D7             1335 		RST.LIS	10h
0409C1 DD 21 69 12 04    1336 	ld ix,x1
0409C6 DD 7E 00          1337 	ld a,(ix + 0)
0409C9                   1338 	vdu_a
0409C9 49 D7             1338 		RST.LIS	10h
0409CB DD 7E 01          1339 	ld a,(ix + 1)
0409CE                   1340 	vdu_a
0409CE 49 D7             1340 		RST.LIS	10h
0409D0 FD 21 6B 12 04    1341 	ld iy,y1
0409D5 FD 7E 00          1342 	ld a,(iy + 0)
0409D8                   1343 	vdu_a
0409D8 49 D7             1343 		RST.LIS	10h
0409DA FD 7E 01          1344 	ld a,(iy + 1)
0409DD                   1345 	vdu_a
0409DD 49 D7             1345 		RST.LIS	10h
0409DF                   1346 
0409DF C9                1347 	ret
0409E0                   1348 
0409E0                   1349 ; draw a filled rectangle
0409E0                   1350 fn_rectf:
0409E0 DD 21 69 12 04    1351 	ld ix,x1
0409E5 FD 21 6B 12 04    1352 	ld iy,y1
0409EA                   1353 
0409EA                   1354 	vdu 25
0409EA 3E 19             1354 		LD	A, function
0409EC 49 D7             1354 		RST.LIS	10h
0409EE                   1355 	vdu 4
0409EE 3E 04             1355 		LD	A, function
0409F0 49 D7             1355 		RST.LIS	10h
0409F2 DD 7E 00          1356 	ld a,(ix+0)
0409F5                   1357 	vdu_a
0409F5 49 D7             1357 		RST.LIS	10h
0409F7 DD 7E 01          1358 	ld a,(ix+1)
0409FA                   1359 	vdu_a
0409FA 49 D7             1359 		RST.LIS	10h
0409FC FD 7E 00          1360 	ld a,(iy+0)
0409FF                   1361 	vdu_a
0409FF 49 D7             1361 		RST.LIS	10h
040A01 FD 7E 01          1362 	ld a,(iy+1)
040A04                   1363 	vdu_a
040A04 49 D7             1363 		RST.LIS	10h
040A06                   1364 
040A06 DD 21 6D 12 04    1365 	ld ix,x2
040A0B FD 21 6F 12 04    1366 	ld iy,y2
040A10                   1367 
040A10                   1368 	vdu 25
040A10 3E 19             1368 		LD	A, function
040A12 49 D7             1368 		RST.LIS	10h
040A14                   1369 	vdu 101
040A14 3E 65             1369 		LD	A, function
040A16 49 D7             1369 		RST.LIS	10h
040A18 DD 7E 00          1370 	ld a,(ix+0)
040A1B                   1371 	vdu_a
040A1B 49 D7             1371 		RST.LIS	10h
040A1D DD 7E 01          1372 	ld a,(ix+1)
040A20                   1373 	vdu_a
040A20 49 D7             1373 		RST.LIS	10h
040A22 FD 7E 00          1374 	ld a,(iy+0)
040A25                   1375 	vdu_a
040A25 49 D7             1375 		RST.LIS	10h
040A27 FD 7E 01          1376 	ld a,(iy+1)
040A2A                   1377 	vdu_a
040A2A 49 D7             1377 		RST.LIS	10h
040A2C                   1378 
040A2C C9                1379 	ret
040A2D                   1380 
040A2D                   1381 fn_calc_pixel_coords:
040A2D 11 00 00 00       1382 	ld de,$000000 ; reset deu
040A31                   1383 
040A31                   1384 	; calculate coordinates x of the resized pixel
040A31 21 79 12 04       1385 	ld hl,xpix
040A35 5E                1386 	ld e,(hl) ; E = xpix
040A36 21 7B 12 04       1387 	ld hl,pixel_width
040A3A 56                1388 	ld d,(hl) ; D = pixel_width
040A3B D5                1389 	push de
040A3C E1                1390 	pop hl ; HL = DE
040A3D ED 6C             1391 	mlt hl ; HL = xpix * pixel_width
040A3F DD 21 71 12 04    1392 	ld ix,xs1
040A44 DD 5E 00          1393 	ld e,(ix+0)
040A47 DD 56 01          1394 	ld d,(ix+1)
040A4A 13                1395 	inc de ; DE = xs1 + 1
040A4B 19                1396 	add hl,de ; HL = (xpix * pixel_width) + xs1 + 1
040A4C FD 21 69 12 04    1397 	ld iy,x1
040A51 FD 75 00          1398 	ld (iy+0),l
040A54 FD 74 01          1399 	ld (iy+1),h ; x1 = (xpix * pixel_width) + xs1 + 1
040A57 E5                1400 	push hl
040A58 21 7B 12 04       1401 	ld hl,pixel_width
040A5C 16 00             1402 	ld d,0
040A5E 5E                1403 	ld e,(hl)
040A5F E1                1404 	pop hl
040A60 19                1405 	add hl,de
040A61 2B                1406 	dec hl
040A62 FD 21 6D 12 04    1407 	ld iy,x2
040A67 FD 75 00          1408 	ld (iy+0),l
040A6A FD 74 01          1409 	ld (iy+1),h ; x2 = x1 + pixel_width - 1
040A6D                   1410 
040A6D 11 00 00 00       1411 	ld de,$000000 ; reset deu
040A71                   1412 
040A71                   1413 	; calculate coordinates y of the resized pixel
040A71 21 7A 12 04       1414 	ld hl,ypix
040A75 5E                1415 	ld e,(hl) ; E = ypix
040A76 21 7B 12 04       1416 	ld hl,pixel_width
040A7A 56                1417 	ld d,(hl) ; D = pixel_width
040A7B D5                1418 	push de
040A7C E1                1419 	pop hl ; HL = DE
040A7D ED 6C             1420 	mlt hl ; HL = ypix * pixel_width
040A7F DD 21 73 12 04    1421 	ld ix,ys1
040A84 DD 5E 00          1422 	ld e,(ix+0)
040A87 DD 56 01          1423 	ld d,(ix+1) ; ys1 = ypix * pixel_width
040A8A 13                1424 	inc de ; DE = ys1 + 1
040A8B 19                1425 	add hl,de ; HL = (ypix * pixel_width) + ys1 + 1
040A8C FD 21 6B 12 04    1426 	ld iy,y1
040A91 FD 75 00          1427 	ld (iy+0),l
040A94 FD 74 01          1428 	ld (iy+1),h ; y1 = (ypix * pixel_width) + ys1 + 1
040A97 E5                1429 	push hl
040A98 21 7B 12 04       1430 	ld hl,pixel_width
040A9C 16 00             1431 	ld d,0
040A9E 5E                1432 	ld e,(hl)
040A9F E1                1433 	pop hl
040AA0 19                1434 	add hl,de
040AA1 2B                1435 	dec hl
040AA2 FD 21 6F 12 04    1436 	ld iy,y2
040AA7 FD 75 00          1437 	ld (iy+0),l
040AAA FD 74 01          1438 	ld (iy+1),h ; y2 = y1 + pixel_width - 1
040AAD                   1439 
040AAD C9                1440 	ret
040AAE                   1441 
040AAE                   1442 ; draw the resized pixel border, with its color
040AAE                   1443 fn_draw_pixel_with_border:
040AAE CD C2 0A 04       1444 	call fn_draw_pixel_without_border
040AB2                   1445 
040AB2                   1446 	; set graphics pen
040AB2                   1447 	vdu 18
040AB2 3E 12             1447 		LD	A, function
040AB4 49 D7             1447 		RST.LIS	10h
040AB6                   1448 	vdu 0
040AB6 3E 00             1448 		LD	A, function
040AB8 49 D7             1448 		RST.LIS	10h
040ABA                   1449 	vdu COLOR_GREY ; grey pen
040ABA 3E 07             1449 		LD	A, function
040ABC 49 D7             1449 		RST.LIS	10h
040ABE                   1450 
040ABE                   1451 	; draw the sprite's border rectangle
040ABE C3 21 09 04       1452 	jp fn_rect
040AC2                   1453 
040AC2                   1454 ; draw the resized pixel color
040AC2                   1455 fn_draw_pixel_without_border:
040AC2 CD 2D 0A 04       1456 	call fn_calc_pixel_coords
040AC6                   1457 
040AC6                   1458 	; set graphics pen
040AC6                   1459 	vdu 18
040AC6 3E 12             1459 		LD	A, function
040AC8 49 D7             1459 		RST.LIS	10h
040ACA                   1460 	vdu 0
040ACA 3E 00             1460 		LD	A, function
040ACC 49 D7             1460 		RST.LIS	10h
040ACE CD D8 0A 04       1461 	call fn_get_pixel_color
040AD2                   1462 	vdu_a
040AD2 49 D7             1462 		RST.LIS	10h
040AD4                   1463 
040AD4                   1464 	; draw the sprite's color rectangle
040AD4 C3 E0 09 04       1465 	jp fn_rectf
040AD8                   1466 
040AD8                   1467 ; get pixel color value in the sprite buffer
040AD8                   1468 ; returns A: pixel color (0-63)
040AD8                   1469 fn_get_pixel_color:
040AD8 11 00 00 00       1470 	ld de,$000000 ; reset deu
040ADC                   1471 
040ADC                   1472 	; calculate the offset to add to the address
040ADC 21 7A 12 04       1473 	ld hl,ypix
040AE0 5E                1474 	ld e,(hl) ; E = ypix
040AE1 21 7C 12 04       1475 	ld hl,spr_size
040AE5 56                1476 	ld d,(hl) ; D = sprsize
040AE6 D5                1477 	push de
040AE7 E1                1478 	pop hl
040AE8 ED 6C             1479 	mlt hl ; HL = ypix * sprsize
040AEA E5                1480 	push hl
040AEB 21 79 12 04       1481 	ld hl,xpix
040AEF 5E                1482 	ld e,(hl)
040AF0 16 00             1483 	ld d,0
040AF2 E1                1484 	pop hl
040AF3 19                1485 	add hl,de ; HL = (ypix * sprsize) + xpix
040AF4                   1486 
040AF4 11 53 13 04       1487 	ld de,current_frame
040AF8 1A                1488 	ld a,(de)
040AF9 FE 00             1489 	cp 0
040AFB 28 16             1490 	jr z,gpc_end_loop
040AFD                   1491 
040AFD 47                1492 	ld b,a
040AFE E5                1493 	push hl
040AFF 11 00 00 00       1494 	ld de,$000000
040B03 21 7C 12 04       1495 	ld hl,spr_size
040B07 5E                1496 	ld e,(hl)
040B08 56                1497 	ld d,(hl)
040B09 D5                1498 	push de
040B0A E1                1499 	pop hl
040B0B ED 6C             1500 	mlt hl
040B0D E5                1501 	push hl
040B0E D1                1502 	pop de ; DE = sprsize²
040B0F E1                1503 	pop hl
040B10                   1504 
040B10                   1505 gpc_loop:
040B10 19                1506 	add hl,de
040B11 10 FD             1507 	djnz gpc_loop
040B13                   1508 
040B13                   1509 gpc_end_loop:
040B13                   1510 	; add the offset to the address
040B13 11 5C 13 04       1511 	ld de,sprite_buffer
040B17 19                1512 	add hl,de ; HL = sprite_buffer + ((ypix * sprsize) + xpix)
040B18                   1513 
040B18                   1514 	; get pixel color value
040B18 7E                1515 	ld a,(hl)
040B19                   1516 
040B19 C9                1517 	ret
040B1A                   1518 
040B1A                   1519 ; get pixel color value in the sprite buffer
040B1A                   1520 ; A: pixel color (0-63)
040B1A                   1521 fn_set_pixel_color:
040B1A 11 00 00 00       1522 	ld de,$000000 ; reset deu
040B1E                   1523 
040B1E                   1524 	; calculate the offset to add to the address
040B1E 21 7A 12 04       1525 	ld hl,ypix
040B22 5E                1526 	ld e,(hl) ; E = ypix
040B23 21 7C 12 04       1527 	ld hl,spr_size
040B27 56                1528 	ld d,(hl) ; D = sprsize
040B28 D5                1529 	push de
040B29 E1                1530 	pop hl
040B2A ED 6C             1531 	mlt hl ; HL = ypix * sprsize
040B2C E5                1532 	push hl
040B2D 21 79 12 04       1533 	ld hl,xpix
040B31 5E                1534 	ld e,(hl)
040B32 16 00             1535 	ld d,0
040B34 E1                1536 	pop hl
040B35 19                1537 	add hl,de ; HL = (ypix * sprsize) + xpix
040B36 F5                1538 	push af
040B37                   1539 
040B37 11 53 13 04       1540 	ld de,current_frame
040B3B 1A                1541 	ld a,(de)
040B3C FE 00             1542 	cp 0
040B3E 28 16             1543 	jr z,spc_end_loop
040B40                   1544 
040B40 47                1545 	ld b,a
040B41 E5                1546 	push hl
040B42 11 00 00 00       1547 	ld de,$000000
040B46 21 7C 12 04       1548 	ld hl,spr_size
040B4A 5E                1549 	ld e,(hl)
040B4B 56                1550 	ld d,(hl)
040B4C D5                1551 	push de
040B4D E1                1552 	pop hl
040B4E ED 6C             1553 	mlt hl
040B50 E5                1554 	push hl
040B51 D1                1555 	pop de ; DE = sprsize²
040B52 E1                1556 	pop hl
040B53                   1557 
040B53                   1558 spc_loop:
040B53 19                1559 	add hl,de
040B54 10 FD             1560 	djnz spc_loop
040B56                   1561 
040B56                   1562 spc_end_loop:
040B56                   1563 
040B56                   1564 	; add the offset to the address
040B56 11 5C 13 04       1565 	ld de,sprite_buffer
040B5A 19                1566 	add hl,de ; HL = sprite_buffer + ((ypix * sprsize) + xpix)
040B5B                   1567 
040B5B                   1568 	; set pixel color value
040B5B F1                1569 	pop af
040B5C 77                1570 	ld (hl),a
040B5D                   1571 
040B5D C9                1572 	ret
040B5E                   1573 
040B5E                   1574 fn_move_up:
040B5E 21 7A 12 04       1575 	ld hl,ypix
040B62 35                1576 	dec (hl)
040B63 C9                1577 	ret
040B64                   1578 
040B64                   1579 fn_move_down:
040B64 21 7A 12 04       1580 	ld hl,ypix
040B68 34                1581 	inc (hl)
040B69 C9                1582 	ret
040B6A                   1583 
040B6A                   1584 fn_move_left:
040B6A 21 79 12 04       1585 	ld hl,xpix
040B6E 35                1586 	dec (hl)
040B6F C9                1587 	ret
040B70                   1588 
040B70                   1589 fn_move_right:
040B70 21 79 12 04       1590 	ld hl,xpix
040B74 34                1591 	inc (hl)
040B75 C9                1592 	ret
040B76                   1593 
040B76                   1594 ; draw palette color whit border and selection
040B76                   1595 ; C = color number (0-63)
040B76                   1596 fn_draw_palette_with_border:
040B76 C5                1597 	push bc
040B77                   1598 
040B77                   1599 	; choose palette color
040B77                   1600 	vdu 18
040B77 3E 12             1600 		LD	A, function
040B79 49 D7             1600 		RST.LIS	10h
040B7B                   1601 	vdu 0
040B7B 3E 00             1601 		LD	A, function
040B7D 49 D7             1601 		RST.LIS	10h
040B7F C1                1602 	pop bc
040B80 C5                1603 	push bc
040B81 79                1604 	ld a,c
040B82                   1605 	vdu_a
040B82 49 D7             1605 		RST.LIS	10h
040B84                   1606 
040B84                   1607 	; store coordinates for a palette square
040B84 DD 21 69 12 04    1608 	ld ix,x1
040B89 E1                1609 	pop hl
040B8A E5                1610 	push hl
040B8B 26 05             1611 	ld h,5
040B8D ED 6C             1612 	mlt hl
040B8F E5                1613 	push hl
040B90 DD 75 00          1614 	ld (ix+0),l
040B93 DD 74 01          1615 	ld (ix+1),h
040B96                   1616 
040B96 DD 21 6B 12 04    1617 	ld ix,y1
040B9B 21 00 00 00       1618 	ld hl,0
040B9F DD 75 00          1619 	ld (ix+0),l
040BA2 DD 74 01          1620 	ld (ix+1),h
040BA5                   1621 
040BA5 DD 21 6D 12 04    1622 	ld ix,x2
040BAA E1                1623 	pop hl
040BAB 11 04 00 00       1624 	ld de,4
040BAF 19                1625 	add hl,de
040BB0 DD 75 00          1626 	ld (ix+0),l
040BB3 DD 74 01          1627 	ld (ix+1),h
040BB6                   1628 
040BB6 DD 21 6F 12 04    1629 	ld ix,y2
040BBB 21 0A 00 00       1630 	ld hl,10
040BBF DD 75 00          1631 	ld (ix+0),l
040BC2 DD 74 01          1632 	ld (ix+1),h
040BC5                   1633 
040BC5                   1634 	; draw the palette filled square
040BC5 CD E0 09 04       1635 	call fn_rectf
040BC9                   1636 
040BC9                   1637 	; choose grey color
040BC9                   1638 	vdu 18
040BC9 3E 12             1638 		LD	A, function
040BCB 49 D7             1638 		RST.LIS	10h
040BCD                   1639 	vdu 0
040BCD 3E 00             1639 		LD	A, function
040BCF 49 D7             1639 		RST.LIS	10h
040BD1 3E 07             1640 	ld a,COLOR_GREY
040BD3                   1641 	vdu_a
040BD3 49 D7             1641 		RST.LIS	10h
040BD5                   1642 
040BD5                   1643 	; draw the palette square border
040BD5 CD 21 09 04       1644 	call fn_rect
040BD9                   1645 
040BD9                   1646 	; next color ?
040BD9 C1                1647 	pop bc
040BDA                   1648 
040BDA C9                1649 	ret
040BDB                   1650 
040BDB                   1651 ; draw palette color whitout border and selection
040BDB                   1652 ; C = color number (0-63)
040BDB                   1653 fn_draw_palette_without_border:
040BDB C5                1654 	push bc
040BDC                   1655 
040BDC                   1656 	; choose palette color
040BDC                   1657 	vdu 18
040BDC 3E 12             1657 		LD	A, function
040BDE 49 D7             1657 		RST.LIS	10h
040BE0                   1658 	vdu 0
040BE0 3E 00             1658 		LD	A, function
040BE2 49 D7             1658 		RST.LIS	10h
040BE4 C1                1659 	pop bc
040BE5 C5                1660 	push bc
040BE6 79                1661 	ld a,c
040BE7                   1662 	vdu_a
040BE7 49 D7             1662 		RST.LIS	10h
040BE9                   1663 
040BE9                   1664 	; store coordinates for a palette square
040BE9 DD 21 69 12 04    1665 	ld ix,x1
040BEE E1                1666 	pop hl
040BEF E5                1667 	push hl
040BF0 26 05             1668 	ld h,5
040BF2 ED 6C             1669 	mlt hl
040BF4 E5                1670 	push hl
040BF5 DD 75 00          1671 	ld (ix+0),l
040BF8 DD 74 01          1672 	ld (ix+1),h
040BFB                   1673 
040BFB DD 21 6B 12 04    1674 	ld ix,y1
040C00 21 00 00 00       1675 	ld hl,0
040C04 DD 75 00          1676 	ld (ix+0),l
040C07 DD 74 01          1677 	ld (ix+1),h
040C0A                   1678 
040C0A DD 21 6D 12 04    1679 	ld ix,x2
040C0F E1                1680 	pop hl
040C10 11 04 00 00       1681 	ld de,4
040C14 19                1682 	add hl,de
040C15 DD 75 00          1683 	ld (ix+0),l
040C18 DD 74 01          1684 	ld (ix+1),h
040C1B                   1685 
040C1B DD 21 6F 12 04    1686 	ld ix,y2
040C20 21 0A 00 00       1687 	ld hl,10
040C24 DD 75 00          1688 	ld (ix+0),l
040C27 DD 74 01          1689 	ld (ix+1),h
040C2A                   1690 
040C2A                   1691 	; draw the palette filled square
040C2A CD E0 09 04       1692 	call fn_rectf
040C2E                   1693 
040C2E C1                1694 	pop bc
040C2F                   1695 
040C2F C9                1696 	ret
040C30                   1697 
040C30                   1698 ; get an ascii key value
040C30                   1699 fn_input_key:
040C30 C5                1700 	push bc
040C31                   1701 	moscall mos_getkey
040C31 3E 00             1701 		LD	A, function
040C33 49 CF             1701 		RST.LIS	08h
040C35 C1                1702 	pop bc
040C36 C9                1703 	ret
040C37                   1704 
040C37                   1705 ; input a text of 8 chars
040C37                   1706 fn_input_text8:
040C37                   1707 	; locate x,y
040C37                   1708 	vdu 31
040C37 3E 1F             1708 		LD	A, function
040C39 49 D7             1708 		RST.LIS	10h
040C3B                   1709 	vdu FILENAME_X
040C3B 3E 07             1709 		LD	A, function
040C3D 49 D7             1709 		RST.LIS	10h
040C3F                   1710 	vdu FILENAME_Y
040C3F 3E 18             1710 		LD	A, function
040C41 49 D7             1710 		RST.LIS	10h
040C43                   1711 
040C43                   1712 	; print text
040C43 21 E9 12 04       1713 	ld hl,filename_label
040C47 01 00 00 00       1714 	ld bc,0
040C4B AF                1715 	xor a
040C4C 49 DF             1716 	rst.lis $18
040C4E                   1717 
040C4E                   1718 	; show cursor
040C4E                   1719 	vdu 23
040C4E 3E 17             1719 		LD	A, function
040C50 49 D7             1719 		RST.LIS	10h
040C52                   1720 	vdu 1
040C52 3E 01             1720 		LD	A, function
040C54 49 D7             1720 		RST.LIS	10h
040C56                   1721 	vdu 1
040C56 3E 01             1721 		LD	A, function
040C58 49 D7             1721 		RST.LIS	10h
040C5A                   1722 
040C5A 0E 00             1723 	ld c,0
040C5C                   1724 
040C5C                   1725 it8_loop:
040C5C                   1726 	; get ascii key
040C5C CD 30 0C 04       1727 	call fn_input_key
040C60 B7                1728 	or a
040C61 CA 5C 0C 04       1729 	jp z,it8_loop
040C65                   1730 
040C65 FE 2E             1731 	cp '.'
040C67 CA B1 0C 04       1732 	jp z,it8l_add_char
040C6B                   1733 
040C6B FE 2D             1734 	cp '-'
040C6D CA B1 0C 04       1735 	jp z,it8l_add_char
040C71                   1736 
040C71 FE 5F             1737 	cp '_'
040C73 CA B1 0C 04       1738 	jp z,it8l_add_char
040C77                   1739 
040C77 FE 7F             1740 	cp 127
040C79 CA E5 0C 04       1741 	jp z,it8l_backspace
040C7D                   1742 
040C7D FE 0D             1743 	cp 13
040C7F CA 14 0D 04       1744 	jp z,it8l_return
040C83                   1745 
040C83 FE 30             1746 	cp '0'
040C85 DA 5C 0C 04       1747 	jp c,it8_loop
040C89                   1748 
040C89 16 39             1749 	ld d,'9'
040C8B 14                1750 	inc d
040C8C BA                1751 	cp d
040C8D DA B1 0C 04       1752 	jp c,it8l_add_char
040C91                   1753 
040C91 FE 41             1754 	cp 'A'
040C93 DA 5C 0C 04       1755 	jp c,it8_loop
040C97                   1756 
040C97 16 5A             1757 	ld d,'Z'
040C99 14                1758 	inc d
040C9A BA                1759 	cp d
040C9B DA B1 0C 04       1760 	jp c,it8l_add_char
040C9F                   1761 
040C9F FE 61             1762 	cp 'a'
040CA1 DA 5C 0C 04       1763 	jp c,it8_loop
040CA5                   1764 
040CA5 16 7A             1765 	ld d,'z'
040CA7 14                1766 	inc d
040CA8 BA                1767 	cp d
040CA9 DA B1 0C 04       1768 	jp c,it8l_add_char
040CAD                   1769 
040CAD C3 5C 0C 04       1770 	jp it8_loop
040CB1                   1771 
040CB1                   1772 it8l_add_char:
040CB1 F5                1773 	push af
040CB2 79                1774 	ld a,c
040CB3 FE 0C             1775 	cp 12
040CB5 38 05             1776 	jr c,it8l_poke_char
040CB7 F1                1777 	pop af
040CB8 C3 5C 0C 04       1778 	jp it8_loop
040CBC                   1779 
040CBC                   1780 it8l_poke_char:
040CBC F1                1781 	pop af
040CBD 21 F3 12 04       1782 	ld hl,filename
040CC1 06 00             1783 	ld b,0
040CC3 09                1784 	add hl,bc
040CC4 77                1785 	ld (hl),a
040CC5 0C                1786 	inc c
040CC6 F5                1787 	push af
040CC7 C5                1788 	push bc
040CC8                   1789 
040CC8                   1790 	; locate x,y
040CC8                   1791 	vdu 31
040CC8 3E 1F             1791 		LD	A, function
040CCA 49 D7             1791 		RST.LIS	10h
040CCC                   1792 	vdu FILENAME_X+10
040CCC 3E 11             1792 		LD	A, function
040CCE 49 D7             1792 		RST.LIS	10h
040CD0                   1793 	vdu FILENAME_Y
040CD0 3E 18             1793 		LD	A, function
040CD2 49 D7             1793 		RST.LIS	10h
040CD4                   1794 
040CD4                   1795 	; print text
040CD4 21 F3 12 04       1796 	ld hl,filename
040CD8 01 00 00 00       1797 	ld bc,0
040CDC AF                1798 	xor a
040CDD 49 DF             1799 	rst.lis $18
040CDF                   1800 
040CDF C1                1801 	pop bc
040CE0 F1                1802 	pop af
040CE1                   1803 
040CE1 C3 5C 0C 04       1804 	jp it8_loop
040CE5                   1805 
040CE5                   1806 it8l_backspace:
040CE5 79                1807 	ld a,c
040CE6 FE 00             1808 	cp 0
040CE8 CA 5C 0C 04       1809 	jp z,it8_loop
040CEC                   1810 
040CEC                   1811 	; delete a character of the filename
040CEC 21 F3 12 04       1812 	ld hl,filename
040CF0 06 00             1813 	ld b,0
040CF2 09                1814 	add hl,bc
040CF3 AF                1815 	xor a
040CF4 77                1816 	ld (hl),a
040CF5 0D                1817 	dec c
040CF6 C5                1818 	push bc
040CF7                   1819 
040CF7                   1820 	; locate x,y
040CF7                   1821 	vdu 31
040CF7 3E 1F             1821 		LD	A, function
040CF9 49 D7             1821 		RST.LIS	10h
040CFB 3E 11             1822 	ld a,FILENAME_X+10
040CFD 81                1823 	add a,c
040CFE                   1824 	vdu_a
040CFE 49 D7             1824 		RST.LIS	10h
040D00                   1825 	vdu FILENAME_Y
040D00 3E 18             1825 		LD	A, function
040D02 49 D7             1825 		RST.LIS	10h
040D04                   1826 
040D04                   1827 	; print text
040D04 21 0B 13 04       1828 	ld hl,spacechar
040D08 01 00 00 00       1829 	ld bc,0
040D0C AF                1830 	xor a
040D0D 49 DF             1831 	rst.lis $18
040D0F                   1832 
040D0F C1                1833 	pop bc
040D10 C3 5C 0C 04       1834 	jp it8_loop
040D14                   1835 
040D14                   1836 it8l_return:
040D14                   1837 	; locate x,y
040D14                   1838 	vdu 31
040D14 3E 1F             1838 		LD	A, function
040D16 49 D7             1838 		RST.LIS	10h
040D18                   1839 	vdu FILENAME_X
040D18 3E 07             1839 		LD	A, function
040D1A 49 D7             1839 		RST.LIS	10h
040D1C                   1840 	vdu FILENAME_Y
040D1C 3E 18             1840 		LD	A, function
040D1E 49 D7             1840 		RST.LIS	10h
040D20                   1841 
040D20                   1842 	; print text
040D20 21 0D 13 04       1843 	ld hl,void_filename
040D24 01 00 00 00       1844 	ld bc,0
040D28 AF                1845 	xor a
040D29 49 DF             1846 	rst.lis $18
040D2B                   1847 
040D2B                   1848 	; hide cursor
040D2B                   1849 	vdu 23
040D2B 3E 17             1849 		LD	A, function
040D2D 49 D7             1849 		RST.LIS	10h
040D2F                   1850 	vdu 1
040D2F 3E 01             1850 		LD	A, function
040D31 49 D7             1850 		RST.LIS	10h
040D33                   1851 	vdu 0
040D33 3E 00             1851 		LD	A, function
040D35 49 D7             1851 		RST.LIS	10h
040D37                   1852 
040D37 C9                1853 	ret
040D38                   1854 
040D38                   1855 ; load a sprite, giving its name
040D38                   1856 fn_load_sprite:
040D38                   1857 	; clear filename
040D38 21 F3 12 04       1858 	ld hl,filename
040D3C 06 0C             1859 	ld b,12
040D3E AF                1860 	xor a
040D3F                   1861 
040D3F                   1862 ls_clear_filename:
040D3F 77                1863 	ld (hl),a
040D40 23                1864 	inc hl
040D41 10 FC             1865 	djnz ls_clear_filename
040D43                   1866 
040D43                   1867 	; get filename
040D43 CD 37 0C 04       1868 	call fn_input_text8
040D47                   1869 
040D47                   1870 	; set path to home
040D47 21 00 13 04       1871 	ld hl,sprite_path
040D4B                   1872 	moscall mos_cd
040D4B 3E 03             1872 		LD	A, function
040D4D 49 CF             1872 		RST.LIS	08h
040D4F                   1873 
040D4F                   1874 	; exit on error
040D4F FE 00             1875 	cp 0
040D51 C2 1C 0E 04       1876 	jp nz,ls_folder_error
040D55                   1877 
040D55                   1878 	; open the file for read
040D55 21 F3 12 04       1879 	ld hl,filename
040D59 0E 01             1880 	ld c,fa_open_existing|fa_read
040D5B                   1881 	moscall mos_fopen
040D5B 3E 0A             1881 		LD	A, function
040D5D 49 CF             1881 		RST.LIS	08h
040D5F                   1882 
040D5F                   1883 	; exit on error
040D5F FE 00             1884 	cp 0
040D61 CA 4A 0E 04       1885 	jp z,ls_file_error
040D65                   1886 
040D65                   1887 	; filehandle -> C
040D65 4F                1888 	ld c,a
040D66                   1889 
040D66                   1890 	; get colors count
040D66                   1891 	moscall mos_fgetc
040D66 3E 0C             1891 		LD	A, function
040D68 49 CF             1891 		RST.LIS	08h
040D6A DA F7 0D 04       1892 	jp c,ls_close_error
040D6E                   1893 
040D6E FE 40             1894 	cp MAX_COLORS
040D70 C2 F7 0D 04       1895 	jp nz,ls_close_error
040D74                   1896 
040D74                   1897 	; store colors count
040D74 21 52 13 04       1898 	ld hl,colors_count
040D78 77                1899 	ld (hl),a
040D79                   1900 
040D79                   1901 	; get frames count
040D79                   1902 	moscall mos_fgetc
040D79 3E 0C             1902 		LD	A, function
040D7B 49 CF             1902 		RST.LIS	08h
040D7D DA F7 0D 04       1903 	jp c,ls_close_error
040D81                   1904 
040D81                   1905 	; store frames count
040D81 21 54 13 04       1906 	ld hl,frames_count
040D85 77                1907 	ld (hl),a
040D86 21 53 13 04       1908 	ld hl,current_frame
040D8A 3D                1909 	dec a
040D8B 77                1910 	ld (hl),a
040D8C                   1911 
040D8C                   1912 	; get sprite size
040D8C                   1913 	moscall mos_fgetc
040D8C 3E 0C             1913 		LD	A, function
040D8E 49 CF             1913 		RST.LIS	08h
040D90 DA F7 0D 04       1914 	jp c,ls_close_error
040D94                   1915 
040D94                   1916 	; store sprite size
040D94 21 7C 12 04       1917 	ld hl,spr_size
040D98 77                1918 	ld (hl),a
040D99                   1919 
040D99                   1920 	; set 4x4 pixel width
040D99 FE 04             1921 	cp SPR44
040D9B 20 09             1922 	jr nz,ls_next1
040D9D                   1923 
040D9D 21 7B 12 04       1924 	ld hl,pixel_width
040DA1 06 20             1925 	ld b,SPR44_width
040DA3 70                1926 	ld (hl),b
040DA4 18 21             1927 	jr ls_next4
040DA6                   1928 
040DA6                   1929 ls_next1:
040DA6                   1930 	; set 8x8 pixel width
040DA6 FE 08             1931 	cp SPR88
040DA8 20 09             1932 	jr nz,ls_next2
040DAA                   1933 
040DAA 21 7B 12 04       1934 	ld hl,pixel_width
040DAE 06 10             1935 	ld b,SPR88_width
040DB0 70                1936 	ld (hl),b
040DB1 18 14             1937 	jr ls_next4
040DB3                   1938 
040DB3                   1939 ls_next2:
040DB3                   1940 
040DB3                   1941 	; set 16x16 pixel width
040DB3 FE 10             1942 	cp SPR1616
040DB5 20 09             1943 	jr nz,ls_next3
040DB7                   1944 
040DB7 21 7B 12 04       1945 	ld hl,pixel_width
040DBB 06 08             1946 	ld b,SPR1616_width
040DBD 70                1947 	ld (hl),b
040DBE 18 07             1948 	jr ls_next4
040DC0                   1949 
040DC0                   1950 ls_next3:
040DC0                   1951 
040DC0 21 7B 12 04       1952 	ld hl,pixel_width
040DC4 06 04             1953 	ld b,SPR3232_width
040DC6 70                1954 	ld (hl),b
040DC7                   1955 
040DC7                   1956 ls_next4:
040DC7                   1957 
040DC7 6F                1958 	ld l,a
040DC8 67                1959 	ld h,a
040DC9 ED 6C             1960 	mlt hl ; HL = sprite length
040DCB E5                1961 	push hl
040DCC                   1962 
040DCC                   1963 	; get frames count
040DCC 21 53 13 04       1964 	ld hl,current_frame
040DD0 46                1965 	ld b,(hl)
040DD1                   1966 
040DD1 E1                1967 	pop hl
040DD2                   1968 
040DD2 78                1969 	ld a,b
040DD3 FE 00             1970 	cp 0
040DD5 28 07             1971 	jr z,ls_read_data
040DD7                   1972 
040DD7                   1973 	; de = size²
040DD7 11 00 04 00       1974 	ld de,ONE_FRAME_BUFFER_SIZE
040DDB                   1975 ls_add_length:
040DDB 19                1976 	add hl,de
040DDC 10 FD             1977 	djnz ls_add_length
040DDE                   1978 
040DDE                   1979 ls_read_data:
040DDE E5                1980 	push hl
040DDF E5                1981 	push hl
040DE0 D1                1982 	pop de
040DE1 7B                1983 	ld a,e
040DE2 21 5C 13 04       1984 	ld hl,sprite_buffer
040DE6                   1985 	moscall mos_fread
040DE6 3E 1A             1985 		LD	A, function
040DE8 49 CF             1985 		RST.LIS	08h
040DEA E1                1986 	pop hl
040DEB 7C                1987 	ld a,h
040DEC BA                1988 	cp d
040DED 20 08             1989 	jr nz,ls_close_error
040DEF 7D                1990 	ld a,l
040DF0 BB                1991 	cp e
040DF1 20 04             1992 	jr nz,ls_close_error
040DF3 C3 24 0E 04       1993 	jp ls_close
040DF7                   1994 
040DF7                   1995 ls_close_error:
040DF7 C5                1996 	push bc
040DF8                   1997 
040DF8                   1998 	; read error
040DF8 CD 9F 10 04       1999 	call fn_print_file_error
040DFC                   2000 
040DFC C1                2001 	pop bc
040DFD                   2002 
040DFD                   2003 	; close the file
040DFD                   2004 	moscall mos_fclose
040DFD 3E 0B             2004 		LD	A, function
040DFF 49 CF             2004 		RST.LIS	08h
040E01                   2005 
040E01                   2006 	; set path to home
040E01 21 08 13 04       2007 	ld hl,back_path
040E05                   2008 	moscall mos_cd
040E05 3E 03             2008 		LD	A, function
040E07 49 CF             2008 		RST.LIS	08h
040E09                   2009 
040E09                   2010 	; exit on error
040E09 FE 00             2011 	cp 0
040E0B C2 1C 0E 04       2012 	jp nz,ls_folder_error
040E0F                   2013 
040E0F                   2014 
040E0F                   2015 	; reset current frame and coordinates of the drawing pixel
040E0F 21 79 12 04       2016 	ld hl,xpix
040E13 AF                2017 	xor a
040E14 77                2018 	ld (hl),a
040E15 21 7A 12 04       2019 	ld hl,ypix
040E19 77                2020 	ld (hl),a
040E1A 18 25             2021 	jr ls_exit
040E1C                   2022 
040E1C                   2023 ls_folder_error:
040E1C                   2024 	; write error
040E1C CD D6 10 04       2025 	call fn_print_folder_error
040E20 C3 41 0E 04       2026 	jp ls_exit
040E24                   2027 
040E24                   2028 ls_close:
040E24                   2029 	; close the file
040E24                   2030 	moscall mos_fclose
040E24 3E 0B             2030 		LD	A, function
040E26 49 CF             2030 		RST.LIS	08h
040E28                   2031 
040E28                   2032 	; set path to home
040E28 21 08 13 04       2033 	ld hl,back_path
040E2C                   2034 	moscall mos_cd
040E2C 3E 03             2034 		LD	A, function
040E2E 49 CF             2034 		RST.LIS	08h
040E30                   2035 
040E30                   2036 	; exit on error
040E30 FE 00             2037 	cp 0
040E32 C2 1C 0E 04       2038 	jp nz,ls_folder_error
040E36                   2039 
040E36                   2040 	; reset current frame and coordinates of the drawing pixel
040E36 21 79 12 04       2041 	ld hl,xpix
040E3A AF                2042 	xor a
040E3B 77                2043 	ld (hl),a
040E3C 21 7A 12 04       2044 	ld hl,ypix
040E40 77                2045 	ld (hl),a
040E41                   2046 
040E41                   2047 ls_exit:
040E41 CD B7 11 04       2048 	call fn_show_spr_descr
040E45 CD 72 11 04       2049 	call fn_change_frames_count
040E49 C9                2050 	ret
040E4A                   2051 
040E4A                   2052 ls_file_error:
040E4A CD 9F 10 04       2053 	call fn_print_file_error
040E4E                   2054 
040E4E                   2055 	; set path to home
040E4E 21 08 13 04       2056 	ld hl,back_path
040E52                   2057 	moscall mos_cd
040E52 3E 03             2057 		LD	A, function
040E54 49 CF             2057 		RST.LIS	08h
040E56                   2058 
040E56                   2059 	; exit on error
040E56 FE 00             2060 	cp 0
040E58 C2 1C 0E 04       2061 	jp nz,ls_folder_error
040E5C                   2062 
040E5C C9                2063 	ret
040E5D                   2064 
040E5D                   2065 ; save a sprite, giving its name
040E5D                   2066 fn_save_sprite:
040E5D                   2067 	; clear filename
040E5D 21 F3 12 04       2068 	ld hl,filename
040E61 06 0C             2069 	ld b,12
040E63 AF                2070 	xor a
040E64                   2071 
040E64                   2072 ss_clear_filename:
040E64 77                2073 	ld (hl),a
040E65 23                2074 	inc hl
040E66 10 FC             2075 	djnz ss_clear_filename
040E68                   2076 
040E68                   2077 	; get filename
040E68 CD 37 0C 04       2078 	call fn_input_text8
040E6C                   2079 
040E6C                   2080 	; set path to sprite path
040E6C 21 00 13 04       2081 	ld hl,sprite_path
040E70                   2082 	moscall mos_cd
040E70 3E 03             2082 		LD	A, function
040E72 49 CF             2082 		RST.LIS	08h
040E74                   2083 
040E74                   2084 	; create it on error
040E74 FE 00             2085 	cp 0
040E76 F5                2086 	push af
040E77 C4 4C 12 04       2087 	call nz,fn_create_sprite_folder
040E7B F1                2088 	pop af
040E7C 28 08             2089 	jr z,ss_next
040E7E                   2090 
040E7E                   2091 	; set path to sprite path
040E7E 21 00 13 04       2092 	ld hl,sprite_path
040E82                   2093 	moscall mos_cd
040E82 3E 03             2093 		LD	A, function
040E84 49 CF             2093 		RST.LIS	08h
040E86                   2094 
040E86                   2095 ss_next:
040E86                   2096 
040E86                   2097 	; exit on error
040E86 FE 00             2098 	cp 0
040E88 C2 14 0F 04       2099 	jp nz,ss_folder_error
040E8C                   2100 
040E8C                   2101 	; open the file for write
040E8C 21 F3 12 04       2102 	ld hl,filename
040E90 0E 0A             2103 	ld c,fa_create_always|fa_write
040E92                   2104 	moscall mos_fopen
040E92 3E 0A             2104 		LD	A, function
040E94 49 CF             2104 		RST.LIS	08h
040E96                   2105 
040E96                   2106 	; exit on error
040E96 FE 00             2107 	cp 0
040E98 CA 45 0F 04       2108 	jp z,ss_file_error
040E9C                   2109 
040E9C                   2110 	; filehandle -> C
040E9C 4F                2111 	ld c,a
040E9D                   2112 
040E9D                   2113 	; store colors count in the file
040E9D 06 40             2114 	ld b,MAX_COLORS
040E9F                   2115 	moscall mos_fputc
040E9F 3E 0D             2115 		LD	A, function
040EA1 49 CF             2115 		RST.LIS	08h
040EA3                   2116 
040EA3                   2117 	; store frames count in the file
040EA3 21 54 13 04       2118 	ld hl,frames_count
040EA7 46                2119 	ld b,(hl)
040EA8                   2120 	moscall mos_fputc
040EA8 3E 0D             2120 		LD	A, function
040EAA 49 CF             2120 		RST.LIS	08h
040EAC                   2121 
040EAC                   2122 	; store sprite size in the file
040EAC 21 7C 12 04       2123 	ld hl,spr_size
040EB0 46                2124 	ld b,(hl)
040EB1                   2125 	moscall mos_fputc
040EB1 3E 0D             2125 		LD	A, function
040EB3 49 CF             2125 		RST.LIS	08h
040EB5                   2126 
040EB5                   2127 	; de = size²
040EB5 68                2128 	ld l,b
040EB6 60                2129 	ld h,b
040EB7 ED 6C             2130 	mlt hl ; HL = sprite length
040EB9 E5                2131 	push hl
040EBA                   2132 
040EBA                   2133 	; get frames count
040EBA 21 53 13 04       2134 	ld hl,current_frame
040EBE 46                2135 	ld b,(hl)
040EBF                   2136 
040EBF E1                2137 	pop hl
040EC0                   2138 
040EC0 78                2139 	ld a,b
040EC1 FE 00             2140 	cp 0
040EC3 28 07             2141 	jr z,ss_write_data
040EC5                   2142 
040EC5 11 00 04 00       2143 	ld de,ONE_FRAME_BUFFER_SIZE
040EC9                   2144 ss_add_length:
040EC9 19                2145 	add hl,de
040ECA 10 FD             2146 	djnz ss_add_length
040ECC                   2147 
040ECC                   2148 ss_write_data:
040ECC E5                2149 	push hl
040ECD E5                2150 	push hl
040ECE D1                2151 	pop de
040ECF 21 5C 13 04       2152 	ld hl,sprite_buffer
040ED3                   2153 	moscall mos_fwrite
040ED3 3E 1B             2153 		LD	A, function
040ED5 49 CF             2153 		RST.LIS	08h
040ED7 E1                2154 	pop hl
040ED8 7C                2155 	ld a,h
040ED9 BA                2156 	cp d
040EDA 20 08             2157 	jr nz,ss_close_error
040EDC 7D                2158 	ld a,l
040EDD BB                2159 	cp e
040EDE 20 04             2160 	jr nz,ss_close_error
040EE0 C3 1C 0F 04       2161 	jp ss_close
040EE4                   2162 
040EE4                   2163 ss_close_error:
040EE4 C5                2164 	push bc
040EE5                   2165 
040EE5                   2166 	; write error
040EE5 CD 9F 10 04       2167 	call fn_print_file_error
040EE9                   2168 
040EE9 C1                2169 	pop bc
040EEA                   2170 
040EEA                   2171 	; close the file
040EEA                   2172 	moscall mos_fclose
040EEA 3E 0B             2172 		LD	A, function
040EEC 49 CF             2172 		RST.LIS	08h
040EEE                   2173 
040EEE                   2174 	; set path to home
040EEE 21 08 13 04       2175 	ld hl,back_path
040EF2                   2176 	moscall mos_cd
040EF2 3E 03             2176 		LD	A, function
040EF4 49 CF             2176 		RST.LIS	08h
040EF6                   2177 
040EF6                   2178 	; exit on error
040EF6 FE 00             2179 	cp 0
040EF8 C2 14 0F 04       2180 	jp nz,ss_folder_error
040EFC                   2181 
040EFC                   2182 	; reset current frame and coordinates of the drawing pixel
040EFC 21 54 13 04       2183 	ld hl,frames_count
040F00 7E                2184 	ld a,(hl)
040F01 3D                2185 	dec a
040F02 21 53 13 04       2186 	ld hl,current_frame
040F06 77                2187 	ld (hl),a
040F07 21 79 12 04       2188 	ld hl,xpix
040F0B AF                2189 	xor a
040F0C 77                2190 	ld (hl),a
040F0D 21 7A 12 04       2191 	ld hl,ypix
040F11 77                2192 	ld (hl),a
040F12 18 30             2193 	jr ss_exit
040F14                   2194 
040F14                   2195 ss_folder_error:
040F14                   2196 	; write error
040F14 CD D6 10 04       2197 	call fn_print_folder_error
040F18 C3 44 0F 04       2198 	jp ss_exit
040F1C                   2199 
040F1C                   2200 ss_close:
040F1C                   2201 	; close the file
040F1C                   2202 	moscall mos_fclose
040F1C 3E 0B             2202 		LD	A, function
040F1E 49 CF             2202 		RST.LIS	08h
040F20                   2203 
040F20                   2204 	; set path to home
040F20 21 08 13 04       2205 	ld hl,back_path
040F24                   2206 	moscall mos_cd
040F24 3E 03             2206 		LD	A, function
040F26 49 CF             2206 		RST.LIS	08h
040F28                   2207 
040F28                   2208 	; exit on error
040F28 FE 00             2209 	cp 0
040F2A C2 14 0F 04       2210 	jp nz,ss_folder_error
040F2E                   2211 
040F2E                   2212 	; reset current frame and coordinates of the drawing pixel
040F2E 21 54 13 04       2213 	ld hl,frames_count
040F32 7E                2214 	ld a,(hl)
040F33 3D                2215 	dec a
040F34 21 53 13 04       2216 	ld hl,current_frame
040F38 77                2217 	ld (hl),a
040F39 21 79 12 04       2218 	ld hl,xpix
040F3D AF                2219 	xor a
040F3E 77                2220 	ld (hl),a
040F3F 21 7A 12 04       2221 	ld hl,ypix
040F43 77                2222 	ld (hl),a
040F44                   2223 
040F44                   2224 ss_exit:
040F44 C9                2225 	ret
040F45                   2226 
040F45                   2227 ss_file_error:
040F45 CD 9F 10 04       2228 	call fn_print_file_error
040F49                   2229 
040F49                   2230 	; set path to home
040F49 21 08 13 04       2231 	ld hl,back_path
040F4D                   2232 	moscall mos_cd
040F4D 3E 03             2232 		LD	A, function
040F4F 49 CF             2232 		RST.LIS	08h
040F51                   2233 
040F51                   2234 	; exit on error
040F51 FE 00             2235 	cp 0
040F53 C2 14 0F 04       2236 	jp nz,ss_folder_error
040F57 C9                2237 	ret
040F58                   2238 
040F58                   2239 ; export sprite data in assembly language, giving its name
040F58                   2240 fn_export_sprite:
040F58                   2241 	; clear filename
040F58 21 F3 12 04       2242 	ld hl,filename
040F5C 06 0C             2243 	ld b,12
040F5E AF                2244 	xor a
040F5F                   2245 
040F5F                   2246 es_clear_filename:
040F5F 77                2247 	ld (hl),a
040F60 23                2248 	inc hl
040F61 10 FC             2249 	djnz es_clear_filename
040F63                   2250 
040F63                   2251 	; get filename
040F63 CD 37 0C 04       2252 	call fn_input_text8
040F67                   2253 
040F67                   2254 	; set path to sprite path
040F67 21 00 13 04       2255 	ld hl,sprite_path
040F6B                   2256 	moscall mos_cd
040F6B 3E 03             2256 		LD	A, function
040F6D 49 CF             2256 		RST.LIS	08h
040F6F                   2257 
040F6F                   2258 	; create it on error
040F6F FE 00             2259 	cp 0
040F71 F5                2260 	push af
040F72 C4 4C 12 04       2261 	call nz,fn_create_sprite_folder
040F76 F1                2262 	pop af
040F77 28 0E             2263 	jr z,es_next
040F79                   2264 
040F79                   2265 	; set path to sprite path
040F79 21 00 13 04       2266 	ld hl,sprite_path
040F7D                   2267 	moscall mos_cd
040F7D 3E 03             2267 		LD	A, function
040F7F 49 CF             2267 		RST.LIS	08h
040F81                   2268 
040F81                   2269 	; exit on error
040F81 FE 00             2270 	cp 0
040F83 C2 83 10 04       2271 	jp nz,es_folder_error
040F87                   2272 
040F87                   2273 es_next:
040F87                   2274 	; open the file for write
040F87 21 F3 12 04       2275 	ld hl,filename
040F8B 0E 0A             2276 	ld c,fa_create_always|fa_write
040F8D                   2277 	moscall mos_fopen
040F8D 3E 0A             2277 		LD	A, function
040F8F 49 CF             2277 		RST.LIS	08h
040F91                   2278 
040F91                   2279 	; exit on error
040F91 FE 00             2280 	cp 0
040F93 CA 8C 10 04       2281 	jp z,es_file_error
040F97                   2282 
040F97                   2283 	; filehandle -> C
040F97 4F                2284 	ld c,a
040F98                   2285 
040F98                   2286 
040F98                   2287 	; L = first frame
040F98 3E 00             2288 	ld a,0
040F9A 21 5C 13 04       2289 	ld hl,sprite_buffer
040F9E 11 00 00 00       2290 	ld de,$000000
040FA2                   2291 
040FA2                   2292 es_frames_repeat:
040FA2 F5                2293 	push af
040FA3 E5                2294 	push hl
040FA4                   2295 
040FA4 F5                2296 	push af
040FA5                   2297 
040FA5                   2298 	; start to write...
040FA5 1E 00             2299 	ld e,0 ; rows
040FA7                   2300 
040FA7 06 3B             2301 	ld b,';'
040FA9                   2302 	moscall mos_fputc
040FA9 3E 0D             2302 		LD	A, function
040FAB 49 CF             2302 		RST.LIS	08h
040FAD                   2303 
040FAD 06 20             2304 	ld b,' '
040FAF                   2305 	moscall mos_fputc
040FAF 3E 0D             2305 		LD	A, function
040FB1 49 CF             2305 		RST.LIS	08h
040FB3                   2306 
040FB3 06 46             2307 	ld b,'F'
040FB5                   2308 	moscall mos_fputc
040FB5 3E 0D             2308 		LD	A, function
040FB7 49 CF             2308 		RST.LIS	08h
040FB9                   2309 
040FB9 06 72             2310 	ld b,'r'
040FBB                   2311 	moscall mos_fputc
040FBB 3E 0D             2311 		LD	A, function
040FBD 49 CF             2311 		RST.LIS	08h
040FBF                   2312 
040FBF 06 6D             2313 	ld b,'m'
040FC1                   2314 	moscall mos_fputc
040FC1 3E 0D             2314 		LD	A, function
040FC3 49 CF             2314 		RST.LIS	08h
040FC5                   2315 
040FC5 06 20             2316 	ld b,' '
040FC7                   2317 	moscall mos_fputc
040FC7 3E 0D             2317 		LD	A, function
040FC9 49 CF             2317 		RST.LIS	08h
040FCB                   2318 
040FCB F1                2319 	pop af
040FCC C6 30             2320 	add a,'0'
040FCE 47                2321 	ld b,a
040FCF                   2322 	moscall mos_fputc
040FCF 3E 0D             2322 		LD	A, function
040FD1 49 CF             2322 		RST.LIS	08h
040FD3                   2323 
040FD3 06 0D             2324 	ld b,13
040FD5                   2325 	moscall mos_fputc
040FD5 3E 0D             2325 		LD	A, function
040FD7 49 CF             2325 		RST.LIS	08h
040FD9                   2326 
040FD9 06 0A             2327 	ld b,10
040FDB                   2328 	moscall mos_fputc
040FDB 3E 0D             2328 		LD	A, function
040FDD 49 CF             2328 		RST.LIS	08h
040FDF                   2329 
040FDF                   2330 es_repeat:
040FDF                   2331 
040FDF 06 44             2332 	ld b,'D'
040FE1                   2333 	moscall mos_fputc
040FE1 3E 0D             2333 		LD	A, function
040FE3 49 CF             2333 		RST.LIS	08h
040FE5                   2334 
040FE5 06 42             2335 	ld b,'B'
040FE7                   2336 	moscall mos_fputc
040FE7 3E 0D             2336 		LD	A, function
040FE9 49 CF             2336 		RST.LIS	08h
040FEB                   2337 
040FEB 06 20             2338 	ld b,' '
040FED                   2339 	moscall mos_fputc
040FED 3E 0D             2339 		LD	A, function
040FEF 49 CF             2339 		RST.LIS	08h
040FF1                   2340 
040FF1 16 00             2341 	ld d,0 ; columns
040FF3                   2342 
040FF3                   2343 es_repeat_line:
040FF3 D5                2344 	push de
040FF4                   2345 
040FF4 7E                2346 	ld a,(hl)
040FF5 23                2347 	inc hl
040FF6                   2348 
040FF6                   2349 	; convert A to BCD
040FF6 CD 5C 12 04       2350 	call fn_hex2bcd
040FFA                   2351 
040FFA                   2352 	; write two numbers (chars)
040FFA 5F                2353 	ld e,a
040FFB E6 F0             2354 	and $f0
040FFD 0F                2355 	rrca
040FFE 0F                2356 	rrca
040FFF 0F                2357 	rrca
041000 0F                2358 	rrca
041001 C6 30             2359 	add '0'
041003                   2360 
041003 47                2361 	ld b,a
041004                   2362 	moscall mos_fputc
041004 3E 0D             2362 		LD	A, function
041006 49 CF             2362 		RST.LIS	08h
041008                   2363 
041008 7B                2364 	ld a,e
041009 E6 0F             2365 	and $0f
04100B C6 30             2366 	add '0'
04100D                   2367 
04100D 47                2368 	ld b,a
04100E                   2369 	moscall mos_fputc
04100E 3E 0D             2369 		LD	A, function
041010 49 CF             2369 		RST.LIS	08h
041012                   2370 
041012 D1                2371 	pop de
041013 14                2372 	inc d
041014 3A 7C 12 04       2373 	ld a,(spr_size)
041018 BA                2374 	cp d
041019 F5                2375 	push af
04101A C4 55 12 04       2376 	call nz,fn_comma
04101E F1                2377 	pop af
04101F C2 F3 0F 04       2378 	jp nz,es_repeat_line
041023                   2379 
041023 06 0D             2380 	ld b,13 ; CR
041025                   2381 	moscall mos_fputc
041025 3E 0D             2381 		LD	A, function
041027 49 CF             2381 		RST.LIS	08h
041029                   2382 
041029 06 0A             2383 	ld b,10 ; LF
04102B                   2384 	moscall mos_fputc
04102B 3E 0D             2384 		LD	A, function
04102D 49 CF             2384 		RST.LIS	08h
04102F                   2385 
04102F 1C                2386 	inc e
041030 3A 7C 12 04       2387 	ld a,(spr_size)
041034 BB                2388 	cp e
041035 C2 DF 0F 04       2389 	jp nz,es_repeat
041039                   2390 
041039 06 0D             2391 	ld b,13 ; CR
04103B                   2392 	moscall mos_fputc
04103B 3E 0D             2392 		LD	A, function
04103D 49 CF             2392 		RST.LIS	08h
04103F                   2393 
04103F 06 0A             2394 	ld b,10 ; LF
041041                   2395 	moscall mos_fputc
041041 3E 0D             2395 		LD	A, function
041043 49 CF             2395 		RST.LIS	08h
041045                   2396 
041045 E1                2397 	pop hl
041046 D5                2398 	push de
041047 ED 5C             2399 	mlt de
041049 19                2400 	add hl,de
04104A D1                2401 	pop de
04104B F1                2402 	pop af
04104C 3C                2403 	inc a
04104D DD 21 54 13 04    2404 	ld ix,frames_count
041052 DD BE 00          2405 	cp (ix+0)
041055 C2 A2 0F 04       2406 	jp nz,es_frames_repeat
041059                   2407 
041059                   2408 	; close the file
041059                   2409 	moscall mos_fclose
041059 3E 0B             2409 		LD	A, function
04105B 49 CF             2409 		RST.LIS	08h
04105D                   2410 
04105D                   2411 	; set path to home
04105D 21 08 13 04       2412 	ld hl,back_path
041061                   2413 	moscall mos_cd
041061 3E 03             2413 		LD	A, function
041063 49 CF             2413 		RST.LIS	08h
041065                   2414 
041065                   2415 	; exit on error
041065 FE 00             2416 	cp 0
041067 C2 83 10 04       2417 	jp nz,es_folder_error
04106B                   2418 
04106B                   2419 	; reset current frame and coordinates of the drawing pixel
04106B 21 54 13 04       2420 	ld hl,frames_count
04106F 7E                2421 	ld a,(hl)
041070 3D                2422 	dec a
041071 21 53 13 04       2423 	ld hl,current_frame
041075 77                2424 	ld (hl),a
041076 21 79 12 04       2425 	ld hl,xpix
04107A AF                2426 	xor a
04107B 77                2427 	ld (hl),a
04107C 21 7A 12 04       2428 	ld hl,ypix
041080 77                2429 	ld (hl),a
041081 18 08             2430 	jr es_exit
041083                   2431 
041083                   2432 es_folder_error:
041083                   2433 	; write error
041083 CD D6 10 04       2434 	call fn_print_folder_error
041087 C3 8B 10 04       2435 	jp es_exit
04108B                   2436 
04108B                   2437 es_exit:
04108B C9                2438 	ret
04108C                   2439 
04108C                   2440 es_file_error:
04108C CD 9F 10 04       2441 	call fn_print_file_error
041090                   2442 
041090                   2443 	; set path to home
041090 21 08 13 04       2444 	ld hl,back_path
041094                   2445 	moscall mos_cd
041094 3E 03             2445 		LD	A, function
041096 49 CF             2445 		RST.LIS	08h
041098                   2446 
041098                   2447 	; exit on error
041098 FE 00             2448 	cp 0
04109A C2 83 10 04       2449 	jp nz,es_folder_error
04109E C9                2450 	ret
04109F                   2451 
04109F                   2452 ; print 'file error'
04109F                   2453 fn_print_file_error:
04109F                   2454 	vdu 7
04109F 3E 07             2454 		LD	A, function
0410A1 49 D7             2454 		RST.LIS	10h
0410A3                   2455 
0410A3                   2456 	; locate x,y
0410A3                   2457 	vdu 31
0410A3 3E 1F             2457 		LD	A, function
0410A5 49 D7             2457 		RST.LIS	10h
0410A7                   2458 	vdu FILENAME_X
0410A7 3E 07             2458 		LD	A, function
0410A9 49 D7             2458 		RST.LIS	10h
0410AB                   2459 	vdu FILENAME_Y
0410AB 3E 18             2459 		LD	A, function
0410AD 49 D7             2459 		RST.LIS	10h
0410AF                   2460 
0410AF                   2461 	; print text
0410AF 21 24 13 04       2462 	ld hl,file_error
0410B3 01 00 00 00       2463 	ld bc,0
0410B7 AF                2464 	xor a
0410B8 49 DF             2465 	rst.lis $18
0410BA                   2466 
0410BA CD 30 0C 04       2467 	call fn_input_key
0410BE                   2468 
0410BE                   2469 	; locate x,y
0410BE                   2470 	vdu 31
0410BE 3E 1F             2470 		LD	A, function
0410C0 49 D7             2470 		RST.LIS	10h
0410C2                   2471 	vdu FILENAME_X
0410C2 3E 07             2471 		LD	A, function
0410C4 49 D7             2471 		RST.LIS	10h
0410C6                   2472 	vdu FILENAME_Y
0410C6 3E 18             2472 		LD	A, function
0410C8 49 D7             2472 		RST.LIS	10h
0410CA                   2473 
0410CA                   2474 	; print text
0410CA 21 0D 13 04       2475 	ld hl,void_filename
0410CE 01 00 00 00       2476 	ld bc,0
0410D2 AF                2477 	xor a
0410D3 49 DF             2478 	rst.lis $18
0410D5                   2479 
0410D5 C9                2480 	ret
0410D6                   2481 
0410D6                   2482 ; print 'folder error'
0410D6                   2483 fn_print_folder_error:
0410D6                   2484 	vdu 7
0410D6 3E 07             2484 		LD	A, function
0410D8 49 D7             2484 		RST.LIS	10h
0410DA                   2485 
0410DA                   2486 	; locate x,y
0410DA                   2487 	vdu 31
0410DA 3E 1F             2487 		LD	A, function
0410DC 49 D7             2487 		RST.LIS	10h
0410DE                   2488 	vdu FILENAME_X
0410DE 3E 07             2488 		LD	A, function
0410E0 49 D7             2488 		RST.LIS	10h
0410E2                   2489 	vdu FILENAME_Y
0410E2 3E 18             2489 		LD	A, function
0410E4 49 D7             2489 		RST.LIS	10h
0410E6                   2490 
0410E6                   2491 	; print text
0410E6 21 3B 13 04       2492 	ld hl,folder_error
0410EA 01 00 00 00       2493 	ld bc,0
0410EE AF                2494 	xor a
0410EF 49 DF             2495 	rst.lis $18
0410F1                   2496 
0410F1 CD 30 0C 04       2497 	call fn_input_key
0410F5                   2498 
0410F5                   2499 	; locate x,y
0410F5                   2500 	vdu 31
0410F5 3E 1F             2500 		LD	A, function
0410F7 49 D7             2500 		RST.LIS	10h
0410F9                   2501 	vdu FILENAME_X
0410F9 3E 07             2501 		LD	A, function
0410FB 49 D7             2501 		RST.LIS	10h
0410FD                   2502 	vdu FILENAME_Y
0410FD 3E 18             2502 		LD	A, function
0410FF 49 D7             2502 		RST.LIS	10h
041101                   2503 
041101                   2504 	; print text
041101 21 0D 13 04       2505 	ld hl,void_filename
041105 01 00 00 00       2506 	ld bc,0
041109 AF                2507 	xor a
04110A 49 DF             2508 	rst.lis $18
04110C                   2509 
04110C C9                2510 	ret
04110D                   2511 
04110D                   2512 ; refresh all the current sprite frame
04110D                   2513 fn_refresh_sprite:
04110D 06 00             2514 	ld b,0 ; B -> x cordinate
04110F 0E 00             2515 	ld c,0 ; C -> y cordinate
041111                   2516 
041111                   2517 rs_loop:
041111 C5                2518 	push bc
041112                   2519 
041112 21 79 12 04       2520 	ld hl,xpix
041116 70                2521 	ld (hl),b
041117 21 7A 12 04       2522 	ld hl,ypix
04111B 71                2523 	ld (hl),c
04111C CD C2 0A 04       2524 	call fn_draw_pixel_without_border
041120                   2525 
041120 C1                2526 	pop bc
041121                   2527 
041121 04                2528 	inc b
041122 21 7C 12 04       2529 	ld hl,spr_size
041126 7E                2530 	ld a,(hl)
041127 B8                2531 	cp b
041128 28 04             2532 	jr z,rs_next_line
04112A C3 11 11 04       2533 	jp rs_loop
04112E                   2534 
04112E                   2535 rs_next_line:
04112E 06 00             2536 	ld b,0
041130 0C                2537 	inc c
041131 21 7C 12 04       2538 	ld hl,spr_size
041135 7E                2539 	ld a,(hl)
041136 B9                2540 	cp c
041137 28 04             2541 	jr z,rs_end
041139 C3 11 11 04       2542 	jp rs_loop
04113D                   2543 
04113D                   2544 rs_end:
04113D AF                2545 	xor a
04113E 21 79 12 04       2546 	ld hl,xpix
041142 77                2547 	ld (hl),a
041143 21 7A 12 04       2548 	ld hl,ypix
041147 77                2549 	ld (hl),a
041148 CD AE 0A 04       2550 	call fn_draw_pixel_with_border
04114C                   2551 
04114C C9                2552 	ret
04114D                   2553 
04114D                   2554 fn_change_frame:
04114D 21 53 13 04       2555 	ld hl,current_frame
041151 7E                2556 	ld a,(hl)
041152 3C                2557 	inc a
041153 C6 30             2558 	add a,48
041155 21 55 13 04       2559 	ld hl,current_frame_ascii
041159 77                2560 	ld (hl),a
04115A                   2561 
04115A                   2562 	; locate 21,3
04115A                   2563 	vdu 31
04115A 3E 1F             2563 		LD	A, function
04115C 49 D7             2563 		RST.LIS	10h
04115E                   2564 	vdu 21
04115E 3E 15             2564 		LD	A, function
041160 49 D7             2564 		RST.LIS	10h
041162                   2565 	vdu 3
041162 3E 03             2565 		LD	A, function
041164 49 D7             2565 		RST.LIS	10h
041166                   2566 
041166                   2567 	; print text
041166 21 55 13 04       2568 	ld hl,current_frame_ascii
04116A 01 00 00 00       2569 	ld bc,0
04116E AF                2570 	xor a
04116F 49 DF             2571 	rst.lis $18
041171                   2572 
041171 C9                2573 	ret
041172                   2574 
041172                   2575 fn_change_frames_count:
041172 21 54 13 04       2576 	ld hl,frames_count
041176 7E                2577 	ld a,(hl)
041177 C6 30             2578 	add a,48
041179 21 57 13 04       2579 	ld hl,frames_count_ascii
04117D 77                2580 	ld (hl),a
04117E                   2581 
04117E                   2582 	; locate 23,3
04117E                   2583 	vdu 31
04117E 3E 1F             2583 		LD	A, function
041180 49 D7             2583 		RST.LIS	10h
041182                   2584 	vdu 23
041182 3E 17             2584 		LD	A, function
041184 49 D7             2584 		RST.LIS	10h
041186                   2585 	vdu 3
041186 3E 03             2585 		LD	A, function
041188 49 D7             2585 		RST.LIS	10h
04118A                   2586 
04118A                   2587 	; print text
04118A 21 57 13 04       2588 	ld hl,frames_count_ascii
04118E 01 00 00 00       2589 	ld bc,0
041192 AF                2590 	xor a
041193 49 DF             2591 	rst.lis $18
041195                   2592 
041195 C9                2593 	ret
041196                   2594 
041196                   2595 ; slowdown (wait delay)
041196                   2596 fn_slowdown:
041196 DD 21 59 13 04    2597 	ld ix,keydata
04119B DD 7E 02          2598 	ld a,(ix+2)
04119E E6 02             2599 	and 2
0411A0 FE 02             2600 	cp 2 ; shift key to disable delay
0411A2 C8                2601 	ret z
0411A3                   2602 
0411A3                   2603 	moscall mos_sysvars
0411A3 3E 08             2603 		LD	A, function
0411A5 49 CF             2603 		RST.LIS	08h
0411A7 DD 4E 00          2604 	ld c,(ix+sysvar_time)
0411AA                   2605 
0411AA                   2606 sd_loop:
0411AA                   2607 	moscall mos_sysvars
0411AA 3E 08             2607 		LD	A, function
0411AC 49 CF             2607 		RST.LIS	08h
0411AE DD 7E 00          2608 	ld a,(ix+sysvar_time)
0411B1 91                2609 	sub c
0411B2 FE 14             2610 	cp SLOWDOWN_DELAY
0411B4 20 F4             2611 	jr nz,sd_loop
0411B6 C9                2612 	ret
0411B7                   2613 
0411B7                   2614 fn_show_spr_descr:
0411B7                   2615 	; locate 15,3
0411B7                   2616 	vdu 31
0411B7 3E 1F             2616 		LD	A, function
0411B9 49 D7             2616 		RST.LIS	10h
0411BB                   2617 	vdu 15
0411BB 3E 0F             2617 		LD	A, function
0411BD 49 D7             2617 		RST.LIS	10h
0411BF                   2618 	vdu 3
0411BF 3E 03             2618 		LD	A, function
0411C1 49 D7             2618 		RST.LIS	10h
0411C3                   2619 
0411C3                   2620 	; print text
0411C3 21 C7 12 04       2621 	ld hl,spr_descr
0411C7 01 00 00 00       2622 	ld bc,0
0411CB AF                2623 	xor a
0411CC 49 DF             2624 	rst.lis $18
0411CE                   2625 
0411CE                   2626 	; locate 15,5
0411CE                   2627 	vdu 31
0411CE 3E 1F             2627 		LD	A, function
0411D0 49 D7             2627 		RST.LIS	10h
0411D2                   2628 	vdu 15
0411D2 3E 0F             2628 		LD	A, function
0411D4 49 D7             2628 		RST.LIS	10h
0411D6                   2629 	vdu 5
0411D6 3E 05             2629 		LD	A, function
0411D8 49 D7             2629 		RST.LIS	10h
0411DA                   2630 
0411DA                   2631 	; check for sprite size...
0411DA 21 7C 12 04       2632 	ld hl,spr_size
0411DE 7E                2633 	ld a,(hl)
0411DF                   2634 
0411DF FE 04             2635 	cp 4
0411E1 20 0C             2636 	jr nz,ssd_8x8
0411E3                   2637 
0411E3                   2638 	; print text 4x4
0411E3 21 D1 12 04       2639 	ld hl,spr_descr1
0411E7 01 00 00 00       2640 	ld bc,0
0411EB AF                2641 	xor a
0411EC 49 DF             2642 	rst.lis $18
0411EE C9                2643 	ret
0411EF                   2644 
0411EF                   2645 ssd_8x8:
0411EF FE 08             2646 	cp 8
0411F1 20 0C             2647 	jr nz,ssd_16x16
0411F3                   2648 
0411F3                   2649 	; print text 8x8
0411F3 21 D7 12 04       2650 	ld hl,spr_descr2
0411F7 01 00 00 00       2651 	ld bc,0
0411FB AF                2652 	xor a
0411FC 49 DF             2653 	rst.lis $18
0411FE C9                2654 	ret
0411FF                   2655 
0411FF                   2656 ssd_16x16:
0411FF FE 10             2657 	cp 16
041201 20 0C             2658 	jr nz,ssd_32x32
041203                   2659 
041203                   2660 	; print text 16x16
041203 21 DD 12 04       2661 	ld hl,spr_descr3
041207 01 00 00 00       2662 	ld bc,0
04120B AF                2663 	xor a
04120C 49 DF             2664 	rst.lis $18
04120E C9                2665 	ret
04120F                   2666 
04120F                   2667 ssd_32x32:
04120F                   2668 	; print text 32x32
04120F 21 E3 12 04       2669 	ld hl,spr_descr4
041213 01 00 00 00       2670 	ld bc,0
041217 AF                2671 	xor a
041218 49 DF             2672 	rst.lis $18
04121A                   2673 
04121A C9                2674 	ret
04121B                   2675 
04121B                   2676 ; input: HL = negative key to check
04121B                   2677 fn_inkey:
04121B                   2678 	moscall mos_getkbmap
04121B 3E 1E             2678 		LD	A, function
04121D 49 CF             2678 		RST.LIS	08h
04121F 23                2679 	INC	HL
041220 7D                2680 	LD	A, L
041221 ED 44             2681 	NEG
041223 4F                2682 	LD	C, A
041224 3E 01             2683 	LD	A, 1
041226 FA 4A 12 04       2684 	JP	M,i_false ; < -128 ?
04122A                   2685 
04122A 21 45 00 04       2686 	LD	HL,BITLOOKUP
04122E 11 00 00 00       2687 	LD	DE,0
041232 79                2688 	LD	A,C
041233 E6 07             2689 	AND	00000111b
041235 5F                2690 	LD	E,A
041236 19                2691 	ADD	HL,DE
041237 46                2692 	LD	B,(HL)
041238                   2693 
041238 79                2694 	LD	A,C
041239 E6 78             2695 	AND	01111000b
04123B 0F                2696 	RRCA
04123C 0F                2697 	RRCA
04123D 0F                2698 	RRCA
04123E 5F                2699 	LD	E, A
04123F DD 19             2700 	ADD	IX,DE
041241 DD 7E 00          2701 	LD	A,(IX+0)
041244 A0                2702 	AND	B
041245 28 03             2703 	JR Z,i_false
041247 3E 01             2704 	LD A,1
041249 C9                2705 	RET
04124A                   2706 i_false:
04124A AF                2707 	XOR A
04124B C9                2708 	RET
04124C                   2709 
04124C                   2710 fn_create_sprite_folder:
04124C 21 00 13 04       2711 	ld hl,sprite_path
041250                   2712 	moscall mos_mkdir
041250 3E 07             2712 		LD	A, function
041252 49 CF             2712 		RST.LIS	08h
041254 C9                2713 	ret
041255                   2714 
041255                   2715 fn_comma:
041255 06 2C             2716 	ld b,','
041257                   2717 	moscall mos_fputc
041257 3E 0D             2717 		LD	A, function
041259 49 CF             2717 		RST.LIS	08h
04125B C9                2718 	ret
04125C                   2719 
04125C                   2720 ; Hex to BCD
04125C                   2721 ; converts a hex number (eg. $10) to its BCD representation (eg. $16).
04125C                   2722 ; Input: a = hex number
04125C                   2723 ; Output: a = BCD number
04125C                   2724 ; Clobbers: b,c
04125C                   2725 fn_hex2bcd:
04125C C5                2726 		push bc
04125D 4F                2727 		ld c,a  ; Original (hex) number
04125E 06 08             2728 		ld b,8  ; How many bits
041260 AF                2729 		xor a   ; Output (BCD) number, starts at 0
041261 CB 21             2730 htb:	sla c   ; shift c into carry
041263 8F                2731 		adc a,a
041264 27                2732 		daa     ; Decimal adjust a, so shift = BCD x2 plus carry
041265 10 FA             2733 		djnz htb  ; Repeat for 8 bits
041267 C1                2734 		pop bc
041268 C9                2735 		ret
041269                   2736 
041269                   2737 ;======================================================================
041269                   2738 
041269                   2739 ; coordinates for rectangles
041269                   2740 x1:
041269 00 00             2741 	dw $0000
04126B                   2742 y1:
04126B 00 00             2743 	dw $0000
04126D                   2744 x2:
04126D 00 00             2745 	dw $0000
04126F                   2746 y2:
04126F 00 00             2747 	dw $0000
041271                   2748 
041271                   2749 ; coordinates of the edited sprite
041271                   2750 xs1:
041271 5F 00             2751 	dw 95
041273                   2752 ys1:
041273 37 00             2753 	dw 55
041275                   2754 xs2:
041275 E0 00             2755 	dw 224
041277                   2756 ys2:
041277 B8 00             2757 	dw 184
041279                   2758 
041279                   2759 ; coordinates of active pixels to draw
041279                   2760 xpix:
041279 00                2761 	db 0
04127A                   2762 ypix:
04127A 00                2763 	db 0
04127B                   2764 
04127B                   2765 ; width of a pixel in the sprite
04127B                   2766 pixel_width:
04127B 00                2767 	db 0
04127C                   2768 
04127C                   2769 ; sprite size, in resized pixels
04127C                   2770 spr_size:
04127C 00                2771 	db 0
04127D                   2772 
04127D                   2773 ; pen color (0-63)
04127D                   2774 current_pen:
04127D 00                2775 	db 0
04127E                   2776 
04127E                   2777 ; texts for 1st menu
04127E                   2778 title:
04127E 53 50 52 2D 45 44 2779 	db "SPR-EDIT",0
       49 54 00          
041287                   2780 
041287                   2781 menu1:
041287 46 31 2E 20 34 78 2782 	db "F1. 4x4 Sprite",0
       34 20 53 70 72 69 
       74 65 00          
041296                   2783 menu2:
041296 46 32 2E 20 38 78 2784 	db "F2. 8x8 Sprite",0
       38 20 53 70 72 69 
       74 65 00          
0412A5                   2785 menu3:
0412A5 46 33 2E 20 31 36 2786 	db "F3. 16x16 Sprite",0
       78 31 36 20 53 70 
       72 69 74 65 00    
0412B6                   2787 menu4:
0412B6 46 34 2E 20 33 32 2788 	db "F4. 32x32 Sprite",0
       78 33 32 20 53 70 
       72 69 74 65 00    
0412C7                   2789 
0412C7                   2790 ; descriptions of sprites
0412C7                   2791 spr_descr:
0412C7 46 72 61 6D 65 3A 2792 	db "Frame:1/1",0
       31 2F 31 00       
0412D1                   2793 spr_descr1:
0412D1 34 78 34 20 20 00 2794 	db "4x4  ",0
0412D7                   2795 spr_descr2:
0412D7 38 78 38 20 20 00 2796 	db "8x8  ",0
0412DD                   2797 spr_descr3:
0412DD 31 36 78 31 36 00 2798 	db "16x16",0
0412E3                   2799 spr_descr4:
0412E3 33 32 78 33 32 00 2800 	db "32x32",0
0412E9                   2801 
0412E9                   2802 ; label before filename
0412E9                   2803 filename_label:
0412E9 46 69 6C 65 6E 61 2804 	db "Filename:",0
       6D 65 3A 00       
0412F3                   2805 
0412F3                   2806 ; filename without extension
0412F3                   2807 filename:
0412F3 00 00 00 00 00 00 2808 	ds 13,0
       00 00 00 00 00 00 
       00                
041300                   2809 
041300                   2810 sprite_path:
041300 73 70 72 69 74 65 2811 	db "sprites",0
       73 00             
041308                   2812 
041308                   2813 back_path:
041308 2E 2E 00          2814 	db "..",0
04130B                   2815 
04130B                   2816 ; single space char to print
04130B                   2817 spacechar:
04130B 20 00             2818 	db " ",0
04130D                   2819 
04130D                   2820 ; spaces to remove filename label
04130D                   2821 void_filename:
04130D 20 20 20 20 20 20 2822 	db "                      ",0
       20 20 20 20 20 20 
       20 20 20 20 20 20 
       20 20 20 20 00    
041324                   2823 
041324                   2824 ; file error message
041324                   2825 file_error:
041324 46 69 6C 65 20 65 2826 	db "File error !          ",0
       72 72 6F 72 20 21 
       20 20 20 20 20 20 
       20 20 20 20 00    
04133B                   2827 
04133B                   2828 ; folder error message
04133B                   2829 folder_error:
04133B 46 6F 6C 64 65 72 2830 	db "Folder error !        ",0
       20 65 72 72 6F 72 
       20 21 20 20 20 20 
       20 20 20 20 00    
041352                   2831 
041352                   2832 ; number of colors
041352                   2833 colors_count:
041352 00                2834 	db 0
041353                   2835 
041353                   2836 ; current frame
041353                   2837 current_frame:
041353 00                2838 	db 0
041354                   2839 
041354                   2840 ; frames count
041354                   2841 frames_count:
041354 00                2842 	db 0
041355                   2843 
041355                   2844 current_frame_ascii:
041355 30 00             2845 	db '0',0
041357                   2846 
041357                   2847 frames_count_ascii:
041357 30 00             2848 	db '0',0
041359                   2849 
041359                   2850 ; keycode, keydown & keymods are stored here
041359                   2851 keydata:
041359 00 00 00          2852 	db 0,0,0
04135C                   2853 
04135C                   2854 ; buffer for the current sprite
04135C                   2855 sprite_buffer:
04135C 00 00 00 00 00 00 2856 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
04135C 00 00 00 00 00 00 2856 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
04135C 00 00 00 00 00 00 2856 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
04135C 00 00 00 00 00 00 2856 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
04135C 00 00 00 00 00 00 2856 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
04135C 00 00 00 00 00 00 2856 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00             
04335C                   2857 
04335C                   2858 asm_line:
04335C 44 42 20          2859 	DB "DB "
04335F                   2860 
04335F                   2861 asm_line_length:
04335F 03                2862 	DB 3
043360                   2863 
043360                   2864 rgb_palette:
043360 00 00 00          2865 	db $00,$00,$00
043363 AA 00 00          2866 	db $AA,$00,$00
043366 00 AA 00          2867 	db $00,$AA,$00
043369 AA AA 00          2868 	db $AA,$AA,$00
04336C 00 00 AA          2869 	db $00,$00,$AA
04336F AA 00 AA          2870 	db $AA,$00,$AA
043372 00 AA AA          2871 	db $00,$AA,$AA
043375 AA AA AA          2872 	db $AA,$AA,$AA
043378                   2873 
043378 55 55 55          2874 	db $55,$55,$55
04337B FF 00 00          2875 	db $FF,$00,$00
04337E 00 FF 00          2876 	db $00,$FF,$00
043381 FF FF 00          2877 	db $FF,$FF,$00
043384 00 00 FF          2878 	db $00,$00,$FF
043387 FF 00 FF          2879 	db $FF,$00,$FF
04338A 00 FF FF          2880 	db $00,$FF,$FF
04338D FF FF FF          2881 	db $FF,$FF,$FF
043390                   2882 
043390 00 00 55          2883 	db $00,$00,$55
043393 00 55 00          2884 	db $00,$55,$00
043396 00 55 55          2885 	db $00,$55,$55
043399 00 55 AA          2886 	db $00,$55,$AA
04339C 00 55 FF          2887 	db $00,$55,$FF
04339F 00 AA 55          2888 	db $00,$AA,$55
0433A2 00 AA FF          2889 	db $00,$AA,$FF
0433A5 00 FF 55          2890 	db $00,$FF,$55
0433A8                   2891 
0433A8 00 FF AA          2892 	db $00,$FF,$AA
0433AB 55 00 00          2893 	db $55,$00,$00
0433AE 55 00 55          2894 	db $55,$00,$55
0433B1 55 00 AA          2895 	db $55,$00,$AA
0433B4 55 00 FF          2896 	db $55,$00,$FF
0433B7 55 55 00          2897 	db $55,$55,$00
0433BA 55 55 AA          2898 	db $55,$55,$AA
0433BD 55 55 FF          2899 	db $55,$55,$FF
0433C0                   2900 
0433C0 55 AA 00          2901 	db $55,$AA,$00
0433C3 55 AA 55          2902 	db $55,$AA,$55
0433C6 55 AA AA          2903 	db $55,$AA,$AA
0433C9 55 AA FF          2904 	db $55,$AA,$FF
0433CC 55 FF 00          2905 	db $55,$FF,$00
0433CF 55 FF 55          2906 	db $55,$FF,$55
0433D2 55 FF AA          2907 	db $55,$FF,$AA
0433D5 55 FF FF          2908 	db $55,$FF,$FF
0433D8                   2909 
0433D8 AA 00 55          2910 	db $AA,$00,$55
0433DB AA 00 FF          2911 	db $AA,$00,$FF
0433DE AA 55 00          2912 	db $AA,$55,$00
0433E1 AA 55 55          2913 	db $AA,$55,$55
0433E4 AA 55 AA          2914 	db $AA,$55,$AA
0433E7 AA 55 FF          2915 	db $AA,$55,$FF
0433EA AA AA 55          2916 	db $AA,$AA,$55
0433ED AA AA FF          2917 	db $AA,$AA,$FF
0433F0                   2918 
0433F0 AA FF 00          2919 	db $AA,$FF,$00
0433F3 AA FF 55          2920 	db $AA,$FF,$55
0433F6 AA FF AA          2921 	db $AA,$FF,$AA
0433F9 AA FF FF          2922 	db $AA,$FF,$FF
0433FC FF 00 55          2923 	db $FF,$00,$55
0433FF FF 00 AA          2924 	db $FF,$00,$AA
043402 FF 55 00          2925 	db $FF,$55,$00
043405 FF 55 55          2926 	db $FF,$55,$55
043408                   2927 
043408 FF 55 AA          2928 	db $FF,$55,$AA
04340B FF 55 FF          2929 	db $FF,$55,$FF
04340E FF AA 00          2930 	db $FF,$AA,$00
043411 FF AA 55          2931 	db $FF,$AA,$55
043414 FF AA AA          2932 	db $FF,$AA,$AA
043417 FF AA FF          2933 	db $FF,$AA,$FF
04341A FF FF 55          2934 	db $FF,$FF,$55
04341D FF FF AA          2935 	db $FF,$FF,$AA
043420                   2936 
043420                   2937 ; sprite structure:
043420                   2938 ; =================
043420                   2939 ; colors_count  :   byte
043420                   2940 ; frames count	:	byte
043420                   2941 ; spr size		:	byte
043420                   2942 ; data			:   width x height bytes of colors
043420                   2943 
043420                   2944 
043420                   2945 ; TODO:
043420                   2946 ;---------
043420                   2947 ; add/remove frames must be done correctly
043420                   2948 ; read animations with 'p' key
043420                   2949 ; create a help text file with keyboard shorcuts list
043420                   2950 ; solve the 'copy frame' bug
043420                   2951 ; solve the bug of frames in fn_load/save sprite
