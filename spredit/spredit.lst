PC     Output            Line Source
040000                   0001 ; spredit.asm
040000                   0002 ;
040000                   0003 ; by B.Vignoli
040000                   0004 ; MIT 2023
040000                   0005 ;
040000                   0006 
040000                   0007 .assume adl=1
040000                   0008 .org $040000
040000                   0009 
040000 C3 4D 00 04       0010 	jp start
040004                   0011 
040004                   0012 ; MOS header
040004 FF FF FF FF FF FF 0013 .align 64
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
040040 4D 4F 53 00 01    0014 .db "MOS",0,1
040045                   0015 
040045                   0016 	include "mos_api.inc"
040045                   0001 ;
040045                   0002 ; Title:	AGON MOS - API for user projects
040045                   0003 ; Author:	Dean Belfield
040045                   0004 ; Created:	03/08/2022
040045                   0005 ; Last Updated:	10/08/2023
040045                   0006 ;
040045                   0007 ; Modinfo:
040045                   0008 ; 05/08/2022:	Added mos_feof
040045                   0009 ; 09/08/2022:	Added system variables: cursorX, cursorY
040045                   0010 ; 18/08/2022:	Added system variables: scrchar, scrpixel, audioChannel, audioSuccess, vpd_pflags
040045                   0011 ; 05/09/2022:	Added mos_ren, vdp_pflag_mode
040045                   0012 ; 24/09/2022:	Added mos_getError, mos_mkdir
040045                   0013 ; 13/10/2022:	Added mos_oscli
040045                   0014 ; 23/02/2023:	Added more sysvars, fixed typo in sysvar_audioSuccess, offsets for sysvar_scrCols, sysvar_scrRows
040045                   0015 ; 04/03/2023:	Added sysvar_scrpixelIndex
040045                   0016 ; 08/03/2023:	Renamed sysvar_keycode to sysvar_keyascii, added sysvar_vkeycode
040045                   0017 ; 15/03/2023:	Added mos_copy, mos_getrtc, mos_setrtc, rtc, vdp_pflag_rtc
040045                   0018 ; 21/03/2023:	Added mos_setintvector, sysvars for keyboard status, vdu codes for vdp
040045                   0019 ; 22/03/2023:	The VDP commands are now indexed from 0x80
040045                   0020 ; 29/03/2023:	Added mos_uopen, mos_uclose, mos_ugetc, mos_uputc
040045                   0021 ; 13/04/2023:	Added FatFS file structures (FFOBJID, FIL, DIR, FILINFO)
040045                   0022 ; 15/04/2023:	Added mos_getfil, mos_fread, mos_fwrite and mos_flseek
040045                   0023 ; 19/05/2023:	Added sysvar_scrMode
040045                   0024 ; 05/06/2023:	Added sysvar_rtcEnable
040045                   0025 ; 03/08/2023:	Added mos_setkbvector
040045                   0026 ; 10/08/2023:	Added mos_getkbmap
040045                   0027 
040045                   0028 ; VDP control (VDU 23, 0, n)
040045                   0029 ;
040045                   0030 vdp_gp:			EQU 	80h
040045                   0031 vdp_keycode:		EQU 	81h
040045                   0032 vdp_cursor:		EQU	82h
040045                   0033 vdp_scrchar:		EQU	83h
040045                   0034 vdp_scrpixel:		EQU	84h
040045                   0035 vdp_audio:		EQU	85h
040045                   0036 vdp_mode:		EQU	86h
040045                   0037 vdp_rtc:		EQU	87h
040045                   0038 vdp_keystate:		EQU	88h
040045                   0039 vdp_logicalcoords:	EQU	C0h
040045                   0040 vdp_terminalmode:	EQU	FFh
040045                   0041 
040045                   0042 ; MOS high level functions
040045                   0043 ;
040045                   0044 mos_getkey:		EQU	00h
040045                   0045 mos_load:		EQU	01h
040045                   0046 mos_save:		EQU	02h
040045                   0047 mos_cd:			EQU	03h
040045                   0048 mos_dir:		EQU	04h
040045                   0049 mos_del:		EQU	05h
040045                   0050 mos_ren:		EQU	06h
040045                   0051 mos_mkdir:		EQU	07h
040045                   0052 mos_sysvars:		EQU	08h
040045                   0053 mos_editline:		EQU	09h
040045                   0054 mos_fopen:		EQU	0Ah
040045                   0055 mos_fclose:		EQU	0Bh
040045                   0056 mos_fgetc:		EQU	0Ch
040045                   0057 mos_fputc:		EQU	0Dh
040045                   0058 mos_feof:		EQU	0Eh
040045                   0059 mos_getError:		EQU	0Fh
040045                   0060 mos_oscli:		EQU	10h
040045                   0061 mos_copy:		EQU	11h
040045                   0062 mos_getrtc:		EQU	12h
040045                   0063 mos_setrtc:		EQU	13h
040045                   0064 mos_setintvector:	EQU	14h
040045                   0065 mos_uopen:		EQU	15h
040045                   0066 mos_uclose:		EQU	16h
040045                   0067 mos_ugetc:		EQU	17h
040045                   0068 mos_uputc:		EQU 	18h
040045                   0069 mos_getfil:		EQU	19h
040045                   0070 mos_fread:		EQU	1Ah
040045                   0071 mos_fwrite:		EQU	1Bh
040045                   0072 mos_flseek:		EQU	1Ch
040045                   0073 mos_setkbvector:	EQU	1Dh
040045                   0074 mos_getkbmap:		EQU	1Eh
040045                   0075 
040045                   0076 ; FatFS file access functions
040045                   0077 ;
040045                   0078 ffs_fopen:		EQU	80h
040045                   0079 ffs_fclose:		EQU	81h
040045                   0080 ffs_fread:		EQU	82h
040045                   0081 ffs_fwrite:		EQU	83h
040045                   0082 ffs_flseek:		EQU	84h
040045                   0083 ffs_ftruncate:		EQU	85h
040045                   0084 ffs_fsync:		EQU	86h
040045                   0085 ffs_fforward:		EQU	87h
040045                   0086 ffs_fexpand:		EQU	88h
040045                   0087 ffs_fgets:		EQU	89h
040045                   0088 ffs_fputc:		EQU	8Ah
040045                   0089 ffs_fputs:		EQU	8Bh
040045                   0090 ffs_fprintf:		EQU	8Ch
040045                   0091 ffs_ftell:		EQU	8Dh
040045                   0092 ffs_feof:		EQU	8Eh
040045                   0093 ffs_fsize:		EQU	8Fh
040045                   0094 ffs_ferror:		EQU	90h
040045                   0095 
040045                   0096 ; FatFS directory access functions
040045                   0097 ;
040045                   0098 ffs_dopen:		EQU	91h
040045                   0099 ffs_dclose:		EQU	92h
040045                   0100 ffs_dread:		EQU	93h
040045                   0101 ffs_dfindfirst:		EQU	94h
040045                   0102 ffs_dfindnext:		EQU	95h
040045                   0103 
040045                   0104 ; FatFS file and directory management functions
040045                   0105 ;
040045                   0106 ffs_stat:		EQU	96h
040045                   0107 ffs_unlink:		EQU	97h
040045                   0108 ffs_rename:		EQU	98h
040045                   0109 ffs_chmod:		EQU	99h
040045                   0110 ffs_utime:		EQU	9Ah
040045                   0111 ffs_mkdir:		EQU	9Bh
040045                   0112 ffs_chdir:		EQU	9Ch
040045                   0113 ffs_chdrive:		EQU	9Dh
040045                   0114 ffs_getcwd:		EQU	9Eh
040045                   0115 
040045                   0116 ; FatFS volume management and system configuration functions
040045                   0117 ;
040045                   0118 ffs_mount:		EQU	9Fh
040045                   0119 ffs_mkfs:		EQU	A0h
040045                   0120 ffs_fdisk:		EQU	A1h
040045                   0121 ffs_getfree:		EQU	A2h
040045                   0122 ffs_getlabel:		EQU	A3h
040045                   0123 ffs_setlabel:		EQU	A4h
040045                   0124 ffs_setcp:		EQU	A5h
040045                   0125 
040045                   0126 ; File access modes
040045                   0127 ;
040045                   0128 fa_read:		EQU	01h
040045                   0129 fa_write:		EQU	02h
040045                   0130 fa_open_existing:	EQU	00h
040045                   0131 fa_create_new:		EQU	04h
040045                   0132 fa_create_always:	EQU	08h
040045                   0133 fa_open_always:		EQU	10h
040045                   0134 fa_open_append:		EQU	30h
040045                   0135 
040045                   0136 ; System variable indexes for api_sysvars
040045                   0137 ; Index into _sysvars in globals.asm
040045                   0138 ;
040045                   0139 sysvar_time:		EQU	00h	; 4: Clock timer in centiseconds (incremented by 2 every VBLANK)
040045                   0140 sysvar_vpd_pflags:	EQU	04h	; 1: Flags to indicate completion of VDP commands
040045                   0141 sysvar_keyascii:	EQU	05h	; 1: ASCII keycode, or 0 if no key is pressed
040045                   0142 sysvar_keymods:		EQU	06h	; 1: Keycode modifiers
040045                   0143 sysvar_cursorX:		EQU	07h	; 1: Cursor X position
040045                   0144 sysvar_cursorY:		EQU	08h	; 1: Cursor Y position
040045                   0145 sysvar_scrchar:		EQU	09h	; 1: Character read from screen
040045                   0146 sysvar_scrpixel:	EQU	0Ah	; 3: Pixel data read from screen (R,B,G)
040045                   0147 sysvar_audioChannel:	EQU	0Dh	; 1: Audio channel
040045                   0148 sysvar_audioSuccess:	EQU	0Eh	; 1: Audio channel note queued (0 = no, 1 = yes)
040045                   0149 sysvar_scrWidth:	EQU	0Fh	; 2: Screen width in pixels
040045                   0150 sysvar_scrHeight:	EQU	11h	; 2: Screen height in pixels
040045                   0151 sysvar_scrCols:		EQU	13h	; 1: Screen columns in characters
040045                   0152 sysvar_scrRows:		EQU	14h	; 1: Screen rows in characters
040045                   0153 sysvar_scrColours:	EQU	15h	; 1: Number of colours displayed
040045                   0154 sysvar_scrpixelIndex:	EQU	16h	; 1: Index of pixel data read from screen
040045                   0155 sysvar_vkeycode:	EQU	17h	; 1: Virtual key code from FabGL
040045                   0156 sysvar_vkeydown:	EQU	18h	; 1: Virtual key state from FabGL (0=up, 1=down)
040045                   0157 sysvar_vkeycount:	EQU	19h	; 1: Incremented every time a key packet is received
040045                   0158 sysvar_rtc:		EQU	1Ah	; 6: Real time clock data
040045                   0159 sysvar_spare:		EQU	20h	; 2: Spare, previously used by rtc
040045                   0160 sysvar_keydelay:	EQU	22h	; 2: Keyboard repeat delay
040045                   0161 sysvar_keyrate:		EQU	24h	; 2: Keyboard repeat reat
040045                   0162 sysvar_keyled:		EQU	26h	; 1: Keyboard LED status
040045                   0163 sysvar_scrMode:		EQU	27h	; 1: Screen mode
040045                   0164 sysvar_rtcEnable:	EQU	28h	; 1: RTC enable flag (0: disabled, 1: use ESP32 RTC)
040045                   0165 
040045                   0166 ; Flags for the VPD protocol
040045                   0167 ;
040045                   0168 vdp_pflag_cursor:	EQU	00000001b
040045                   0169 vdp_pflag_scrchar:	EQU	00000010b
040045                   0170 vdp_pflag_point:	EQU	00000100b
040045                   0171 vdp_pflag_audio:	EQU	00001000b
040045                   0172 vdp_pflag_mode:		EQU	00010000b
040045                   0173 vdp_pflag_rtc:		EQU	00100000b
040045                   0174 
040045                   0175 ;
040045                   0176 ; Macro for calling the API
040045                   0177 ; Parameters:
040045                   0178 ; - function: One of the function numbers listed above
040045                   0179 ;
040045                   0180 	MACRO moscall function
040045                   0181 		LD	A, function
040045                   0182 		RST.LIS	08h
040045                   0183 	ENDMACRO
040045                   0184 
040045                   0185 	MACRO vdu function
040045                   0186 		LD	A, function
040045                   0187 		RST.LIS	10h
040045                   0188 	ENDMACRO
040045                   0189 
040045                   0190 	MACRO vdu_a
040045                   0191 		RST.LIS	10h
040045                   0192 	ENDMACRO
040045                   0017 
040045                   0018 MAX_COLORS:		 	equ 64
040045                   0019 COLOR_MIN:	 		equ 0
040045                   0020 COLOR_MAX:	 		equ 63
040045                   0021 
040045                   0022 MAX_FRAMES:			equ 8
040045                   0023 
040045                   0024 COLOR_WHITE:		equ 15
040045                   0025 COLOR_GREY:			equ 7
040045                   0026 COLOR_BLACK:		equ 0
040045                   0027 
040045                   0028 TITLE_X: 	equ 17
040045                   0029 TITLE_Y: 	equ 2
040045                   0030 MENU_X: 	equ 13
040045                   0031 MENU1_Y: 	equ 8
040045                   0032 MENU2_Y: 	equ 12
040045                   0033 MENU3_Y: 	equ 16
040045                   0034 MENU4_Y: 	equ 20
040045                   0035 MENU5_Y: 	equ 24
040045                   0036 FILENAME_X: equ 7
040045                   0037 FILENAME_Y: equ 24
040045                   0038 
040045                   0039 SPR44: 		equ 4
040045                   0040 SPR88: 		equ 8
040045                   0041 SPR1616: 	equ 16
040045                   0042 SPR3232: 	equ 32
040045                   0043 
040045                   0044 SPR44_width: 	equ 32
040045                   0045 SPR88_width: 	equ 16
040045                   0046 SPR1616_width: 	equ 8
040045                   0047 SPR3232_width: 	equ 4
040045                   0048 
040045                   0049 BUFFER_SIZE:			equ 8192 ; 8 frames
040045                   0050 ONE_FRAME_BUFFER_SIZE:	equ 1024
040045                   0051 
040045                   0052 SLOWDOWN_DELAY:	equ 20
040045                   0053 
040045                   0054 KEY_SPACE: equ -99
040045                   0055 KEY_UP: equ -58
040045                   0056 KEY_DOWN: equ -42
040045                   0057 KEY_LEFT: equ -26
040045                   0058 KEY_RIGHT: equ -122
040045                   0059 KEY_DELETE: equ -90
040045                   0060 KEY_TAB: equ -97
040045                   0061 KEY_N: equ -86
040045                   0062 KEY_C: equ -83
040045                   0063 KEY_BACKSPACE: equ -48
040045                   0064 KEY_PGUP: equ -64
040045                   0065 KEY_PGDOWN: equ -79
040045                   0066 KEY_L: equ -87
040045                   0067 KEY_S: equ -82
040045                   0068 KEY_E: equ -35
040045                   0069 KEY_R: equ -52
040045                   0070 KEY_F: equ -68
040045                   0071 KEY_M: equ -102
040045                   0072 KEY_ESCAPE: equ -113
040045                   0073 KEY_F1: equ -114
040045                   0074 KEY_F2: equ -115
040045                   0075 KEY_F3: equ -116
040045                   0076 KEY_F4: equ -21
040045                   0077 KEY_RETURN: equ -74
040045                   0078 
040045                   0079 BITLOOKUP:
040045 01 02 04 08       0080 	DB 01h,02h,04h,08h
040049 10 20 40 80       0081 	DB 10h,20h,40h,80h
04004D                   0082 
04004D                   0083 ;======================================================================
04004D                   0084 start:
04004D F5                0085 	push af
04004E C5                0086 	push bc
04004F D5                0087 	push de
040050 DD E5             0088 	push ix
040052 FD E5             0089 	push iy
040054                   0090 
040054                   0091 	; set mode 8 (320x240x64)
040054                   0092 	vdu 22
040054 3E 16             0092 		LD	A, function
040056 49 D7             0092 		RST.LIS	10h
040058                   0093 	vdu 8
040058 3E 08             0093 		LD	A, function
04005A 49 D7             0093 		RST.LIS	10h
04005C                   0094 
04005C                   0095 	; set logical coordinates system
04005C                   0096 	vdu 23
04005C 3E 17             0096 		LD	A, function
04005E 49 D7             0096 		RST.LIS	10h
040060                   0097 	vdu 0
040060 3E 00             0097 		LD	A, function
040062 49 D7             0097 		RST.LIS	10h
040064                   0098 	vdu $c0
040064 3E C0             0098 		LD	A, function
040066 49 D7             0098 		RST.LIS	10h
040068                   0099 	vdu 0
040068 3E 00             0099 		LD	A, function
04006A 49 D7             0099 		RST.LIS	10h
04006C                   0100 
04006C                   0101 	; set text colors
04006C                   0102 	vdu 17
04006C 3E 11             0102 		LD	A, function
04006E 49 D7             0102 		RST.LIS	10h
040070                   0103 	vdu 128 ; black background
040070 3E 80             0103 		LD	A, function
040072 49 D7             0103 		RST.LIS	10h
040074                   0104 
040074                   0105 	vdu 17
040074 3E 11             0105 		LD	A, function
040076 49 D7             0105 		RST.LIS	10h
040078                   0106 	vdu COLOR_WHITE ; white pen
040078 3E 0F             0106 		LD	A, function
04007A 49 D7             0106 		RST.LIS	10h
04007C                   0107 
04007C                   0108 	; set graphics pen
04007C                   0109 	vdu 18
04007C 3E 12             0109 		LD	A, function
04007E 49 D7             0109 		RST.LIS	10h
040080                   0110 	vdu 0
040080 3E 00             0110 		LD	A, function
040082 49 D7             0110 		RST.LIS	10h
040084                   0111 	vdu COLOR_WHITE ; white pen
040084 3E 0F             0111 		LD	A, function
040086 49 D7             0111 		RST.LIS	10h
040088                   0112 
040088                   0113 	; hide cursor
040088                   0114 	vdu 23
040088 3E 17             0114 		LD	A, function
04008A 49 D7             0114 		RST.LIS	10h
04008C                   0115 	vdu 1
04008C 3E 01             0115 		LD	A, function
04008E 49 D7             0115 		RST.LIS	10h
040090                   0116 	vdu 0
040090 3E 00             0116 		LD	A, function
040092 49 D7             0116 		RST.LIS	10h
040094                   0117 
040094                   0118 	; store coordinates
040094 DD 21 85 13 04    0119 	ld ix,x1
040099 21 00 00 00       0120 	ld hl,0
04009D DD 75 00          0121 	ld (ix+0),l
0400A0 DD 74 01          0122 	ld (ix+1),h
0400A3                   0123 
0400A3 DD 21 87 13 04    0124 	ld ix,y1
0400A8 21 00 00 00       0125 	ld hl,0
0400AC DD 75 00          0126 	ld (ix+0),l
0400AF DD 74 01          0127 	ld (ix+1),h
0400B2                   0128 
0400B2 DD 21 89 13 04    0129 	ld ix,x2
0400B7 21 3F 01 00       0130 	ld hl,319
0400BB DD 75 00          0131 	ld (ix+0),l
0400BE DD 74 01          0132 	ld (ix+1),h
0400C1                   0133 
0400C1 DD 21 8B 13 04    0134 	ld ix,y2
0400C6 21 EF 00 00       0135 	ld hl,239
0400CA DD 75 00          0136 	ld (ix+0),l
0400CD DD 74 01          0137 	ld (ix+1),h
0400D0                   0138 
0400D0                   0139 	; draw the border rectangle
0400D0 CD 3D 0A 04       0140 	call fn_rect
0400D4                   0141 
0400D4                   0142 	; locate x,y
0400D4                   0143 	vdu 31
0400D4 3E 1F             0143 		LD	A, function
0400D6 49 D7             0143 		RST.LIS	10h
0400D8                   0144 	vdu TITLE_X
0400D8 3E 11             0144 		LD	A, function
0400DA 49 D7             0144 		RST.LIS	10h
0400DC                   0145 	vdu TITLE_Y
0400DC 3E 02             0145 		LD	A, function
0400DE 49 D7             0145 		RST.LIS	10h
0400E0                   0146 
0400E0                   0147 	; print text
0400E0 21 9C 13 04       0148 	ld hl,title
0400E4 01 00 00 00       0149 	ld bc,0
0400E8 AF                0150 	xor a
0400E9 49 DF             0151 	rst.lis $18
0400EB                   0152 
0400EB                   0153 	; locate x,y
0400EB                   0154 	vdu 31
0400EB 3E 1F             0154 		LD	A, function
0400ED 49 D7             0154 		RST.LIS	10h
0400EF                   0155 	vdu MENU_X
0400EF 3E 0D             0155 		LD	A, function
0400F1 49 D7             0155 		RST.LIS	10h
0400F3                   0156 	vdu MENU1_Y
0400F3 3E 08             0156 		LD	A, function
0400F5 49 D7             0156 		RST.LIS	10h
0400F7                   0157 
0400F7                   0158 	; print text
0400F7 21 A5 13 04       0159 	ld hl,menu1
0400FB 01 00 00 00       0160 	ld bc,0
0400FF AF                0161 	xor a
040100 49 DF             0162 	rst.lis $18
040102                   0163 
040102                   0164 	; locate x,y
040102                   0165 	vdu 31
040102 3E 1F             0165 		LD	A, function
040104 49 D7             0165 		RST.LIS	10h
040106                   0166 	vdu MENU_X
040106 3E 0D             0166 		LD	A, function
040108 49 D7             0166 		RST.LIS	10h
04010A                   0167 	vdu MENU2_Y
04010A 3E 0C             0167 		LD	A, function
04010C 49 D7             0167 		RST.LIS	10h
04010E                   0168 
04010E                   0169 	; print text
04010E 21 B4 13 04       0170 	ld hl,menu2
040112 01 00 00 00       0171 	ld bc,0
040116 AF                0172 	xor a
040117 49 DF             0173 	rst.lis $18
040119                   0174 
040119                   0175 	; locate x,y
040119                   0176 	vdu 31
040119 3E 1F             0176 		LD	A, function
04011B 49 D7             0176 		RST.LIS	10h
04011D                   0177 	vdu MENU_X
04011D 3E 0D             0177 		LD	A, function
04011F 49 D7             0177 		RST.LIS	10h
040121                   0178 	vdu MENU3_Y
040121 3E 10             0178 		LD	A, function
040123 49 D7             0178 		RST.LIS	10h
040125                   0179 
040125                   0180 	; print text
040125 21 C3 13 04       0181 	ld hl,menu3
040129 01 00 00 00       0182 	ld bc,0
04012D AF                0183 	xor a
04012E 49 DF             0184 	rst.lis $18
040130                   0185 
040130                   0186 	; locate x,y
040130                   0187 	vdu 31
040130 3E 1F             0187 		LD	A, function
040132 49 D7             0187 		RST.LIS	10h
040134                   0188 	vdu MENU_X
040134 3E 0D             0188 		LD	A, function
040136 49 D7             0188 		RST.LIS	10h
040138                   0189 	vdu MENU4_Y
040138 3E 14             0189 		LD	A, function
04013A 49 D7             0189 		RST.LIS	10h
04013C                   0190 
04013C                   0191 	; print text
04013C 21 D4 13 04       0192 	ld hl,menu4
040140 01 00 00 00       0193 	ld bc,0
040144 AF                0194 	xor a
040145 49 DF             0195 	rst.lis $18
040147                   0196 
040147                   0197 ; menu loop
040147                   0198 menu_loop:
040147 21 8F FF FF       0199 	ld hl,KEY_ESCAPE
04014B CD 37 13 04       0200 	call fn_inkey
04014F FE 01             0201 	CP 1
040151 CA 19 0A 04       0202 	jp z,exit_program
040155                   0203 
040155 21 8E FF FF       0204 	ld hl,KEY_F1
040159 CD 37 13 04       0205 	call fn_inkey
04015D FE 01             0206 	CP 1
04015F CA 91 01 04       0207 	jp z,ml_menu1
040163                   0208 
040163 21 8D FF FF       0209 	ld hl,KEY_F2
040167 CD 37 13 04       0210 	call fn_inkey
04016B FE 01             0211 	CP 1
04016D CA 97 01 04       0212 	jp z,ml_menu2
040171                   0213 
040171 21 8C FF FF       0214 	ld hl,KEY_F3
040175 CD 37 13 04       0215 	call fn_inkey
040179 FE 01             0216 	CP 1
04017B CA 9D 01 04       0217 	jp z,ml_menu3
04017F                   0218 
04017F 21 EB FF FF       0219 	ld hl,KEY_F4
040183 CD 37 13 04       0220 	call fn_inkey
040187 FE 01             0221 	CP 1
040189 CA A3 01 04       0222 	jp z,ml_menu4
04018D                   0223 
04018D C3 47 01 04       0224 	jp menu_loop
040191                   0225 
040191                   0226 ml_menu1:
040191 3E 04             0227 	ld a,SPR44
040193 16 20             0228 	ld d,SPR44_width
040195 18 10             0229 	jr exit_menu_loop
040197                   0230 
040197                   0231 ml_menu2:
040197 3E 08             0232 	ld a,SPR88
040199 16 10             0233 	ld d,SPR88_width
04019B 18 0A             0234 	jr exit_menu_loop
04019D                   0235 
04019D                   0236 ml_menu3:
04019D 3E 10             0237 	ld a,SPR1616
04019F 16 08             0238 	ld d,SPR1616_width
0401A1 18 04             0239 	jr exit_menu_loop
0401A3                   0240 
0401A3                   0241 ml_menu4:
0401A3 3E 20             0242 	ld a,SPR3232
0401A5 16 04             0243 	ld d,SPR3232_width
0401A7                   0244 
0401A7                   0245 exit_menu_loop:
0401A7                   0246 	; store edited sprite size
0401A7 21 9A 13 04       0247 	ld hl,spr_size
0401AB 77                0248 	ld (hl),a
0401AC 21 99 13 04       0249 	ld hl,pixel_width
0401B0 72                0250 	ld (hl),d
0401B1                   0251 
0401B1                   0252 	; clear the text screen
0401B1                   0253 	vdu 12
0401B1 3E 0C             0253 		LD	A, function
0401B3 49 D7             0253 		RST.LIS	10h
0401B5                   0254 
0401B5                   0255 	; draw the palette
0401B5 0E 00             0256 	ld c,0
0401B7                   0257 
0401B7                   0258 palette_loop:
0401B7 C5                0259 	push bc
0401B8                   0260 
0401B8                   0261 	; choose palette color
0401B8                   0262 	vdu 18
0401B8 3E 12             0262 		LD	A, function
0401BA 49 D7             0262 		RST.LIS	10h
0401BC                   0263 	vdu 0
0401BC 3E 00             0263 		LD	A, function
0401BE 49 D7             0263 		RST.LIS	10h
0401C0 C1                0264 	pop bc
0401C1 C5                0265 	push bc
0401C2 79                0266 	ld a,c
0401C3                   0267 	vdu_a
0401C3 49 D7             0267 		RST.LIS	10h
0401C5                   0268 
0401C5                   0269 	; store coordinates for a palette square
0401C5 DD 21 85 13 04    0270 	ld ix,x1
0401CA E1                0271 	pop hl
0401CB E5                0272 	push hl
0401CC 26 05             0273 	ld h,5
0401CE ED 6C             0274 	mlt hl
0401D0 E5                0275 	push hl
0401D1 DD 75 00          0276 	ld (ix+0),l
0401D4 DD 74 01          0277 	ld (ix+1),h
0401D7                   0278 
0401D7 DD 21 87 13 04    0279 	ld ix,y1
0401DC 21 00 00 00       0280 	ld hl,0
0401E0 DD 75 00          0281 	ld (ix+0),l
0401E3 DD 74 01          0282 	ld (ix+1),h
0401E6                   0283 
0401E6 DD 21 89 13 04    0284 	ld ix,x2
0401EB E1                0285 	pop hl
0401EC 11 04 00 00       0286 	ld de,4
0401F0 19                0287 	add hl,de
0401F1 DD 75 00          0288 	ld (ix+0),l
0401F4 DD 74 01          0289 	ld (ix+1),h
0401F7                   0290 
0401F7 DD 21 8B 13 04    0291 	ld ix,y2
0401FC 21 0A 00 00       0292 	ld hl,10
040200 DD 75 00          0293 	ld (ix+0),l
040203 DD 74 01          0294 	ld (ix+1),h
040206                   0295 
040206                   0296 	; draw the palette filled square
040206 CD FC 0A 04       0297 	call fn_rectf
04020A                   0298 
04020A                   0299 	; next color ?
04020A C1                0300 	pop bc
04020B 0C                0301 	inc c
04020C 79                0302 	ld a,c
04020D FE 40             0303 	cp MAX_COLORS
04020F C2 B7 01 04       0304 	jp nz,palette_loop
040213                   0305 
040213                   0306 	; store coordinates
040213 DD 21 85 13 04    0307 	ld ix,x1
040218 21 00 00 00       0308 	ld hl,0
04021C DD 75 00          0309 	ld (ix+0),l
04021F DD 74 01          0310 	ld (ix+1),h
040222                   0311 
040222 DD 21 87 13 04    0312 	ld ix,y1
040227 21 0B 00 00       0313 	ld hl,11
04022B DD 75 00          0314 	ld (ix+0),l
04022E DD 74 01          0315 	ld (ix+1),h
040231                   0316 
040231 DD 21 89 13 04    0317 	ld ix,x2
040236 21 3F 01 00       0318 	ld hl,319
04023A DD 75 00          0319 	ld (ix+0),l
04023D DD 74 01          0320 	ld (ix+1),h
040240                   0321 
040240 DD 21 8B 13 04    0322 	ld ix,y2
040245 21 EF 00 00       0323 	ld hl,239
040249 DD 75 00          0324 	ld (ix+0),l
04024C DD 74 01          0325 	ld (ix+1),h
04024F                   0326 
04024F                   0327 	; draw the border rectangle
04024F CD 3D 0A 04       0328 	call fn_rect
040253                   0329 
040253                   0330 	; store edited sprite coordinates
040253 DD 21 8D 13 04    0331 	ld ix,xs1
040258 FD 21 85 13 04    0332 	ld iy,x1
04025D DD 6E 00          0333 	ld l,(ix+0)
040260 DD 66 01          0334 	ld h,(ix+1)
040263 FD 75 00          0335 	ld (iy+0),l
040266 FD 74 01          0336 	ld (iy+1),h
040269                   0337 
040269 DD 21 8F 13 04    0338 	ld ix,ys1
04026E FD 21 87 13 04    0339 	ld iy,y1
040273 DD 6E 00          0340 	ld l,(ix+0)
040276 DD 66 01          0341 	ld h,(ix+1)
040279 FD 75 00          0342 	ld (iy+0),l
04027C FD 74 01          0343 	ld (iy+1),h
04027F                   0344 
04027F DD 21 91 13 04    0345 	ld ix,xs2
040284 FD 21 89 13 04    0346 	ld iy,x2
040289 DD 6E 00          0347 	ld l,(ix+0)
04028C DD 66 01          0348 	ld h,(ix+1)
04028F FD 75 00          0349 	ld (iy+0),l
040292 FD 74 01          0350 	ld (iy+1),h
040295                   0351 
040295 DD 21 93 13 04    0352 	ld ix,ys2
04029A FD 21 8B 13 04    0353 	ld iy,y2
04029F DD 6E 00          0354 	ld l,(ix+0)
0402A2 DD 66 01          0355 	ld h,(ix+1)
0402A5 FD 75 00          0356 	ld (iy+0),l
0402A8 FD 74 01          0357 	ld (iy+1),h
0402AB                   0358 
0402AB                   0359 	; draw the sprite's border rectangle
0402AB CD 3D 0A 04       0360 	call fn_rect
0402AF                   0361 
0402AF                   0362 	; update sprite size descriptions
0402AF CD D3 12 04       0363 	call fn_show_spr_descr
0402B3                   0364 
0402B3                   0365 ; initialize sprite vars
0402B3                   0366 init_sprite_vars:
0402B3                   0367 	; initialize coordinates before drawing the sprite
0402B3 DD 21 95 13 04    0368 	ld ix,xpix
0402B8 AF                0369 	xor a
0402B9 DD 77 00          0370 	ld (ix+0),a ; xpix = 0
0402BC DD 77 01          0371 	ld (ix+1),a	; ypix = 0
0402BF DD 21 9B 13 04    0372 	ld ix,current_pen
0402C4 3E 0F             0373 	ld a,COLOR_WHITE
0402C6 DD 77 00          0374 	ld (ix+0),a ; current pen -> white
0402C9                   0375 
0402C9                   0376 	; set vars
0402C9 21 70 14 04       0377 	ld hl,colors_count
0402CD 3E 40             0378 	ld a,MAX_COLORS
0402CF 77                0379 	ld (hl),a
0402D0 21 71 14 04       0380 	ld hl,current_frame
0402D4 AF                0381 	xor a
0402D5 77                0382 	ld (hl),a
0402D6 3C                0383 	inc a
0402D7 21 72 14 04       0384 	ld hl,frames_count
0402DB 77                0385 	ld (hl),a
0402DC                   0386 
0402DC                   0387 	; fill buffers with zeros
0402DC 01 00 20 00       0388 	ld bc,BUFFER_SIZE
0402E0 21 7A 14 04       0389 	ld hl,sprite_buffer
0402E4                   0390 
0402E4                   0391 isv_fill_loop:
0402E4 AF                0392 	xor a
0402E5 77                0393 	ld (hl),a
0402E6 0B                0394 	dec bc
0402E7 23                0395 	inc hl
0402E8 78                0396 	ld a,b
0402E9 B1                0397 	or c
0402EA FE 00             0398 	cp 0
0402EC 20 F6             0399 	jr nz,isv_fill_loop
0402EE                   0400 
0402EE                   0401 ; draw the pixel with a border
0402EE CD CA 0B 04       0402 	call fn_draw_pixel_with_border
0402F2                   0403 
0402F2                   0404 ; draw sprite loop
0402F2                   0405 draw_sprite_loop:
0402F2 21 9D FF FF       0406 	ld hl,KEY_SPACE
0402F6 CD 37 13 04       0407 	call fn_inkey
0402FA FE 01             0408 	cp 1
0402FC CC 0E 04 04       0409 	call z,dsl_set_pen
040300                   0410 
040300 21 C6 FF FF       0411 	ld hl,KEY_UP
040304 CD 37 13 04       0412 	call fn_inkey
040308 FE 01             0413 	cp 1
04030A CC 33 04 04       0414 	call z,dsl_up
04030E                   0415 
04030E 21 D6 FF FF       0416 	ld hl,KEY_DOWN
040312 CD 37 13 04       0417 	call fn_inkey
040316 FE 01             0418 	cp 1
040318 CC 5A 04 04       0419 	call z,dsl_down
04031C                   0420 
04031C 21 E6 FF FF       0421 	ld hl,KEY_LEFT
040320 CD 37 13 04       0422 	call fn_inkey
040324 FE 01             0423 	cp 1
040326 CC 86 04 04       0424 	call z,dsl_left
04032A                   0425 
04032A 21 86 FF FF       0426 	ld hl,KEY_RIGHT
04032E CD 37 13 04       0427 	call fn_inkey
040332 FE 01             0428 	cp 1
040334 CC AD 04 04       0429 	call z,dsl_right
040338                   0430 
040338 21 A6 FF FF       0431 	ld hl,KEY_DELETE
04033C CD 37 13 04       0432 	call fn_inkey
040340 FE 01             0433 	cp 1
040342 CC 22 04 04       0434 	call z,dsl_reset_pen
040346                   0435 
040346 21 9F FF FF       0436 	ld hl,KEY_TAB
04034A CD 37 13 04       0437 	call fn_inkey
04034E FE 01             0438 	cp 1
040350 CA E1 08 04       0439 	jp z,dsl_palette_tool
040354                   0440 
040354 21 AA FF FF       0441 	ld hl,KEY_N
040358 CD 37 13 04       0442 	call fn_inkey
04035C FE 01             0443 	cp 1
04035E CC 2C 05 04       0444 	call z,dsl_add_frame
040362                   0445 
040362 21 AD FF FF       0446 	ld hl,KEY_C
040366 CD 37 13 04       0447 	call fn_inkey
04036A FE 01             0448 	cp 1
04036C CC C3 05 04       0449 	call z,dsl_add_and_copy_frame
040370                   0450 
040370 21 D0 FF FF       0451 	ld hl,KEY_BACKSPACE
040374 CD 37 13 04       0452 	call fn_inkey
040378 FE 01             0453 	cp 1
04037A CC 2A 06 04       0454 	call z,dsl_delete_frame
04037E                   0455 
04037E 21 C0 FF FF       0456 	ld hl,KEY_PGUP
040382 CD 37 13 04       0457 	call fn_inkey
040386 FE 01             0458 	cp 1
040388 CC 23 07 04       0459 	call z,dsl_next_frame
04038C                   0460 
04038C 21 B1 FF FF       0461 	ld hl,KEY_PGDOWN
040390 CD 37 13 04       0462 	call fn_inkey
040394 FE 01             0463 	cp 1
040396 CC 04 07 04       0464 	call z,dsl_previous_frame
04039A                   0465 
04039A 21 A9 FF FF       0466 	ld hl,KEY_L
04039E CD 37 13 04       0467 	call fn_inkey
0403A2 FE 01             0468 	cp 1
0403A4 CC D9 04 04       0469 	call z,dsl_load_sprite
0403A8                   0470 
0403A8 21 AE FF FF       0471 	ld hl,KEY_S
0403AC CD 37 13 04       0472 	call fn_inkey
0403B0 FE 01             0473 	cp 1
0403B2 CC FA 04 04       0474 	call z,dsl_save_sprite
0403B6                   0475 
0403B6 21 DD FF FF       0476 	ld hl,KEY_E
0403BA CD 37 13 04       0477 	call fn_inkey
0403BE FE 01             0478 	cp 1
0403C0 CC 13 05 04       0479 	call z,dsl_export_sprite
0403C4                   0480 
0403C4 21 CC FF FF       0481 	ld hl,KEY_R
0403C8 CD 37 13 04       0482 	call fn_inkey
0403CC FE 01             0483 	cp 1
0403CE CC 49 07 04       0484 	call z,dsl_rotate_frame
0403D2                   0485 
0403D2 21 BC FF FF       0486 	ld hl,KEY_F
0403D6 CD 37 13 04       0487 	call fn_inkey
0403DA FE 01             0488 	cp 1
0403DC CC 5A 07 04       0489 	call z,dsl_flip_frame
0403E0                   0490 
0403E0 21 9A FF FF       0491 	ld hl,KEY_M
0403E4 CD 37 13 04       0492 	call fn_inkey
0403E8 FE 01             0493 	cp 1
0403EA CC C1 07 04       0494 	call z,dsl_mirror_frame
0403EE                   0495 
0403EE 21 B6 FF FF       0496 	ld hl,KEY_RETURN
0403F2 CD 37 13 04       0497 	call fn_inkey
0403F6 FE 01             0498 	cp 1
0403F8 CC 41 08 04       0499 	call z,dsl_flood_fill
0403FC                   0500 
0403FC 21 8F FF FF       0501 	ld hl,KEY_ESCAPE
040400 CD 37 13 04       0502 	call fn_inkey
040404 FE 01             0503 	cp 1
040406 CA 19 0A 04       0504 	jp z,exit_program
04040A                   0505 
04040A C3 F2 02 04       0506 	jp draw_sprite_loop
04040E                   0507 
04040E                   0508 ; set the pen of the current pixel
04040E                   0509 dsl_set_pen:
04040E CD F4 0B 04       0510 	call fn_get_pixel_color
040412 21 9B 13 04       0511 	ld hl,current_pen
040416 BE                0512 	cp (hl)
040417 C8                0513 	ret z
040418 7E                0514 	ld a,(hl)
040419 CD 36 0C 04       0515 	call fn_set_pixel_color
04041D CD CA 0B 04       0516 	call fn_draw_pixel_with_border
040421 C9                0517 	ret
040422                   0518 
040422                   0519 ; reset the pen of the current pixel
040422                   0520 dsl_reset_pen:
040422 CD F4 0B 04       0521 	call fn_get_pixel_color
040426 FE 00             0522 	cp 0
040428 C8                0523 	ret z
040429 AF                0524 	xor a
04042A CD 36 0C 04       0525 	call fn_set_pixel_color
04042E CD CA 0B 04       0526 	call fn_draw_pixel_with_border
040432 C9                0527 	ret
040433                   0528 
040433                   0529 ; move pixel up
040433                   0530 dsl_up:
040433 21 96 13 04       0531 	ld hl,ypix
040437 7E                0532 	ld a,(hl)
040438 FE 00             0533 	cp 0
04043A C8                0534 	ret z
04043B                   0535 
04043B 21 9D FF FF       0536 	ld hl,KEY_SPACE
04043F CD 37 13 04       0537 	call fn_inkey
040443 FE 01             0538 	cp 1
040445 CC 0E 04 04       0539 	call z,dsl_set_pen
040449                   0540 
040449 CD DE 0B 04       0541 	call fn_draw_pixel_without_border
04044D CD 7A 0C 04       0542 	call fn_move_up
040451 CD CA 0B 04       0543 	call fn_draw_pixel_with_border
040455 CD B2 12 04       0544 	call fn_slowdown
040459 C9                0545 	ret
04045A                   0546 
04045A                   0547 ; move pixel down
04045A                   0548 dsl_down:
04045A 21 9A 13 04       0549 	ld hl,spr_size
04045E 56                0550 	ld d,(hl)
04045F 15                0551 	dec d
040460                   0552 
040460 21 96 13 04       0553 	ld hl,ypix
040464 7E                0554 	ld a,(hl)
040465 BA                0555 	cp d
040466 C8                0556 	ret z
040467                   0557 
040467 21 9D FF FF       0558 	ld hl,KEY_SPACE
04046B CD 37 13 04       0559 	call fn_inkey
04046F FE 01             0560 	cp 1
040471 CC 0E 04 04       0561 	call z,dsl_set_pen
040475                   0562 
040475 CD DE 0B 04       0563 	call fn_draw_pixel_without_border
040479 CD 80 0C 04       0564 	call fn_move_down
04047D CD CA 0B 04       0565 	call fn_draw_pixel_with_border
040481 CD B2 12 04       0566 	call fn_slowdown
040485 C9                0567 	ret
040486                   0568 
040486                   0569 ; move pixel left
040486                   0570 dsl_left:
040486 21 95 13 04       0571 	ld hl,xpix
04048A 7E                0572 	ld a,(hl)
04048B FE 00             0573 	cp 0
04048D C8                0574 	ret z
04048E                   0575 
04048E 21 9D FF FF       0576 	ld hl,KEY_SPACE
040492 CD 37 13 04       0577 	call fn_inkey
040496 FE 01             0578 	cp 1
040498 CC 0E 04 04       0579 	call z,dsl_set_pen
04049C                   0580 
04049C CD DE 0B 04       0581 	call fn_draw_pixel_without_border
0404A0 CD 86 0C 04       0582 	call fn_move_left
0404A4 CD CA 0B 04       0583 	call fn_draw_pixel_with_border
0404A8 CD B2 12 04       0584 	call fn_slowdown
0404AC C9                0585 	ret
0404AD                   0586 
0404AD                   0587 ; move pixel right
0404AD                   0588 dsl_right:
0404AD 21 9A 13 04       0589 	ld hl,spr_size
0404B1 56                0590 	ld d,(hl)
0404B2 15                0591 	dec d
0404B3                   0592 
0404B3 21 95 13 04       0593 	ld hl,xpix
0404B7 7E                0594 	ld a,(hl)
0404B8 BA                0595 	cp d
0404B9 C8                0596 	ret z
0404BA                   0597 
0404BA 21 9D FF FF       0598 	ld hl,KEY_SPACE
0404BE CD 37 13 04       0599 	call fn_inkey
0404C2 FE 01             0600 	cp 1
0404C4 CC 0E 04 04       0601 	call z,dsl_set_pen
0404C8                   0602 
0404C8 CD DE 0B 04       0603 	call fn_draw_pixel_without_border
0404CC CD 8C 0C 04       0604 	call fn_move_right
0404D0 CD CA 0B 04       0605 	call fn_draw_pixel_with_border
0404D4 CD B2 12 04       0606 	call fn_slowdown
0404D8 C9                0607 	ret
0404D9                   0608 
0404D9                   0609 ; load a sprite
0404D9                   0610 dsl_load_sprite:
0404D9 21 A9 FF FF       0611 	ld hl,KEY_L
0404DD CD 37 13 04       0612 	call fn_inkey
0404E1 FE 00             0613 	cp 0
0404E3 20 F4             0614 	jr nz,dsl_load_sprite
0404E5                   0615 
0404E5 CD DE 0B 04       0616 	call fn_draw_pixel_without_border
0404E9 CD 54 0E 04       0617 	call fn_load_sprite
0404ED CD 29 12 04       0618 	call fn_refresh_sprite
0404F1 CD CA 0B 04       0619 	call fn_draw_pixel_with_border
0404F5 CD 69 12 04       0620 	call fn_change_frame
0404F9 C9                0621 	ret
0404FA                   0622 
0404FA                   0623 ; save a sprite
0404FA                   0624 dsl_save_sprite:
0404FA 21 AE FF FF       0625 	ld hl,KEY_S
0404FE CD 37 13 04       0626 	call fn_inkey
040502 FE 00             0627 	cp 0
040504 20 F4             0628 	jr nz,dsl_save_sprite
040506                   0629 
040506 CD DE 0B 04       0630 	call fn_draw_pixel_without_border
04050A CD 79 0F 04       0631 	call fn_save_sprite
04050E CD 29 12 04       0632 	call fn_refresh_sprite
040512 C9                0633 	ret
040513                   0634 
040513                   0635 dsl_export_sprite:
040513 21 DD FF FF       0636 	ld hl,KEY_E
040517 CD 37 13 04       0637 	call fn_inkey
04051B FE 00             0638 	cp 0
04051D 20 F4             0639 	jr nz,dsl_export_sprite
04051F                   0640 
04051F CD DE 0B 04       0641 	call fn_draw_pixel_without_border
040523 CD 74 10 04       0642 	call fn_export_sprite
040527 CD 29 12 04       0643 	call fn_refresh_sprite
04052B C9                0644 	ret
04052C                   0645 
04052C                   0646 
04052C                   0647 ; add a frame to the animation
04052C                   0648 dsl_add_frame:
04052C 21 AA FF FF       0649 	ld hl,KEY_N
040530 CD 37 13 04       0650 	call fn_inkey
040534 FE 00             0651 	cp 0
040536 20 F4             0652 	jr nz,dsl_add_frame
040538                   0653 
040538                   0654 	; frames limit reached ? exit
040538 21 72 14 04       0655 	ld hl,frames_count
04053C 7E                0656 	ld a,(hl)
04053D FE 08             0657 	cp MAX_FRAMES
04053F C8                0658 	ret z
040540                   0659 
040540                   0660 	; get the number of frames to copy
040540 21 72 14 04       0661 	ld hl,frames_count
040544 7E                0662 	ld a,(hl)
040545 21 71 14 04       0663 	ld hl,current_frame
040549 46                0664 	ld b,(hl)
04054A 90                0665 	sub b
04054B 3D                0666 	dec a
04054C                   0667 
04054C                   0668 	; get sprsize² (length of a sprite, in bytes)
04054C 21 9A 13 04       0669 	ld hl,spr_size
040550 11 00 00 00       0670 	ld de,$000000
040554 5E                0671 	ld e,(hl)
040555 56                0672 	ld d,(hl)
040556 ED 5C             0673 	mlt de ; DE = sprsize²
040558                   0674 
040558                   0675 	; prepare for the case we goto af_zap...
040558 21 7A 14 04       0676 	ld hl,sprite_buffer
04055C                   0677 
04055C F5                0678 	push af
04055D E5                0679 	push hl
04055E 21 71 14 04       0680 	ld hl,current_frame
040562 7E                0681 	ld a,(hl)
040563 3C                0682 	inc a
040564 47                0683 	ld b,a
040565 E1                0684 	pop hl
040566 F1                0685 	pop af
040567                   0686 
040567                   0687 af_loop0:
040567 19                0688 	add hl,de ; for if current frame = 0 (prepare to zap!)
040568 10 FD             0689 	djnz af_loop0
04056A                   0690 
04056A E5                0691 	push hl ; store HL = sprite buffer + sprsize²
04056B FE 00             0692 	cp 0
04056D CA 95 05 04       0693 	jp z,af_zap ; zap the copy, if the 'current frame' is at the last frame
040571 E1                0694 	pop hl ; HL unused in this case
040572                   0695 
040572 21 00 00 00       0696 	ld hl,$000000 ; HL is 0 to store the result
040576 47                0697 	ld b,a ; B = frames to copy
040577                   0698 
040577                   0699 ; multiply number of frames to copy by sprsize²
040577                   0700 af_loop1:
040577 19                0701 	add hl,de ; HL = length (in bytes) to copy (a few frames)
040578 10 FD             0702 	djnz af_loop1
04057A                   0703 
04057A E5                0704 	push hl
04057B C1                0705 	pop bc ; BC = HL = length (in bytes) to copy (a few frames)
04057C                   0706 
04057C 21 71 14 04       0707 	ld hl,current_frame
040580 7E                0708 	ld a,(hl)
040581 3C                0709 	inc a
040582 21 7A 14 04       0710 	ld hl,sprite_buffer
040586                   0711 
040586 C5                0712 	push bc
040587 47                0713 	ld b,a
040588                   0714 
040588                   0715 af_loop2:
040588 19                0716 	add hl,de ; HL = sprite buffer + length to copy
040589 10 FD             0717 	djnz af_loop2
04058B                   0718 
04058B C1                0719 	pop bc
04058C                   0720 
04058C E5                0721 	push hl ; HL = sprite_buffer + (current frame * sprsize²)
04058D                   0722 
04058D 09                0723 	add hl,bc
04058E 2B                0724 	dec hl ; HL = end address to copy to end target address
04058F                   0725 
04058F E5                0726 	push hl
040590 19                0727 	add hl,de
040591 EB                0728 	ex de,hl ; DE = end target address
040592 E1                0729 	pop hl
040593                   0730 
040593 ED B8             0731 	lddr
040595                   0732 
040595                   0733 af_zap:
040595                   0734 	; multiply number of frames to copy by sprsize²
040595 21 9A 13 04       0735 	ld hl,spr_size
040599 01 00 00 00       0736 	ld bc,$000000
04059D 4E                0737 	ld c,(hl)
04059E 46                0738 	ld b,(hl)
04059F ED 4C             0739 	mlt bc ; BC = sprsize²
0405A1                   0740 
0405A1 E1                0741 	pop hl ; HL = sprite_buffer + (current frame * sprsize²)
0405A2                   0742 
0405A2                   0743 ; fill frame with 0 color
0405A2                   0744 af_loop3:
0405A2 AF                0745 	xor a
0405A3 77                0746 	ld (hl),a
0405A4 23                0747 	inc hl
0405A5 0B                0748 	dec bc
0405A6 78                0749 	ld a,b
0405A7 B1                0750 	or c
0405A8 FE 00             0751 	cp 0
0405AA 20 F6             0752 	jr nz,af_loop3
0405AC                   0753 
0405AC                   0754 	; increment the frames count and the current frame values
0405AC 21 72 14 04       0755 	ld hl,frames_count
0405B0 34                0756 	inc (hl)
0405B1 21 71 14 04       0757 	ld hl,current_frame
0405B5 34                0758 	inc (hl)
0405B6                   0759 
0405B6 CD 69 12 04       0760 	call fn_change_frame
0405BA CD 8E 12 04       0761 	call fn_change_frames_count
0405BE CD 29 12 04       0762 	call fn_refresh_sprite
0405C2 C9                0763 	ret
0405C3                   0764 
0405C3                   0765 ; add a copy of the current frame to the animation
0405C3                   0766 dsl_add_and_copy_frame: ; TODO! debug me!
0405C3 21 AD FF FF       0767 	ld hl,KEY_C
0405C7 CD 37 13 04       0768 	call fn_inkey
0405CB FE 00             0769 	cp 0
0405CD 20 F4             0770 	jr nz,dsl_add_and_copy_frame
0405CF                   0771 
0405CF                   0772 	; frames limit reached ? exit
0405CF 21 72 14 04       0773 	ld hl,frames_count
0405D3 7E                0774 	ld a,(hl)
0405D4 FE 08             0775 	cp MAX_FRAMES
0405D6 C8                0776 	ret z
0405D7                   0777 
0405D7                   0778 	; get the number of frames to copy
0405D7 21 72 14 04       0779 	ld hl,frames_count
0405DB 7E                0780 	ld a,(hl)
0405DC 21 71 14 04       0781 	ld hl,current_frame
0405E0 46                0782 	ld b,(hl)
0405E1 90                0783 	sub b
0405E2                   0784 
0405E2                   0785 	; get sprsize² (length of a sprite, in bytes)
0405E2 21 9A 13 04       0786 	ld hl,spr_size
0405E6 11 00 00 00       0787 	ld de,$000000
0405EA 5E                0788 	ld e,(hl)
0405EB 56                0789 	ld d,(hl)
0405EC ED 5C             0790 	mlt de ; DE = sprsize²
0405EE                   0791 
0405EE 21 00 00 00       0792 	ld hl,$000000 ; HL is 0 to store the result
0405F2 47                0793 	ld b,a ; B = frames to copy
0405F3                   0794 
0405F3                   0795 ; multiply number of frames to copy by sprsize²
0405F3                   0796 aacf_loop1:
0405F3 19                0797 	add hl,de ; HL = length (in bytes) to copy (a few frames)
0405F4 10 FD             0798 	djnz aacf_loop1
0405F6                   0799 
0405F6 E5                0800 	push hl
0405F7 C1                0801 	pop bc ; BC = HL = length (in bytes) to copy (a few frames)
0405F8                   0802 
0405F8 21 71 14 04       0803 	ld hl,current_frame
0405FC 7E                0804 	ld a,(hl)
0405FD 21 7A 14 04       0805 	ld hl,sprite_buffer
040601 FE 00             0806 	cp 0
040603 28 06             0807 	jr z,aacf_loop_end2
040605                   0808 
040605 C5                0809 	push bc
040606 47                0810 	ld b,a
040607                   0811 
040607                   0812 aacf_loop2:
040607 19                0813 	add hl,de ; HL = sprite buffer + length to copy
040608 10 FD             0814 	djnz aacf_loop2
04060A                   0815 
04060A C1                0816 	pop bc
04060B                   0817 
04060B                   0818 aacf_loop_end2:
04060B 09                0819 	add hl,bc
04060C 2B                0820 	dec hl ; HL = end address to copy to end target address
04060D                   0821 
04060D E5                0822 	push hl
04060E 19                0823 	add hl,de
04060F EB                0824 	ex de,hl ; DE = end target address
040610 E1                0825 	pop hl
040611                   0826 
040611 ED B8             0827 	lddr
040613                   0828 
040613                   0829 	; increment the frames count and the current frame values
040613 21 72 14 04       0830 	ld hl,frames_count
040617 34                0831 	inc (hl)
040618 21 71 14 04       0832 	ld hl,current_frame
04061C 34                0833 	inc (hl)
04061D                   0834 
04061D CD 69 12 04       0835 	call fn_change_frame
040621 CD 8E 12 04       0836 	call fn_change_frames_count
040625 CD 29 12 04       0837 	call fn_refresh_sprite
040629 C9                0838 	ret
04062A                   0839 
04062A                   0840 ; delete last frame from animation
04062A                   0841 dsl_delete_frame:
04062A 21 D0 FF FF       0842 	ld hl,KEY_BACKSPACE
04062E CD 37 13 04       0843 	call fn_inkey
040632 FE 00             0844 	cp 0
040634 20 F4             0845 	jr nz,dsl_delete_frame
040636                   0846 
040636                   0847 	; delete current selected frame
040636 21 9A 13 04       0848 	ld hl,spr_size
04063A 01 00 00 00       0849 	ld bc,$000000
04063E 4E                0850 	ld c,(hl)
04063F 46                0851 	ld b,(hl)
040640 ED 4C             0852 	mlt bc ; BC = sprsize²
040642 21 71 14 04       0853 	ld hl,current_frame
040646 7E                0854 	ld a,(hl) ; A = current frame
040647 21 7A 14 04       0855 	ld hl,sprite_buffer ; HL = sprite buffer
04064B C5                0856 	push bc
04064C FE 00             0857 	cp 0
04064E 28 06             0858 	jr z,df_loop2
040650                   0859 
040650                   0860 df_loop1:
040650 09                0861 	add hl,bc ; HL = sprite buffer + (current frame * sprsize²)
040651 3D                0862 	dec a
040652 FE 00             0863 	cp 0
040654 20 FA             0864 	jr nz,df_loop1
040656                   0865 
040656                   0866 ; clear the current frame
040656                   0867 df_loop2:
040656 AF                0868 	xor a
040657 77                0869 	ld (hl),a
040658 23                0870 	inc hl
040659 0B                0871 	dec bc
04065A 78                0872 	ld a,b
04065B B1                0873 	or c
04065C FE 00             0874 	cp 0
04065E 20 F6             0875 	jr nz,df_loop2
040660                   0876 
040660                   0877 	; current frame + 1 = frames count ?
040660 E5                0878 	push hl
040661 21 71 14 04       0879 	ld hl,current_frame
040665 5E                0880 	ld e,(hl)
040666 1C                0881 	inc e
040667 21 72 14 04       0882 	ld hl,frames_count
04066B 7E                0883 	ld a,(hl)
04066C BB                0884 	cp e
04066D E1                0885 	pop hl
04066E C1                0886 	pop bc
04066F CA E8 06 04       0887 	jp z,df_exit
040673                   0888 
040673 11 72 14 04       0889 	ld de,frames_count
040677 1A                0890 	ld a,(de) ; A = frames count
040678 E5                0891 	push hl
040679 21 71 14 04       0892 	ld hl,current_frame
04067D 5E                0893 	ld e,(hl) ; E = current frame
04067E E1                0894 	pop hl
04067F 93                0895 	sub e
040680 3D                0896 	dec a ; A = number of frames to copy back
040681                   0897 
040681 EB                0898 	ex de,hl ; DE = sprite buffer + ((current frame + 1) * sprsize²)
040682 21 00 00 00       0899 	ld hl,$000000
040686 FE 00             0900 	cp 0 ; 0 frames to copy ?
040688 28 06             0901 	jr z,df_exit_loop3
04068A                   0902 
04068A                   0903 df_loop3:
04068A 09                0904 	add hl,bc ; HL = length of a frame (sprsize²) * frames count
04068B 3D                0905 	dec a
04068C FE 00             0906 	cp 0
04068E 20 FA             0907 	jr nz,df_loop3
040690                   0908 
040690                   0909 df_exit_loop3:
040690 E5                0910 	push hl
040691 C1                0911 	pop bc ; BC = total length of area to copy
040692 D5                0912 	push de
040693 E1                0913 	pop hl ; HL = DE = start of area to copy
040694                   0914 
040694 C5                0915 	push bc
040695 D5                0916 	push de
040696 E5                0917 	push hl
040697 21 9A 13 04       0918 	ld hl,spr_size
04069B 11 00 00 00       0919 	ld de,$000000
04069F 5E                0920 	ld e,(hl)
0406A0 56                0921 	ld d,(hl)
0406A1 ED 5C             0922 	mlt de ; DE = one sprite frame length
0406A3 E1                0923 	pop hl
0406A4 B7                0924 	or a
0406A5 ED 52             0925 	sbc hl,de ; HL = target area to copy
0406A7 D1                0926 	pop de
0406A8 EB                0927 	ex de,hl ; DE = target, HL = start
0406A9 C1                0928 	pop bc
0406AA ED B0             0929 	ldir
0406AC                   0930 
0406AC 21 9A 13 04       0931 	ld hl,spr_size
0406B0 01 00 00 00       0932 	ld bc,$000000
0406B4 4E                0933 	ld c,(hl)
0406B5 46                0934 	ld b,(hl)
0406B6 ED 4C             0935 	mlt bc ; DE = one sprite frame length
0406B8                   0936 
0406B8                   0937 	; delete last frame data
0406B8 21 72 14 04       0938 	ld hl,frames_count
0406BC 7E                0939 	ld a,(hl) ; A =frames count
0406BD 3D                0940 	dec a ; A = last frame
0406BE 21 7A 14 04       0941 	ld hl,sprite_buffer ; HL = sprite buffer
0406C2 FE 00             0942 	cp 0
0406C4 28 06             0943 	jr z,df_loop5
0406C6                   0944 
0406C6                   0945 df_loop4:
0406C6 09                0946 	add hl,bc ; HL = sprite buffer + (last frame * sprsize²)
0406C7 3D                0947 	dec a
0406C8 FE 00             0948 	cp 0
0406CA 20 FA             0949 	jr nz,df_loop4
0406CC                   0950 
0406CC                   0951 ; clear the current frame
0406CC                   0952 df_loop5:
0406CC AF                0953 	xor a
0406CD 77                0954 	ld (hl),a
0406CE 23                0955 	inc hl
0406CF 0B                0956 	dec bc
0406D0 78                0957 	ld a,b
0406D1 B1                0958 	or c
0406D2 FE 00             0959 	cp 0
0406D4 20 F6             0960 	jr nz,df_loop5
0406D6                   0961 
0406D6                   0962 	; decrement frames count
0406D6 21 72 14 04       0963 	ld hl,frames_count
0406DA 35                0964 	dec (hl)
0406DB                   0965 
0406DB CD 69 12 04       0966 	call fn_change_frame
0406DF CD 8E 12 04       0967 	call fn_change_frames_count
0406E3 CD 29 12 04       0968 	call fn_refresh_sprite
0406E7 C9                0969 	ret
0406E8                   0970 
0406E8                   0971 df_exit:
0406E8 21 72 14 04       0972 	ld hl,frames_count
0406EC 7E                0973 	ld a,(hl)
0406ED FE 01             0974 	cp 1
0406EF 28 06             0975 	jr z,df_exit_end
0406F1 35                0976 	dec (hl)
0406F2 21 71 14 04       0977 	ld hl,current_frame
0406F6 35                0978 	dec (hl)
0406F7                   0979 
0406F7                   0980 df_exit_end:
0406F7 CD 69 12 04       0981 	call fn_change_frame
0406FB CD 8E 12 04       0982 	call fn_change_frames_count
0406FF CD 29 12 04       0983 	call fn_refresh_sprite
040703 C9                0984 	ret
040704                   0985 
040704                   0986 ; goto previous frame
040704                   0987 dsl_previous_frame:
040704 21 B1 FF FF       0988 	ld hl,KEY_PGDOWN
040708 CD 37 13 04       0989 	call fn_inkey
04070C FE 00             0990 	cp 0
04070E 20 F4             0991 	jr nz,dsl_previous_frame
040710                   0992 
040710 21 71 14 04       0993 	ld hl,current_frame
040714 7E                0994 	ld a,(hl)
040715 FE 00             0995 	cp 0
040717 C8                0996 	ret z
040718                   0997 
040718 3D                0998 	dec a
040719 77                0999 	ld (hl),a
04071A CD 69 12 04       1000 	call fn_change_frame
04071E CD 29 12 04       1001 	call fn_refresh_sprite
040722 C9                1002 	ret
040723                   1003 
040723                   1004 ; goto next frame
040723                   1005 dsl_next_frame:
040723 21 C0 FF FF       1006 	ld hl,KEY_PGUP
040727 CD 37 13 04       1007 	call fn_inkey
04072B FE 00             1008 	cp 0
04072D 20 F4             1009 	jr nz,dsl_next_frame
04072F                   1010 
04072F 21 71 14 04       1011 	ld hl,current_frame
040733 7E                1012 	ld a,(hl)
040734 3C                1013 	inc a
040735 21 72 14 04       1014 	ld hl,frames_count
040739 BE                1015 	cp (hl)
04073A C8                1016 	ret z
04073B                   1017 
04073B 21 71 14 04       1018 	ld hl,current_frame
04073F 77                1019 	ld (hl),a
040740 CD 69 12 04       1020 	call fn_change_frame
040744 CD 29 12 04       1021 	call fn_refresh_sprite
040748 C9                1022 	ret
040749                   1023 
040749                   1024 ; rotate a frame 90° clockwise
040749                   1025 dsl_rotate_frame:
040749 21 CC FF FF       1026 	ld hl,KEY_R
04074D CD 37 13 04       1027 	call fn_inkey
040751 FE 00             1028 	cp 0
040753 20 F4             1029 	jr nz,dsl_rotate_frame
040755                   1030 
040755 CD 29 12 04       1031 	call fn_refresh_sprite
040759 C9                1032 	ret
04075A                   1033 
04075A                   1034 ; flip frame horizontally
04075A                   1035 dsl_flip_frame:
04075A 21 BC FF FF       1036 	ld hl,KEY_F
04075E CD 37 13 04       1037 	call fn_inkey
040762 FE 00             1038 	cp 0
040764 20 F4             1039 	jr nz,dsl_flip_frame
040766                   1040 
040766 21 9A 13 04       1041 	ld hl,spr_size
04076A 11 00 00 00       1042 	ld de,$000000
04076E 5E                1043 	ld e,(hl)
04076F 56                1044 	ld d,(hl)
040770 4B                1045 	ld c,e
040771 ED 5C             1046 	mlt de ; DE = sprite length in bytes
040773 21 71 14 04       1047 	ld hl,current_frame
040777 7E                1048 	ld a,(hl) ; A = current frame
040778 21 7A 14 04       1049 	ld hl,sprite_buffer
04077C FE 00             1050 	cp 0
04077E 28 04             1051 	jr z,ff_noloop1
040780 47                1052 	ld b,a
040781                   1053 
040781                   1054 ff_loop1:
040781 19                1055 	add hl,de ; HL = sprite_buffer + (current frame * sprsize²)
040782 10 FD             1056 	djnz ff_loop1
040784                   1057 
040784                   1058 ff_noloop1:
040784 41                1059 	ld b,c ; B = sprite height
040785 11 00 00 00       1060 	ld de,$000000
040789 59                1061 	ld e,c ; DE = sprite width
04078A 79                1062 	ld a,c ; A = sprite width
04078B CB 3F             1063 	srl a ; A = sprite height / 2
04078D                   1064 
04078D E5                1065 	push hl
04078E DD E1             1066 	pop ix ; IX = frame address
040790 19                1067 	add hl,de ; HL = frame address + sprite width - 1
040791 2B                1068 	dec hl
040792 E5                1069 	push hl
040793 FD E1             1070 	pop iy ; IY = IX + sprite width - 1
040795                   1071 
040795                   1072 ff_loop2:
040795 F5                1073 	push af
040796 D5                1074 	push de
040797 DD E5             1075 	push ix
040799 FD E5             1076 	push iy
04079B                   1077 ff_loop3:
04079B DD 5E 00          1078 	ld e,(ix+0)
04079E FD 56 00          1079 	ld d,(iy+0)
0407A1 DD 72 00          1080 	ld (ix+0),d
0407A4 FD 73 00          1081 	ld (iy+0),e
0407A7 DD 23             1082 	inc ix
0407A9 FD 2B             1083 	dec iy
0407AB 3D                1084 	dec a
0407AC FE 00             1085 	cp 0
0407AE 20 EB             1086 	jr nz,ff_loop3
0407B0 FD E1             1087 	pop iy
0407B2 DD E1             1088 	pop ix
0407B4 D1                1089 	pop de
0407B5 F1                1090 	pop af
0407B6 DD 19             1091 	add ix,de
0407B8 FD 19             1092 	add iy,de
0407BA 10 D9             1093 	djnz ff_loop2
0407BC                   1094 
0407BC CD 29 12 04       1095 	call fn_refresh_sprite
0407C0 C9                1096 	ret
0407C1                   1097 
0407C1                   1098 ; mirror frame vertically
0407C1                   1099 dsl_mirror_frame:
0407C1 21 9A FF FF       1100 	ld hl,KEY_M
0407C5 CD 37 13 04       1101 	call fn_inkey
0407C9 FE 00             1102 	cp 0
0407CB 20 F4             1103 	jr nz,dsl_mirror_frame
0407CD                   1104 
0407CD 21 9A 13 04       1105 	ld hl,spr_size
0407D1 01 00 00 00       1106 	ld bc,$000000
0407D5 11 00 00 00       1107 	ld de,$000000
0407D9 5E                1108 	ld e,(hl)
0407DA 56                1109 	ld d,(hl)
0407DB 4B                1110 	ld c,e
0407DC ED 5C             1111 	mlt de ; DE = sprite length in bytes
0407DE 21 71 14 04       1112 	ld hl,current_frame
0407E2 7E                1113 	ld a,(hl) ; A = current frame
0407E3 21 7A 14 04       1114 	ld hl,sprite_buffer
0407E7 FE 00             1115 	cp 0
0407E9 28 04             1116 	jr z,mf_noloop1
0407EB 47                1117 	ld b,a
0407EC                   1118 
0407EC                   1119 mf_loop1:
0407EC 19                1120 	add hl,de ; HL = sprite_buffer + (current frame * sprsize²)
0407ED 10 FD             1121 	djnz mf_loop1
0407EF                   1122 
0407EF                   1123 mf_noloop1:
0407EF 11 00 00 00       1124 	ld de,$000000
0407F3 59                1125 	ld e,c ; E = sprite height
0407F4 79                1126 	ld a,c ; A = sprite width
0407F5 41                1127 	ld b,c ; B = sprite height
0407F6 CB 38             1128 	srl b ; divide B by 2, so B = sprite height / 2
0407F8                   1129 
0407F8 E5                1130 	push hl
0407F9 DD E1             1131 	pop ix ; IX = frame address
0407FB 51                1132 	ld d,c
0407FC 15                1133 	dec d
0407FD ED 5C             1134 	mlt de ; DE = sprite length - sprite width
0407FF 19                1135 	add hl,de ; HL = frame address + sprite length - sprite width
040800 E5                1136 	push hl
040801 FD E1             1137 	pop iy ; IY = IX + sprite length - sprite width
040803 21 00 00 00       1138 	ld hl,$000000
040807 69                1139 	ld l,c ; HL = sprite width
040808                   1140 
040808                   1141 mf_loop2:
040808 F5                1142 	push af
040809 D5                1143 	push de
04080A DD E5             1144 	push ix
04080C FD E5             1145 	push iy
04080E                   1146 mf_loop3:
04080E DD 5E 00          1147 	ld e,(ix+0)
040811 FD 56 00          1148 	ld d,(iy+0)
040814 DD 72 00          1149 	ld (ix+0),d
040817 FD 73 00          1150 	ld (iy+0),e
04081A DD 23             1151 	inc ix
04081C FD 23             1152 	inc iy
04081E 3D                1153 	dec a
04081F FE 00             1154 	cp 0
040821 20 EB             1155 	jr nz,mf_loop3
040823 FD E1             1156 	pop iy
040825 DD E1             1157 	pop ix
040827 D1                1158 	pop de
040828 F1                1159 	pop af
040829 EB                1160 	ex de,hl
04082A DD 19             1161 	add ix,de
04082C EB                1162 	ex de,hl
04082D E5                1163 	push hl
04082E FD E5             1164 	push iy
040830 E1                1165 	pop hl
040831 D1                1166 	pop de
040832 B7                1167 	or a
040833 ED 52             1168 	sbc hl,de
040835 E5                1169 	push hl
040836 D5                1170 	push de
040837 E1                1171 	pop hl
040838 FD E1             1172 	pop iy
04083A 10 CC             1173 	djnz mf_loop2
04083C                   1174 
04083C CD 29 12 04       1175 	call fn_refresh_sprite
040840 C9                1176 	ret
040841                   1177 
040841                   1178 dsl_flood_fill:
040841 21 B6 FF FF       1179 	ld hl,KEY_RETURN
040845 CD 37 13 04       1180 	call fn_inkey
040849 FE 00             1181 	cp 0
04084B 20 F4             1182 	jr nz,dsl_flood_fill
04084D                   1183 
04084D                   1184 	; hide the cursor
04084D CD DE 0B 04       1185 	call fn_draw_pixel_without_border
040851                   1186 
040851                   1187 	; memorize pixel coordinates
040851 3A 95 13 04       1188 	ld a,(xpix)
040855 32 97 13 04       1189 	ld (memxpix),a
040859 3A 96 13 04       1190 	ld a,(ypix)
04085D 32 98 13 04       1191 	ld (memypix),a
040861                   1192 
040861                   1193 	; fill all recursively
040861 3A 95 13 04       1194 	ld a,(xpix)
040865 5F                1195 	ld e,a
040866 3A 96 13 04       1196 	ld a,(ypix)
04086A 57                1197 	ld d,a
04086B CD 8C 08 04       1198 	call dsl_flood_fill_loop
04086F                   1199 
04086F                   1200 	; refresh all the sprite
04086F CD 29 12 04       1201 	call fn_refresh_sprite
040873                   1202 
040873                   1203 	; hide the cursor again
040873 CD DE 0B 04       1204 	call fn_draw_pixel_without_border
040877                   1205 
040877                   1206 	; restore pixel coordinates
040877                   1207 	; and cursor
040877 3A 97 13 04       1208 	ld a,(memxpix)
04087B 32 95 13 04       1209 	ld (xpix),a
04087F 3A 98 13 04       1210 	ld a,(memypix)
040883 32 96 13 04       1211 	ld (ypix),a
040887 CD CA 0B 04       1212 	call fn_draw_pixel_with_border
04088B C9                1213 	ret
04088C                   1214 
04088C                   1215 dsl_flood_fill_loop:
04088C D5                1216 	push de
04088D                   1217 
04088D DD 21 9A 13 04    1218 	ld ix,spr_size
040892                   1219 
040892                   1220 	; out  of the sprite area ?
040892 7B                1221 	ld a,e
040893 DD BE 00          1222 	cp (ix+0)
040896 D2 DF 08 04       1223 	jp nc,ffl_exit
04089A                   1224 
04089A                   1225 	; out  of the sprite area ?
04089A 7A                1226 	ld a,d
04089B DD BE 00          1227 	cp (ix+0)
04089E D2 DF 08 04       1228 	jp nc,ffl_exit
0408A2                   1229 
0408A2                   1230 	; replace current pixel, if it is
0408A2                   1231 	; inside the sprite area,
0408A2                   1232 	; and has not the select palette color
0408A2 7B                1233 	ld a,e
0408A3 32 95 13 04       1234 	ld (xpix),a
0408A7 7A                1235 	ld a,d
0408A8 32 96 13 04       1236 	ld (ypix),a
0408AC CD F4 0B 04       1237 	call fn_get_pixel_color
0408B0 21 9B 13 04       1238 	ld hl,current_pen
0408B4 BE                1239 	cp (hl)
0408B5 CA DF 08 04       1240 	jp z,ffl_exit
0408B9 7E                1241 	ld a,(hl)
0408BA CD 36 0C 04       1242 	call fn_set_pixel_color
0408BE                   1243 
0408BE                   1244 	; restore coordinates
0408BE 3A 95 13 04       1245 	ld a,(xpix)
0408C2 5F                1246 	ld e,a
0408C3 3A 96 13 04       1247 	ld a,(ypix)
0408C7 57                1248 	ld d,a
0408C8                   1249 
0408C8                   1250 	; draw pixel at right
0408C8 1C                1251 	inc e
0408C9 CD 8C 08 04       1252 	call dsl_flood_fill_loop
0408CD 1D                1253 	dec e
0408CE                   1254 	; draw pixel at left
0408CE 1D                1255 	dec e
0408CF CD 8C 08 04       1256 	call dsl_flood_fill_loop
0408D3 1C                1257 	inc e
0408D4                   1258 	; draw pixel up
0408D4 14                1259 	inc d
0408D5 CD 8C 08 04       1260 	call dsl_flood_fill_loop
0408D9 15                1261 	dec d
0408DA                   1262 	; draw pixel down
0408DA 15                1263 	dec d
0408DB CD 8C 08 04       1264 	call dsl_flood_fill_loop
0408DF                   1265 
0408DF                   1266 ffl_exit:
0408DF D1                1267 	pop de
0408E0 C9                1268 	ret
0408E1                   1269 
0408E1                   1270 ; change current tool to palette
0408E1                   1271 dsl_palette_tool:
0408E1 21 9F FF FF       1272 	ld hl,KEY_TAB
0408E5 CD 37 13 04       1273 	call fn_inkey
0408E9 FE 00             1274 	cp 0
0408EB 20 F4             1275 	jr nz,dsl_palette_tool
0408ED                   1276 
0408ED                   1277 	; hide sprite drawing cursor
0408ED CD DE 0B 04       1278 	call fn_draw_pixel_without_border
0408F1                   1279 
0408F1                   1280 	; draw selected palette color
0408F1 21 9B 13 04       1281 	ld hl,current_pen
0408F5 4E                1282 	ld c,(hl)
0408F6 CD 92 0C 04       1283 	call fn_draw_palette_with_border
0408FA                   1284 
0408FA                   1285 ; select palette color
0408FA                   1286 dsl_palette_tool_loop:
0408FA 21 E6 FF FF       1287 	ld hl,KEY_LEFT
0408FE CD 37 13 04       1288 	call fn_inkey
040902 FE 01             1289 	cp 1
040904 CC C3 09 04       1290 	call z,dsl_dec_pen
040908                   1291 
040908 21 86 FF FF       1292 	ld hl,KEY_RIGHT
04090C CD 37 13 04       1293 	call fn_inkey
040910 FE 01             1294 	cp 1
040912 CC EE 09 04       1295 	call z,dsl_inc_pen
040916                   1296 
040916 21 9F FF FF       1297 	ld hl,KEY_TAB
04091A CD 37 13 04       1298 	call fn_inkey
04091E FE 01             1299 	cp 1
040920 CA A6 09 04       1300 	jp z,dsl_draw_sprite_tool
040924                   1301 
040924 21 A9 FF FF       1302 	ld hl,KEY_L
040928 CD 37 13 04       1303 	call fn_inkey
04092C FE 01             1304 	cp 1
04092E CC 52 09 04       1305 	call z,dslp_load_sprite
040932                   1306 
040932 21 AE FF FF       1307 	ld hl,KEY_S
040936 CD 37 13 04       1308 	call fn_inkey
04093A FE 01             1309 	cp 1
04093C CC 80 09 04       1310 	call z,dslp_save_sprite
040940                   1311 
040940 21 8F FF FF       1312 	ld hl,KEY_ESCAPE
040944 CD 37 13 04       1313 	call fn_inkey
040948 FE 01             1314 	cp 1
04094A CA 19 0A 04       1315 	jp z,exit_program
04094E                   1316 
04094E C3 FA 08 04       1317 	jp dsl_palette_tool_loop
040952                   1318 
040952                   1319 dslp_load_sprite:
040952 21 A9 FF FF       1320 	ld hl,KEY_L
040956 CD 37 13 04       1321 	call fn_inkey
04095A FE 00             1322 	cp 0
04095C 20 F4             1323 	jr nz,dslp_load_sprite
04095E                   1324 
04095E 21 9B 13 04       1325 	ld hl,current_pen
040962 4E                1326 	ld c,(hl)
040963 CD F7 0C 04       1327 	call fn_draw_palette_without_border
040967 CD 54 0E 04       1328 	call fn_load_sprite
04096B 21 9B 13 04       1329 	ld hl,current_pen
04096F 4E                1330 	ld c,(hl)
040970 CD 29 12 04       1331 	call fn_refresh_sprite
040974 CD 92 0C 04       1332 	call fn_draw_palette_with_border
040978 CD 69 12 04       1333 	call fn_change_frame
04097C C3 FA 08 04       1334 	jp dsl_palette_tool_loop
040980                   1335 
040980                   1336 dslp_save_sprite:
040980 21 AE FF FF       1337 	ld hl,KEY_S
040984 CD 37 13 04       1338 	call fn_inkey
040988 FE 00             1339 	cp 0
04098A 20 F4             1340 	jr nz,dslp_save_sprite
04098C                   1341 
04098C 21 9B 13 04       1342 	ld hl,current_pen
040990 4E                1343 	ld c,(hl)
040991 CD F7 0C 04       1344 	call fn_draw_palette_without_border
040995 CD 79 0F 04       1345 	call fn_save_sprite
040999 21 9B 13 04       1346 	ld hl,current_pen
04099D 4E                1347 	ld c,(hl)
04099E CD 92 0C 04       1348 	call fn_draw_palette_with_border
0409A2 C3 FA 08 04       1349 	jp dsl_palette_tool_loop
0409A6                   1350 
0409A6                   1351 dsl_draw_sprite_tool:
0409A6 21 9F FF FF       1352 	ld hl,KEY_TAB
0409AA CD 37 13 04       1353 	call fn_inkey
0409AE FE 00             1354 	cp 0
0409B0 20 F4             1355 	jr nz,dsl_draw_sprite_tool
0409B2                   1356 
0409B2                   1357 	; unselect palette color
0409B2 21 9B 13 04       1358 	ld hl,current_pen
0409B6 4E                1359 	ld c,(hl)
0409B7 CD F7 0C 04       1360 	call fn_draw_palette_without_border
0409BB                   1361 
0409BB                   1362 	; draw the pixel with a border
0409BB CD CA 0B 04       1363 	call fn_draw_pixel_with_border
0409BF                   1364 
0409BF C3 F2 02 04       1365 	jp draw_sprite_loop
0409C3                   1366 
0409C3                   1367 dsl_dec_pen:
0409C3 21 9B 13 04       1368 	ld hl,current_pen
0409C7 7E                1369 	ld a,(hl)
0409C8 FE 00             1370 	cp COLOR_MIN
0409CA CA FA 08 04       1371 	jp z,dsl_palette_tool_loop
0409CE                   1372 
0409CE F5                1373 	push af
0409CF E5                1374 	push hl
0409D0                   1375 
0409D0                   1376 	; unselect palette color
0409D0 21 9B 13 04       1377 	ld hl,current_pen
0409D4 4E                1378 	ld c,(hl)
0409D5 CD F7 0C 04       1379 	call fn_draw_palette_without_border
0409D9                   1380 
0409D9 E1                1381 	pop hl
0409DA F1                1382 	pop af
0409DB                   1383 
0409DB                   1384 	; dec the pen
0409DB 3D                1385 	dec a
0409DC 77                1386 	ld (hl),a
0409DD                   1387 
0409DD                   1388 	; select palette color
0409DD 21 9B 13 04       1389 	ld hl,current_pen
0409E1 4E                1390 	ld c,(hl)
0409E2 CD 92 0C 04       1391 	call fn_draw_palette_with_border
0409E6 CD B2 12 04       1392 	call fn_slowdown
0409EA C3 FA 08 04       1393 	jp dsl_palette_tool_loop
0409EE                   1394 
0409EE                   1395 dsl_inc_pen:
0409EE 21 9B 13 04       1396 	ld hl,current_pen
0409F2 7E                1397 	ld a,(hl)
0409F3 FE 3F             1398 	cp COLOR_MAX
0409F5 CA FA 08 04       1399 	jp z,dsl_palette_tool_loop
0409F9                   1400 
0409F9 F5                1401 	push af
0409FA E5                1402 	push hl
0409FB                   1403 
0409FB                   1404 	; unselect palette color
0409FB 21 9B 13 04       1405 	ld hl,current_pen
0409FF 4E                1406 	ld c,(hl)
040A00 CD F7 0C 04       1407 	call fn_draw_palette_without_border
040A04                   1408 
040A04 E1                1409 	pop hl
040A05 F1                1410 	pop af
040A06                   1411 
040A06                   1412 	; inc the pen
040A06 3C                1413 	inc a
040A07 77                1414 	ld (hl),a
040A08                   1415 
040A08                   1416 	; select palette color
040A08 21 9B 13 04       1417 	ld hl,current_pen
040A0C 4E                1418 	ld c,(hl)
040A0D CD 92 0C 04       1419 	call fn_draw_palette_with_border
040A11 CD B2 12 04       1420 	call fn_slowdown
040A15 C3 FA 08 04       1421 	jp dsl_palette_tool_loop
040A19                   1422 
040A19                   1423 ; exit program
040A19                   1424 exit_program:
040A19                   1425 	; reset to mode 1
040A19                   1426 	vdu 22
040A19 3E 16             1426 		LD	A, function
040A1B 49 D7             1426 		RST.LIS	10h
040A1D                   1427 	vdu 1
040A1D 3E 01             1427 		LD	A, function
040A1F 49 D7             1427 		RST.LIS	10h
040A21                   1428 
040A21                   1429 	; position the texte cursor at home
040A21                   1430 	vdu 30
040A21 3E 1E             1430 		LD	A, function
040A23 49 D7             1430 		RST.LIS	10h
040A25                   1431 
040A25                   1432 	; show cursor
040A25                   1433 	vdu 23
040A25 3E 17             1433 		LD	A, function
040A27 49 D7             1433 		RST.LIS	10h
040A29                   1434 	vdu 1
040A29 3E 01             1434 		LD	A, function
040A2B 49 D7             1434 		RST.LIS	10h
040A2D                   1435 	vdu 1
040A2D 3E 01             1435 		LD	A, function
040A2F 49 D7             1435 		RST.LIS	10h
040A31                   1436 
040A31 FD E1             1437 	pop iy
040A33 DD E1             1438 	pop ix
040A35 D1                1439 	pop de
040A36 C1                1440 	pop bc
040A37 F1                1441 	pop af
040A38 21 00 00 00       1442 	ld hl,0
040A3C                   1443 
040A3C C9                1444 	ret
040A3D                   1445 ;======================================================================
040A3D                   1446 
040A3D                   1447 ; draw a rectangle
040A3D                   1448 fn_rect:
040A3D                   1449 	vdu 25
040A3D 3E 19             1449 		LD	A, function
040A3F 49 D7             1449 		RST.LIS	10h
040A41                   1450 	vdu 4
040A41 3E 04             1450 		LD	A, function
040A43 49 D7             1450 		RST.LIS	10h
040A45 DD 21 85 13 04    1451 	ld ix,x1
040A4A DD 7E 00          1452 	ld a,(ix + 0)
040A4D                   1453 	vdu_a
040A4D 49 D7             1453 		RST.LIS	10h
040A4F DD 7E 01          1454 	ld a,(ix + 1)
040A52                   1455 	vdu_a
040A52 49 D7             1455 		RST.LIS	10h
040A54 FD 21 87 13 04    1456 	ld iy,y1
040A59 FD 7E 00          1457 	ld a,(iy + 0)
040A5C                   1458 	vdu_a
040A5C 49 D7             1458 		RST.LIS	10h
040A5E FD 7E 01          1459 	ld a,(iy + 1)
040A61                   1460 	vdu_a
040A61 49 D7             1460 		RST.LIS	10h
040A63                   1461 
040A63                   1462 	vdu 25
040A63 3E 19             1462 		LD	A, function
040A65 49 D7             1462 		RST.LIS	10h
040A67                   1463 	vdu 5
040A67 3E 05             1463 		LD	A, function
040A69 49 D7             1463 		RST.LIS	10h
040A6B DD 21 89 13 04    1464 	ld ix,x2
040A70 DD 7E 00          1465 	ld a,(ix + 0)
040A73                   1466 	vdu_a
040A73 49 D7             1466 		RST.LIS	10h
040A75 DD 7E 01          1467 	ld a,(ix + 1)
040A78                   1468 	vdu_a
040A78 49 D7             1468 		RST.LIS	10h
040A7A FD 21 87 13 04    1469 	ld iy,y1
040A7F FD 7E 00          1470 	ld a,(iy + 0)
040A82                   1471 	vdu_a
040A82 49 D7             1471 		RST.LIS	10h
040A84 FD 7E 01          1472 	ld a,(iy + 1)
040A87                   1473 	vdu_a
040A87 49 D7             1473 		RST.LIS	10h
040A89                   1474 
040A89                   1475 	vdu 25
040A89 3E 19             1475 		LD	A, function
040A8B 49 D7             1475 		RST.LIS	10h
040A8D                   1476 	vdu 5
040A8D 3E 05             1476 		LD	A, function
040A8F 49 D7             1476 		RST.LIS	10h
040A91 DD 21 89 13 04    1477 	ld ix,x2
040A96 DD 7E 00          1478 	ld a,(ix + 0)
040A99                   1479 	vdu_a
040A99 49 D7             1479 		RST.LIS	10h
040A9B DD 7E 01          1480 	ld a,(ix + 1)
040A9E                   1481 	vdu_a
040A9E 49 D7             1481 		RST.LIS	10h
040AA0 FD 21 8B 13 04    1482 	ld iy,y2
040AA5 FD 7E 00          1483 	ld a,(iy + 0)
040AA8                   1484 	vdu_a
040AA8 49 D7             1484 		RST.LIS	10h
040AAA FD 7E 01          1485 	ld a,(iy + 1)
040AAD                   1486 	vdu_a
040AAD 49 D7             1486 		RST.LIS	10h
040AAF                   1487 
040AAF                   1488 	vdu 25
040AAF 3E 19             1488 		LD	A, function
040AB1 49 D7             1488 		RST.LIS	10h
040AB3                   1489 	vdu 5
040AB3 3E 05             1489 		LD	A, function
040AB5 49 D7             1489 		RST.LIS	10h
040AB7 DD 21 85 13 04    1490 	ld ix,x1
040ABC DD 7E 00          1491 	ld a,(ix + 0)
040ABF                   1492 	vdu_a
040ABF 49 D7             1492 		RST.LIS	10h
040AC1 DD 7E 01          1493 	ld a,(ix + 1)
040AC4                   1494 	vdu_a
040AC4 49 D7             1494 		RST.LIS	10h
040AC6 FD 21 8B 13 04    1495 	ld iy,y2
040ACB FD 7E 00          1496 	ld a,(iy + 0)
040ACE                   1497 	vdu_a
040ACE 49 D7             1497 		RST.LIS	10h
040AD0 FD 7E 01          1498 	ld a,(iy + 1)
040AD3                   1499 	vdu_a
040AD3 49 D7             1499 		RST.LIS	10h
040AD5                   1500 
040AD5                   1501 	vdu 25
040AD5 3E 19             1501 		LD	A, function
040AD7 49 D7             1501 		RST.LIS	10h
040AD9                   1502 	vdu 5
040AD9 3E 05             1502 		LD	A, function
040ADB 49 D7             1502 		RST.LIS	10h
040ADD DD 21 85 13 04    1503 	ld ix,x1
040AE2 DD 7E 00          1504 	ld a,(ix + 0)
040AE5                   1505 	vdu_a
040AE5 49 D7             1505 		RST.LIS	10h
040AE7 DD 7E 01          1506 	ld a,(ix + 1)
040AEA                   1507 	vdu_a
040AEA 49 D7             1507 		RST.LIS	10h
040AEC FD 21 87 13 04    1508 	ld iy,y1
040AF1 FD 7E 00          1509 	ld a,(iy + 0)
040AF4                   1510 	vdu_a
040AF4 49 D7             1510 		RST.LIS	10h
040AF6 FD 7E 01          1511 	ld a,(iy + 1)
040AF9                   1512 	vdu_a
040AF9 49 D7             1512 		RST.LIS	10h
040AFB                   1513 
040AFB C9                1514 	ret
040AFC                   1515 
040AFC                   1516 ; draw a filled rectangle
040AFC                   1517 fn_rectf:
040AFC DD 21 85 13 04    1518 	ld ix,x1
040B01 FD 21 87 13 04    1519 	ld iy,y1
040B06                   1520 
040B06                   1521 	vdu 25
040B06 3E 19             1521 		LD	A, function
040B08 49 D7             1521 		RST.LIS	10h
040B0A                   1522 	vdu 4
040B0A 3E 04             1522 		LD	A, function
040B0C 49 D7             1522 		RST.LIS	10h
040B0E DD 7E 00          1523 	ld a,(ix+0)
040B11                   1524 	vdu_a
040B11 49 D7             1524 		RST.LIS	10h
040B13 DD 7E 01          1525 	ld a,(ix+1)
040B16                   1526 	vdu_a
040B16 49 D7             1526 		RST.LIS	10h
040B18 FD 7E 00          1527 	ld a,(iy+0)
040B1B                   1528 	vdu_a
040B1B 49 D7             1528 		RST.LIS	10h
040B1D FD 7E 01          1529 	ld a,(iy+1)
040B20                   1530 	vdu_a
040B20 49 D7             1530 		RST.LIS	10h
040B22                   1531 
040B22 DD 21 89 13 04    1532 	ld ix,x2
040B27 FD 21 8B 13 04    1533 	ld iy,y2
040B2C                   1534 
040B2C                   1535 	vdu 25
040B2C 3E 19             1535 		LD	A, function
040B2E 49 D7             1535 		RST.LIS	10h
040B30                   1536 	vdu 101
040B30 3E 65             1536 		LD	A, function
040B32 49 D7             1536 		RST.LIS	10h
040B34 DD 7E 00          1537 	ld a,(ix+0)
040B37                   1538 	vdu_a
040B37 49 D7             1538 		RST.LIS	10h
040B39 DD 7E 01          1539 	ld a,(ix+1)
040B3C                   1540 	vdu_a
040B3C 49 D7             1540 		RST.LIS	10h
040B3E FD 7E 00          1541 	ld a,(iy+0)
040B41                   1542 	vdu_a
040B41 49 D7             1542 		RST.LIS	10h
040B43 FD 7E 01          1543 	ld a,(iy+1)
040B46                   1544 	vdu_a
040B46 49 D7             1544 		RST.LIS	10h
040B48                   1545 
040B48 C9                1546 	ret
040B49                   1547 
040B49                   1548 fn_calc_pixel_coords:
040B49 11 00 00 00       1549 	ld de,$000000 ; reset deu
040B4D                   1550 
040B4D                   1551 	; calculate coordinates x of the resized pixel
040B4D 21 95 13 04       1552 	ld hl,xpix
040B51 5E                1553 	ld e,(hl) ; E = xpix
040B52 21 99 13 04       1554 	ld hl,pixel_width
040B56 56                1555 	ld d,(hl) ; D = pixel_width
040B57 D5                1556 	push de
040B58 E1                1557 	pop hl ; HL = DE
040B59 ED 6C             1558 	mlt hl ; HL = xpix * pixel_width
040B5B DD 21 8D 13 04    1559 	ld ix,xs1
040B60 DD 5E 00          1560 	ld e,(ix+0)
040B63 DD 56 01          1561 	ld d,(ix+1)
040B66 13                1562 	inc de ; DE = xs1 + 1
040B67 19                1563 	add hl,de ; HL = (xpix * pixel_width) + xs1 + 1
040B68 FD 21 85 13 04    1564 	ld iy,x1
040B6D FD 75 00          1565 	ld (iy+0),l
040B70 FD 74 01          1566 	ld (iy+1),h ; x1 = (xpix * pixel_width) + xs1 + 1
040B73 E5                1567 	push hl
040B74 21 99 13 04       1568 	ld hl,pixel_width
040B78 16 00             1569 	ld d,0
040B7A 5E                1570 	ld e,(hl)
040B7B E1                1571 	pop hl
040B7C 19                1572 	add hl,de
040B7D 2B                1573 	dec hl
040B7E FD 21 89 13 04    1574 	ld iy,x2
040B83 FD 75 00          1575 	ld (iy+0),l
040B86 FD 74 01          1576 	ld (iy+1),h ; x2 = x1 + pixel_width - 1
040B89                   1577 
040B89 11 00 00 00       1578 	ld de,$000000 ; reset deu
040B8D                   1579 
040B8D                   1580 	; calculate coordinates y of the resized pixel
040B8D 21 96 13 04       1581 	ld hl,ypix
040B91 5E                1582 	ld e,(hl) ; E = ypix
040B92 21 99 13 04       1583 	ld hl,pixel_width
040B96 56                1584 	ld d,(hl) ; D = pixel_width
040B97 D5                1585 	push de
040B98 E1                1586 	pop hl ; HL = DE
040B99 ED 6C             1587 	mlt hl ; HL = ypix * pixel_width
040B9B DD 21 8F 13 04    1588 	ld ix,ys1
040BA0 DD 5E 00          1589 	ld e,(ix+0)
040BA3 DD 56 01          1590 	ld d,(ix+1) ; ys1 = ypix * pixel_width
040BA6 13                1591 	inc de ; DE = ys1 + 1
040BA7 19                1592 	add hl,de ; HL = (ypix * pixel_width) + ys1 + 1
040BA8 FD 21 87 13 04    1593 	ld iy,y1
040BAD FD 75 00          1594 	ld (iy+0),l
040BB0 FD 74 01          1595 	ld (iy+1),h ; y1 = (ypix * pixel_width) + ys1 + 1
040BB3 E5                1596 	push hl
040BB4 21 99 13 04       1597 	ld hl,pixel_width
040BB8 16 00             1598 	ld d,0
040BBA 5E                1599 	ld e,(hl)
040BBB E1                1600 	pop hl
040BBC 19                1601 	add hl,de
040BBD 2B                1602 	dec hl
040BBE FD 21 8B 13 04    1603 	ld iy,y2
040BC3 FD 75 00          1604 	ld (iy+0),l
040BC6 FD 74 01          1605 	ld (iy+1),h ; y2 = y1 + pixel_width - 1
040BC9                   1606 
040BC9 C9                1607 	ret
040BCA                   1608 
040BCA                   1609 ; draw the resized pixel border, with its color
040BCA                   1610 fn_draw_pixel_with_border:
040BCA CD DE 0B 04       1611 	call fn_draw_pixel_without_border
040BCE                   1612 
040BCE                   1613 	; set graphics pen
040BCE                   1614 	vdu 18
040BCE 3E 12             1614 		LD	A, function
040BD0 49 D7             1614 		RST.LIS	10h
040BD2                   1615 	vdu 0
040BD2 3E 00             1615 		LD	A, function
040BD4 49 D7             1615 		RST.LIS	10h
040BD6                   1616 	vdu COLOR_GREY ; grey pen
040BD6 3E 07             1616 		LD	A, function
040BD8 49 D7             1616 		RST.LIS	10h
040BDA                   1617 
040BDA                   1618 	; draw the sprite's border rectangle
040BDA C3 3D 0A 04       1619 	jp fn_rect
040BDE                   1620 
040BDE                   1621 ; draw the resized pixel color
040BDE                   1622 fn_draw_pixel_without_border:
040BDE CD 49 0B 04       1623 	call fn_calc_pixel_coords
040BE2                   1624 
040BE2                   1625 	; set graphics pen
040BE2                   1626 	vdu 18
040BE2 3E 12             1626 		LD	A, function
040BE4 49 D7             1626 		RST.LIS	10h
040BE6                   1627 	vdu 0
040BE6 3E 00             1627 		LD	A, function
040BE8 49 D7             1627 		RST.LIS	10h
040BEA CD F4 0B 04       1628 	call fn_get_pixel_color
040BEE                   1629 	vdu_a
040BEE 49 D7             1629 		RST.LIS	10h
040BF0                   1630 
040BF0                   1631 	; draw the sprite's color rectangle
040BF0 C3 FC 0A 04       1632 	jp fn_rectf
040BF4                   1633 
040BF4                   1634 ; get pixel color value in the sprite buffer
040BF4                   1635 ; returns A: pixel color (0-63)
040BF4                   1636 fn_get_pixel_color:
040BF4 11 00 00 00       1637 	ld de,$000000 ; reset deu
040BF8                   1638 
040BF8                   1639 	; calculate the offset to add to the address
040BF8 21 96 13 04       1640 	ld hl,ypix
040BFC 5E                1641 	ld e,(hl) ; E = ypix
040BFD 21 9A 13 04       1642 	ld hl,spr_size
040C01 56                1643 	ld d,(hl) ; D = sprsize
040C02 D5                1644 	push de
040C03 E1                1645 	pop hl
040C04 ED 6C             1646 	mlt hl ; HL = ypix * sprsize
040C06 E5                1647 	push hl
040C07 21 95 13 04       1648 	ld hl,xpix
040C0B 5E                1649 	ld e,(hl)
040C0C 16 00             1650 	ld d,0
040C0E E1                1651 	pop hl
040C0F 19                1652 	add hl,de ; HL = (ypix * sprsize) + xpix
040C10                   1653 
040C10 11 71 14 04       1654 	ld de,current_frame
040C14 1A                1655 	ld a,(de)
040C15 FE 00             1656 	cp 0
040C17 28 16             1657 	jr z,gpc_end_loop
040C19                   1658 
040C19 47                1659 	ld b,a
040C1A E5                1660 	push hl
040C1B 11 00 00 00       1661 	ld de,$000000
040C1F 21 9A 13 04       1662 	ld hl,spr_size
040C23 5E                1663 	ld e,(hl)
040C24 56                1664 	ld d,(hl)
040C25 D5                1665 	push de
040C26 E1                1666 	pop hl
040C27 ED 6C             1667 	mlt hl
040C29 E5                1668 	push hl
040C2A D1                1669 	pop de ; DE = sprsize²
040C2B E1                1670 	pop hl
040C2C                   1671 
040C2C                   1672 gpc_loop:
040C2C 19                1673 	add hl,de
040C2D 10 FD             1674 	djnz gpc_loop
040C2F                   1675 
040C2F                   1676 gpc_end_loop:
040C2F                   1677 	; add the offset to the address
040C2F 11 7A 14 04       1678 	ld de,sprite_buffer
040C33 19                1679 	add hl,de ; HL = sprite_buffer + ((ypix * sprsize) + xpix)
040C34                   1680 
040C34                   1681 	; get pixel color value
040C34 7E                1682 	ld a,(hl)
040C35                   1683 
040C35 C9                1684 	ret
040C36                   1685 
040C36                   1686 ; get pixel color value in the sprite buffer
040C36                   1687 ; A: pixel color (0-63)
040C36                   1688 fn_set_pixel_color:
040C36 11 00 00 00       1689 	ld de,$000000 ; reset deu
040C3A                   1690 
040C3A                   1691 	; calculate the offset to add to the address
040C3A 21 96 13 04       1692 	ld hl,ypix
040C3E 5E                1693 	ld e,(hl) ; E = ypix
040C3F 21 9A 13 04       1694 	ld hl,spr_size
040C43 56                1695 	ld d,(hl) ; D = sprsize
040C44 D5                1696 	push de
040C45 E1                1697 	pop hl
040C46 ED 6C             1698 	mlt hl ; HL = ypix * sprsize
040C48 E5                1699 	push hl
040C49 21 95 13 04       1700 	ld hl,xpix
040C4D 5E                1701 	ld e,(hl)
040C4E 16 00             1702 	ld d,0
040C50 E1                1703 	pop hl
040C51 19                1704 	add hl,de ; HL = (ypix * sprsize) + xpix
040C52 F5                1705 	push af
040C53                   1706 
040C53 11 71 14 04       1707 	ld de,current_frame
040C57 1A                1708 	ld a,(de)
040C58 FE 00             1709 	cp 0
040C5A 28 16             1710 	jr z,spc_end_loop
040C5C                   1711 
040C5C 47                1712 	ld b,a
040C5D E5                1713 	push hl
040C5E 11 00 00 00       1714 	ld de,$000000
040C62 21 9A 13 04       1715 	ld hl,spr_size
040C66 5E                1716 	ld e,(hl)
040C67 56                1717 	ld d,(hl)
040C68 D5                1718 	push de
040C69 E1                1719 	pop hl
040C6A ED 6C             1720 	mlt hl
040C6C E5                1721 	push hl
040C6D D1                1722 	pop de ; DE = sprsize²
040C6E E1                1723 	pop hl
040C6F                   1724 
040C6F                   1725 spc_loop:
040C6F 19                1726 	add hl,de
040C70 10 FD             1727 	djnz spc_loop
040C72                   1728 
040C72                   1729 spc_end_loop:
040C72                   1730 
040C72                   1731 	; add the offset to the address
040C72 11 7A 14 04       1732 	ld de,sprite_buffer
040C76 19                1733 	add hl,de ; HL = sprite_buffer + ((ypix * sprsize) + xpix)
040C77                   1734 
040C77                   1735 	; set pixel color value
040C77 F1                1736 	pop af
040C78 77                1737 	ld (hl),a
040C79                   1738 
040C79 C9                1739 	ret
040C7A                   1740 
040C7A                   1741 fn_move_up:
040C7A 21 96 13 04       1742 	ld hl,ypix
040C7E 35                1743 	dec (hl)
040C7F C9                1744 	ret
040C80                   1745 
040C80                   1746 fn_move_down:
040C80 21 96 13 04       1747 	ld hl,ypix
040C84 34                1748 	inc (hl)
040C85 C9                1749 	ret
040C86                   1750 
040C86                   1751 fn_move_left:
040C86 21 95 13 04       1752 	ld hl,xpix
040C8A 35                1753 	dec (hl)
040C8B C9                1754 	ret
040C8C                   1755 
040C8C                   1756 fn_move_right:
040C8C 21 95 13 04       1757 	ld hl,xpix
040C90 34                1758 	inc (hl)
040C91 C9                1759 	ret
040C92                   1760 
040C92                   1761 ; draw palette color whit border and selection
040C92                   1762 ; C = color number (0-63)
040C92                   1763 fn_draw_palette_with_border:
040C92 C5                1764 	push bc
040C93                   1765 
040C93                   1766 	; choose palette color
040C93                   1767 	vdu 18
040C93 3E 12             1767 		LD	A, function
040C95 49 D7             1767 		RST.LIS	10h
040C97                   1768 	vdu 0
040C97 3E 00             1768 		LD	A, function
040C99 49 D7             1768 		RST.LIS	10h
040C9B C1                1769 	pop bc
040C9C C5                1770 	push bc
040C9D 79                1771 	ld a,c
040C9E                   1772 	vdu_a
040C9E 49 D7             1772 		RST.LIS	10h
040CA0                   1773 
040CA0                   1774 	; store coordinates for a palette square
040CA0 DD 21 85 13 04    1775 	ld ix,x1
040CA5 E1                1776 	pop hl
040CA6 E5                1777 	push hl
040CA7 26 05             1778 	ld h,5
040CA9 ED 6C             1779 	mlt hl
040CAB E5                1780 	push hl
040CAC DD 75 00          1781 	ld (ix+0),l
040CAF DD 74 01          1782 	ld (ix+1),h
040CB2                   1783 
040CB2 DD 21 87 13 04    1784 	ld ix,y1
040CB7 21 00 00 00       1785 	ld hl,0
040CBB DD 75 00          1786 	ld (ix+0),l
040CBE DD 74 01          1787 	ld (ix+1),h
040CC1                   1788 
040CC1 DD 21 89 13 04    1789 	ld ix,x2
040CC6 E1                1790 	pop hl
040CC7 11 04 00 00       1791 	ld de,4
040CCB 19                1792 	add hl,de
040CCC DD 75 00          1793 	ld (ix+0),l
040CCF DD 74 01          1794 	ld (ix+1),h
040CD2                   1795 
040CD2 DD 21 8B 13 04    1796 	ld ix,y2
040CD7 21 0A 00 00       1797 	ld hl,10
040CDB DD 75 00          1798 	ld (ix+0),l
040CDE DD 74 01          1799 	ld (ix+1),h
040CE1                   1800 
040CE1                   1801 	; draw the palette filled square
040CE1 CD FC 0A 04       1802 	call fn_rectf
040CE5                   1803 
040CE5                   1804 	; choose grey color
040CE5                   1805 	vdu 18
040CE5 3E 12             1805 		LD	A, function
040CE7 49 D7             1805 		RST.LIS	10h
040CE9                   1806 	vdu 0
040CE9 3E 00             1806 		LD	A, function
040CEB 49 D7             1806 		RST.LIS	10h
040CED 3E 07             1807 	ld a,COLOR_GREY
040CEF                   1808 	vdu_a
040CEF 49 D7             1808 		RST.LIS	10h
040CF1                   1809 
040CF1                   1810 	; draw the palette square border
040CF1 CD 3D 0A 04       1811 	call fn_rect
040CF5                   1812 
040CF5                   1813 	; next color ?
040CF5 C1                1814 	pop bc
040CF6                   1815 
040CF6 C9                1816 	ret
040CF7                   1817 
040CF7                   1818 ; draw palette color whitout border and selection
040CF7                   1819 ; C = color number (0-63)
040CF7                   1820 fn_draw_palette_without_border:
040CF7 C5                1821 	push bc
040CF8                   1822 
040CF8                   1823 	; choose palette color
040CF8                   1824 	vdu 18
040CF8 3E 12             1824 		LD	A, function
040CFA 49 D7             1824 		RST.LIS	10h
040CFC                   1825 	vdu 0
040CFC 3E 00             1825 		LD	A, function
040CFE 49 D7             1825 		RST.LIS	10h
040D00 C1                1826 	pop bc
040D01 C5                1827 	push bc
040D02 79                1828 	ld a,c
040D03                   1829 	vdu_a
040D03 49 D7             1829 		RST.LIS	10h
040D05                   1830 
040D05                   1831 	; store coordinates for a palette square
040D05 DD 21 85 13 04    1832 	ld ix,x1
040D0A E1                1833 	pop hl
040D0B E5                1834 	push hl
040D0C 26 05             1835 	ld h,5
040D0E ED 6C             1836 	mlt hl
040D10 E5                1837 	push hl
040D11 DD 75 00          1838 	ld (ix+0),l
040D14 DD 74 01          1839 	ld (ix+1),h
040D17                   1840 
040D17 DD 21 87 13 04    1841 	ld ix,y1
040D1C 21 00 00 00       1842 	ld hl,0
040D20 DD 75 00          1843 	ld (ix+0),l
040D23 DD 74 01          1844 	ld (ix+1),h
040D26                   1845 
040D26 DD 21 89 13 04    1846 	ld ix,x2
040D2B E1                1847 	pop hl
040D2C 11 04 00 00       1848 	ld de,4
040D30 19                1849 	add hl,de
040D31 DD 75 00          1850 	ld (ix+0),l
040D34 DD 74 01          1851 	ld (ix+1),h
040D37                   1852 
040D37 DD 21 8B 13 04    1853 	ld ix,y2
040D3C 21 0A 00 00       1854 	ld hl,10
040D40 DD 75 00          1855 	ld (ix+0),l
040D43 DD 74 01          1856 	ld (ix+1),h
040D46                   1857 
040D46                   1858 	; draw the palette filled square
040D46 CD FC 0A 04       1859 	call fn_rectf
040D4A                   1860 
040D4A C1                1861 	pop bc
040D4B                   1862 
040D4B C9                1863 	ret
040D4C                   1864 
040D4C                   1865 ; get an ascii key value
040D4C                   1866 fn_input_key:
040D4C C5                1867 	push bc
040D4D                   1868 	moscall mos_getkey
040D4D 3E 00             1868 		LD	A, function
040D4F 49 CF             1868 		RST.LIS	08h
040D51 C1                1869 	pop bc
040D52 C9                1870 	ret
040D53                   1871 
040D53                   1872 ; input a text of 8 chars
040D53                   1873 fn_input_text8:
040D53                   1874 	; locate x,y
040D53                   1875 	vdu 31
040D53 3E 1F             1875 		LD	A, function
040D55 49 D7             1875 		RST.LIS	10h
040D57                   1876 	vdu FILENAME_X
040D57 3E 07             1876 		LD	A, function
040D59 49 D7             1876 		RST.LIS	10h
040D5B                   1877 	vdu FILENAME_Y
040D5B 3E 18             1877 		LD	A, function
040D5D 49 D7             1877 		RST.LIS	10h
040D5F                   1878 
040D5F                   1879 	; print text
040D5F 21 07 14 04       1880 	ld hl,filename_label
040D63 01 00 00 00       1881 	ld bc,0
040D67 AF                1882 	xor a
040D68 49 DF             1883 	rst.lis $18
040D6A                   1884 
040D6A                   1885 	; show cursor
040D6A                   1886 	vdu 23
040D6A 3E 17             1886 		LD	A, function
040D6C 49 D7             1886 		RST.LIS	10h
040D6E                   1887 	vdu 1
040D6E 3E 01             1887 		LD	A, function
040D70 49 D7             1887 		RST.LIS	10h
040D72                   1888 	vdu 1
040D72 3E 01             1888 		LD	A, function
040D74 49 D7             1888 		RST.LIS	10h
040D76                   1889 
040D76 0E 00             1890 	ld c,0
040D78                   1891 
040D78                   1892 it8_loop:
040D78                   1893 	; get ascii key
040D78 CD 4C 0D 04       1894 	call fn_input_key
040D7C B7                1895 	or a
040D7D CA 78 0D 04       1896 	jp z,it8_loop
040D81                   1897 
040D81 FE 2E             1898 	cp '.'
040D83 CA CD 0D 04       1899 	jp z,it8l_add_char
040D87                   1900 
040D87 FE 2D             1901 	cp '-'
040D89 CA CD 0D 04       1902 	jp z,it8l_add_char
040D8D                   1903 
040D8D FE 5F             1904 	cp '_'
040D8F CA CD 0D 04       1905 	jp z,it8l_add_char
040D93                   1906 
040D93 FE 7F             1907 	cp 127
040D95 CA 01 0E 04       1908 	jp z,it8l_backspace
040D99                   1909 
040D99 FE 0D             1910 	cp 13
040D9B CA 30 0E 04       1911 	jp z,it8l_return
040D9F                   1912 
040D9F FE 30             1913 	cp '0'
040DA1 DA 78 0D 04       1914 	jp c,it8_loop
040DA5                   1915 
040DA5 16 39             1916 	ld d,'9'
040DA7 14                1917 	inc d
040DA8 BA                1918 	cp d
040DA9 DA CD 0D 04       1919 	jp c,it8l_add_char
040DAD                   1920 
040DAD FE 41             1921 	cp 'A'
040DAF DA 78 0D 04       1922 	jp c,it8_loop
040DB3                   1923 
040DB3 16 5A             1924 	ld d,'Z'
040DB5 14                1925 	inc d
040DB6 BA                1926 	cp d
040DB7 DA CD 0D 04       1927 	jp c,it8l_add_char
040DBB                   1928 
040DBB FE 61             1929 	cp 'a'
040DBD DA 78 0D 04       1930 	jp c,it8_loop
040DC1                   1931 
040DC1 16 7A             1932 	ld d,'z'
040DC3 14                1933 	inc d
040DC4 BA                1934 	cp d
040DC5 DA CD 0D 04       1935 	jp c,it8l_add_char
040DC9                   1936 
040DC9 C3 78 0D 04       1937 	jp it8_loop
040DCD                   1938 
040DCD                   1939 it8l_add_char:
040DCD F5                1940 	push af
040DCE 79                1941 	ld a,c
040DCF FE 0C             1942 	cp 12
040DD1 38 05             1943 	jr c,it8l_poke_char
040DD3 F1                1944 	pop af
040DD4 C3 78 0D 04       1945 	jp it8_loop
040DD8                   1946 
040DD8                   1947 it8l_poke_char:
040DD8 F1                1948 	pop af
040DD9 21 11 14 04       1949 	ld hl,filename
040DDD 06 00             1950 	ld b,0
040DDF 09                1951 	add hl,bc
040DE0 77                1952 	ld (hl),a
040DE1 0C                1953 	inc c
040DE2 F5                1954 	push af
040DE3 C5                1955 	push bc
040DE4                   1956 
040DE4                   1957 	; locate x,y
040DE4                   1958 	vdu 31
040DE4 3E 1F             1958 		LD	A, function
040DE6 49 D7             1958 		RST.LIS	10h
040DE8                   1959 	vdu FILENAME_X+10
040DE8 3E 11             1959 		LD	A, function
040DEA 49 D7             1959 		RST.LIS	10h
040DEC                   1960 	vdu FILENAME_Y
040DEC 3E 18             1960 		LD	A, function
040DEE 49 D7             1960 		RST.LIS	10h
040DF0                   1961 
040DF0                   1962 	; print text
040DF0 21 11 14 04       1963 	ld hl,filename
040DF4 01 00 00 00       1964 	ld bc,0
040DF8 AF                1965 	xor a
040DF9 49 DF             1966 	rst.lis $18
040DFB                   1967 
040DFB C1                1968 	pop bc
040DFC F1                1969 	pop af
040DFD                   1970 
040DFD C3 78 0D 04       1971 	jp it8_loop
040E01                   1972 
040E01                   1973 it8l_backspace:
040E01 79                1974 	ld a,c
040E02 FE 00             1975 	cp 0
040E04 CA 78 0D 04       1976 	jp z,it8_loop
040E08                   1977 
040E08                   1978 	; delete a character of the filename
040E08 21 11 14 04       1979 	ld hl,filename
040E0C 06 00             1980 	ld b,0
040E0E 09                1981 	add hl,bc
040E0F AF                1982 	xor a
040E10 77                1983 	ld (hl),a
040E11 0D                1984 	dec c
040E12 C5                1985 	push bc
040E13                   1986 
040E13                   1987 	; locate x,y
040E13                   1988 	vdu 31
040E13 3E 1F             1988 		LD	A, function
040E15 49 D7             1988 		RST.LIS	10h
040E17 3E 11             1989 	ld a,FILENAME_X+10
040E19 81                1990 	add a,c
040E1A                   1991 	vdu_a
040E1A 49 D7             1991 		RST.LIS	10h
040E1C                   1992 	vdu FILENAME_Y
040E1C 3E 18             1992 		LD	A, function
040E1E 49 D7             1992 		RST.LIS	10h
040E20                   1993 
040E20                   1994 	; print text
040E20 21 29 14 04       1995 	ld hl,spacechar
040E24 01 00 00 00       1996 	ld bc,0
040E28 AF                1997 	xor a
040E29 49 DF             1998 	rst.lis $18
040E2B                   1999 
040E2B C1                2000 	pop bc
040E2C C3 78 0D 04       2001 	jp it8_loop
040E30                   2002 
040E30                   2003 it8l_return:
040E30                   2004 	; locate x,y
040E30                   2005 	vdu 31
040E30 3E 1F             2005 		LD	A, function
040E32 49 D7             2005 		RST.LIS	10h
040E34                   2006 	vdu FILENAME_X
040E34 3E 07             2006 		LD	A, function
040E36 49 D7             2006 		RST.LIS	10h
040E38                   2007 	vdu FILENAME_Y
040E38 3E 18             2007 		LD	A, function
040E3A 49 D7             2007 		RST.LIS	10h
040E3C                   2008 
040E3C                   2009 	; print text
040E3C 21 2B 14 04       2010 	ld hl,void_filename
040E40 01 00 00 00       2011 	ld bc,0
040E44 AF                2012 	xor a
040E45 49 DF             2013 	rst.lis $18
040E47                   2014 
040E47                   2015 	; hide cursor
040E47                   2016 	vdu 23
040E47 3E 17             2016 		LD	A, function
040E49 49 D7             2016 		RST.LIS	10h
040E4B                   2017 	vdu 1
040E4B 3E 01             2017 		LD	A, function
040E4D 49 D7             2017 		RST.LIS	10h
040E4F                   2018 	vdu 0
040E4F 3E 00             2018 		LD	A, function
040E51 49 D7             2018 		RST.LIS	10h
040E53                   2019 
040E53 C9                2020 	ret
040E54                   2021 
040E54                   2022 ; load a sprite, giving its name
040E54                   2023 fn_load_sprite:
040E54                   2024 	; clear filename
040E54 21 11 14 04       2025 	ld hl,filename
040E58 06 0C             2026 	ld b,12
040E5A AF                2027 	xor a
040E5B                   2028 
040E5B                   2029 ls_clear_filename:
040E5B 77                2030 	ld (hl),a
040E5C 23                2031 	inc hl
040E5D 10 FC             2032 	djnz ls_clear_filename
040E5F                   2033 
040E5F                   2034 	; get filename
040E5F CD 53 0D 04       2035 	call fn_input_text8
040E63                   2036 
040E63                   2037 	; set path to home
040E63 21 1E 14 04       2038 	ld hl,sprite_path
040E67                   2039 	moscall mos_cd
040E67 3E 03             2039 		LD	A, function
040E69 49 CF             2039 		RST.LIS	08h
040E6B                   2040 
040E6B                   2041 	; exit on error
040E6B FE 00             2042 	cp 0
040E6D C2 38 0F 04       2043 	jp nz,ls_folder_error
040E71                   2044 
040E71                   2045 	; open the file for read
040E71 21 11 14 04       2046 	ld hl,filename
040E75 0E 01             2047 	ld c,fa_open_existing|fa_read
040E77                   2048 	moscall mos_fopen
040E77 3E 0A             2048 		LD	A, function
040E79 49 CF             2048 		RST.LIS	08h
040E7B                   2049 
040E7B                   2050 	; exit on error
040E7B FE 00             2051 	cp 0
040E7D CA 66 0F 04       2052 	jp z,ls_file_error
040E81                   2053 
040E81                   2054 	; filehandle -> C
040E81 4F                2055 	ld c,a
040E82                   2056 
040E82                   2057 	; get colors count
040E82                   2058 	moscall mos_fgetc
040E82 3E 0C             2058 		LD	A, function
040E84 49 CF             2058 		RST.LIS	08h
040E86 DA 13 0F 04       2059 	jp c,ls_close_error
040E8A                   2060 
040E8A FE 40             2061 	cp MAX_COLORS
040E8C C2 13 0F 04       2062 	jp nz,ls_close_error
040E90                   2063 
040E90                   2064 	; store colors count
040E90 21 70 14 04       2065 	ld hl,colors_count
040E94 77                2066 	ld (hl),a
040E95                   2067 
040E95                   2068 	; get frames count
040E95                   2069 	moscall mos_fgetc
040E95 3E 0C             2069 		LD	A, function
040E97 49 CF             2069 		RST.LIS	08h
040E99 DA 13 0F 04       2070 	jp c,ls_close_error
040E9D                   2071 
040E9D                   2072 	; store frames count
040E9D 21 72 14 04       2073 	ld hl,frames_count
040EA1 77                2074 	ld (hl),a
040EA2 21 71 14 04       2075 	ld hl,current_frame
040EA6 3D                2076 	dec a
040EA7 77                2077 	ld (hl),a
040EA8                   2078 
040EA8                   2079 	; get sprite size
040EA8                   2080 	moscall mos_fgetc
040EA8 3E 0C             2080 		LD	A, function
040EAA 49 CF             2080 		RST.LIS	08h
040EAC DA 13 0F 04       2081 	jp c,ls_close_error
040EB0                   2082 
040EB0                   2083 	; store sprite size
040EB0 21 9A 13 04       2084 	ld hl,spr_size
040EB4 77                2085 	ld (hl),a
040EB5                   2086 
040EB5                   2087 	; set 4x4 pixel width
040EB5 FE 04             2088 	cp SPR44
040EB7 20 09             2089 	jr nz,ls_next1
040EB9                   2090 
040EB9 21 99 13 04       2091 	ld hl,pixel_width
040EBD 06 20             2092 	ld b,SPR44_width
040EBF 70                2093 	ld (hl),b
040EC0 18 21             2094 	jr ls_next4
040EC2                   2095 
040EC2                   2096 ls_next1:
040EC2                   2097 	; set 8x8 pixel width
040EC2 FE 08             2098 	cp SPR88
040EC4 20 09             2099 	jr nz,ls_next2
040EC6                   2100 
040EC6 21 99 13 04       2101 	ld hl,pixel_width
040ECA 06 10             2102 	ld b,SPR88_width
040ECC 70                2103 	ld (hl),b
040ECD 18 14             2104 	jr ls_next4
040ECF                   2105 
040ECF                   2106 ls_next2:
040ECF                   2107 
040ECF                   2108 	; set 16x16 pixel width
040ECF FE 10             2109 	cp SPR1616
040ED1 20 09             2110 	jr nz,ls_next3
040ED3                   2111 
040ED3 21 99 13 04       2112 	ld hl,pixel_width
040ED7 06 08             2113 	ld b,SPR1616_width
040ED9 70                2114 	ld (hl),b
040EDA 18 07             2115 	jr ls_next4
040EDC                   2116 
040EDC                   2117 ls_next3:
040EDC                   2118 
040EDC 21 99 13 04       2119 	ld hl,pixel_width
040EE0 06 04             2120 	ld b,SPR3232_width
040EE2 70                2121 	ld (hl),b
040EE3                   2122 
040EE3                   2123 ls_next4:
040EE3                   2124 
040EE3 6F                2125 	ld l,a
040EE4 67                2126 	ld h,a
040EE5 ED 6C             2127 	mlt hl ; HL = sprite length
040EE7 E5                2128 	push hl
040EE8                   2129 
040EE8                   2130 	; get frames count
040EE8 21 71 14 04       2131 	ld hl,current_frame
040EEC 46                2132 	ld b,(hl)
040EED                   2133 
040EED E1                2134 	pop hl
040EEE                   2135 
040EEE 78                2136 	ld a,b
040EEF FE 00             2137 	cp 0
040EF1 28 07             2138 	jr z,ls_read_data
040EF3                   2139 
040EF3                   2140 	; de = size²
040EF3 11 00 04 00       2141 	ld de,ONE_FRAME_BUFFER_SIZE
040EF7                   2142 ls_add_length:
040EF7 19                2143 	add hl,de
040EF8 10 FD             2144 	djnz ls_add_length
040EFA                   2145 
040EFA                   2146 ls_read_data:
040EFA E5                2147 	push hl
040EFB E5                2148 	push hl
040EFC D1                2149 	pop de
040EFD 7B                2150 	ld a,e
040EFE 21 7A 14 04       2151 	ld hl,sprite_buffer
040F02                   2152 	moscall mos_fread
040F02 3E 1A             2152 		LD	A, function
040F04 49 CF             2152 		RST.LIS	08h
040F06 E1                2153 	pop hl
040F07 7C                2154 	ld a,h
040F08 BA                2155 	cp d
040F09 20 08             2156 	jr nz,ls_close_error
040F0B 7D                2157 	ld a,l
040F0C BB                2158 	cp e
040F0D 20 04             2159 	jr nz,ls_close_error
040F0F C3 40 0F 04       2160 	jp ls_close
040F13                   2161 
040F13                   2162 ls_close_error:
040F13 C5                2163 	push bc
040F14                   2164 
040F14                   2165 	; read error
040F14 CD BB 11 04       2166 	call fn_print_file_error
040F18                   2167 
040F18 C1                2168 	pop bc
040F19                   2169 
040F19                   2170 	; close the file
040F19                   2171 	moscall mos_fclose
040F19 3E 0B             2171 		LD	A, function
040F1B 49 CF             2171 		RST.LIS	08h
040F1D                   2172 
040F1D                   2173 	; set path to home
040F1D 21 26 14 04       2174 	ld hl,back_path
040F21                   2175 	moscall mos_cd
040F21 3E 03             2175 		LD	A, function
040F23 49 CF             2175 		RST.LIS	08h
040F25                   2176 
040F25                   2177 	; exit on error
040F25 FE 00             2178 	cp 0
040F27 C2 38 0F 04       2179 	jp nz,ls_folder_error
040F2B                   2180 
040F2B                   2181 
040F2B                   2182 	; reset current frame and coordinates of the drawing pixel
040F2B 21 95 13 04       2183 	ld hl,xpix
040F2F AF                2184 	xor a
040F30 77                2185 	ld (hl),a
040F31 21 96 13 04       2186 	ld hl,ypix
040F35 77                2187 	ld (hl),a
040F36 18 25             2188 	jr ls_exit
040F38                   2189 
040F38                   2190 ls_folder_error:
040F38                   2191 	; write error
040F38 CD F2 11 04       2192 	call fn_print_folder_error
040F3C C3 5D 0F 04       2193 	jp ls_exit
040F40                   2194 
040F40                   2195 ls_close:
040F40                   2196 	; close the file
040F40                   2197 	moscall mos_fclose
040F40 3E 0B             2197 		LD	A, function
040F42 49 CF             2197 		RST.LIS	08h
040F44                   2198 
040F44                   2199 	; set path to home
040F44 21 26 14 04       2200 	ld hl,back_path
040F48                   2201 	moscall mos_cd
040F48 3E 03             2201 		LD	A, function
040F4A 49 CF             2201 		RST.LIS	08h
040F4C                   2202 
040F4C                   2203 	; exit on error
040F4C FE 00             2204 	cp 0
040F4E C2 38 0F 04       2205 	jp nz,ls_folder_error
040F52                   2206 
040F52                   2207 	; reset current frame and coordinates of the drawing pixel
040F52 21 95 13 04       2208 	ld hl,xpix
040F56 AF                2209 	xor a
040F57 77                2210 	ld (hl),a
040F58 21 96 13 04       2211 	ld hl,ypix
040F5C 77                2212 	ld (hl),a
040F5D                   2213 
040F5D                   2214 ls_exit:
040F5D CD D3 12 04       2215 	call fn_show_spr_descr
040F61 CD 8E 12 04       2216 	call fn_change_frames_count
040F65 C9                2217 	ret
040F66                   2218 
040F66                   2219 ls_file_error:
040F66 CD BB 11 04       2220 	call fn_print_file_error
040F6A                   2221 
040F6A                   2222 	; set path to home
040F6A 21 26 14 04       2223 	ld hl,back_path
040F6E                   2224 	moscall mos_cd
040F6E 3E 03             2224 		LD	A, function
040F70 49 CF             2224 		RST.LIS	08h
040F72                   2225 
040F72                   2226 	; exit on error
040F72 FE 00             2227 	cp 0
040F74 C2 38 0F 04       2228 	jp nz,ls_folder_error
040F78                   2229 
040F78 C9                2230 	ret
040F79                   2231 
040F79                   2232 ; save a sprite, giving its name
040F79                   2233 fn_save_sprite:
040F79                   2234 	; clear filename
040F79 21 11 14 04       2235 	ld hl,filename
040F7D 06 0C             2236 	ld b,12
040F7F AF                2237 	xor a
040F80                   2238 
040F80                   2239 ss_clear_filename:
040F80 77                2240 	ld (hl),a
040F81 23                2241 	inc hl
040F82 10 FC             2242 	djnz ss_clear_filename
040F84                   2243 
040F84                   2244 	; get filename
040F84 CD 53 0D 04       2245 	call fn_input_text8
040F88                   2246 
040F88                   2247 	; set path to sprite path
040F88 21 1E 14 04       2248 	ld hl,sprite_path
040F8C                   2249 	moscall mos_cd
040F8C 3E 03             2249 		LD	A, function
040F8E 49 CF             2249 		RST.LIS	08h
040F90                   2250 
040F90                   2251 	; create it on error
040F90 FE 00             2252 	cp 0
040F92 F5                2253 	push af
040F93 C4 68 13 04       2254 	call nz,fn_create_sprite_folder
040F97 F1                2255 	pop af
040F98 28 08             2256 	jr z,ss_next
040F9A                   2257 
040F9A                   2258 	; set path to sprite path
040F9A 21 1E 14 04       2259 	ld hl,sprite_path
040F9E                   2260 	moscall mos_cd
040F9E 3E 03             2260 		LD	A, function
040FA0 49 CF             2260 		RST.LIS	08h
040FA2                   2261 
040FA2                   2262 ss_next:
040FA2                   2263 
040FA2                   2264 	; exit on error
040FA2 FE 00             2265 	cp 0
040FA4 C2 30 10 04       2266 	jp nz,ss_folder_error
040FA8                   2267 
040FA8                   2268 	; open the file for write
040FA8 21 11 14 04       2269 	ld hl,filename
040FAC 0E 0A             2270 	ld c,fa_create_always|fa_write
040FAE                   2271 	moscall mos_fopen
040FAE 3E 0A             2271 		LD	A, function
040FB0 49 CF             2271 		RST.LIS	08h
040FB2                   2272 
040FB2                   2273 	; exit on error
040FB2 FE 00             2274 	cp 0
040FB4 CA 61 10 04       2275 	jp z,ss_file_error
040FB8                   2276 
040FB8                   2277 	; filehandle -> C
040FB8 4F                2278 	ld c,a
040FB9                   2279 
040FB9                   2280 	; store colors count in the file
040FB9 06 40             2281 	ld b,MAX_COLORS
040FBB                   2282 	moscall mos_fputc
040FBB 3E 0D             2282 		LD	A, function
040FBD 49 CF             2282 		RST.LIS	08h
040FBF                   2283 
040FBF                   2284 	; store frames count in the file
040FBF 21 72 14 04       2285 	ld hl,frames_count
040FC3 46                2286 	ld b,(hl)
040FC4                   2287 	moscall mos_fputc
040FC4 3E 0D             2287 		LD	A, function
040FC6 49 CF             2287 		RST.LIS	08h
040FC8                   2288 
040FC8                   2289 	; store sprite size in the file
040FC8 21 9A 13 04       2290 	ld hl,spr_size
040FCC 46                2291 	ld b,(hl)
040FCD                   2292 	moscall mos_fputc
040FCD 3E 0D             2292 		LD	A, function
040FCF 49 CF             2292 		RST.LIS	08h
040FD1                   2293 
040FD1                   2294 	; de = size²
040FD1 68                2295 	ld l,b
040FD2 60                2296 	ld h,b
040FD3 ED 6C             2297 	mlt hl ; HL = sprite length
040FD5 E5                2298 	push hl
040FD6                   2299 
040FD6                   2300 	; get frames count
040FD6 21 71 14 04       2301 	ld hl,current_frame
040FDA 46                2302 	ld b,(hl)
040FDB                   2303 
040FDB E1                2304 	pop hl
040FDC                   2305 
040FDC 78                2306 	ld a,b
040FDD FE 00             2307 	cp 0
040FDF 28 07             2308 	jr z,ss_write_data
040FE1                   2309 
040FE1 11 00 04 00       2310 	ld de,ONE_FRAME_BUFFER_SIZE
040FE5                   2311 ss_add_length:
040FE5 19                2312 	add hl,de
040FE6 10 FD             2313 	djnz ss_add_length
040FE8                   2314 
040FE8                   2315 ss_write_data:
040FE8 E5                2316 	push hl
040FE9 E5                2317 	push hl
040FEA D1                2318 	pop de
040FEB 21 7A 14 04       2319 	ld hl,sprite_buffer
040FEF                   2320 	moscall mos_fwrite
040FEF 3E 1B             2320 		LD	A, function
040FF1 49 CF             2320 		RST.LIS	08h
040FF3 E1                2321 	pop hl
040FF4 7C                2322 	ld a,h
040FF5 BA                2323 	cp d
040FF6 20 08             2324 	jr nz,ss_close_error
040FF8 7D                2325 	ld a,l
040FF9 BB                2326 	cp e
040FFA 20 04             2327 	jr nz,ss_close_error
040FFC C3 38 10 04       2328 	jp ss_close
041000                   2329 
041000                   2330 ss_close_error:
041000 C5                2331 	push bc
041001                   2332 
041001                   2333 	; write error
041001 CD BB 11 04       2334 	call fn_print_file_error
041005                   2335 
041005 C1                2336 	pop bc
041006                   2337 
041006                   2338 	; close the file
041006                   2339 	moscall mos_fclose
041006 3E 0B             2339 		LD	A, function
041008 49 CF             2339 		RST.LIS	08h
04100A                   2340 
04100A                   2341 	; set path to home
04100A 21 26 14 04       2342 	ld hl,back_path
04100E                   2343 	moscall mos_cd
04100E 3E 03             2343 		LD	A, function
041010 49 CF             2343 		RST.LIS	08h
041012                   2344 
041012                   2345 	; exit on error
041012 FE 00             2346 	cp 0
041014 C2 30 10 04       2347 	jp nz,ss_folder_error
041018                   2348 
041018                   2349 	; reset current frame and coordinates of the drawing pixel
041018 21 72 14 04       2350 	ld hl,frames_count
04101C 7E                2351 	ld a,(hl)
04101D 3D                2352 	dec a
04101E 21 71 14 04       2353 	ld hl,current_frame
041022 77                2354 	ld (hl),a
041023 21 95 13 04       2355 	ld hl,xpix
041027 AF                2356 	xor a
041028 77                2357 	ld (hl),a
041029 21 96 13 04       2358 	ld hl,ypix
04102D 77                2359 	ld (hl),a
04102E 18 30             2360 	jr ss_exit
041030                   2361 
041030                   2362 ss_folder_error:
041030                   2363 	; write error
041030 CD F2 11 04       2364 	call fn_print_folder_error
041034 C3 60 10 04       2365 	jp ss_exit
041038                   2366 
041038                   2367 ss_close:
041038                   2368 	; close the file
041038                   2369 	moscall mos_fclose
041038 3E 0B             2369 		LD	A, function
04103A 49 CF             2369 		RST.LIS	08h
04103C                   2370 
04103C                   2371 	; set path to home
04103C 21 26 14 04       2372 	ld hl,back_path
041040                   2373 	moscall mos_cd
041040 3E 03             2373 		LD	A, function
041042 49 CF             2373 		RST.LIS	08h
041044                   2374 
041044                   2375 	; exit on error
041044 FE 00             2376 	cp 0
041046 C2 30 10 04       2377 	jp nz,ss_folder_error
04104A                   2378 
04104A                   2379 	; reset current frame and coordinates of the drawing pixel
04104A 21 72 14 04       2380 	ld hl,frames_count
04104E 7E                2381 	ld a,(hl)
04104F 3D                2382 	dec a
041050 21 71 14 04       2383 	ld hl,current_frame
041054 77                2384 	ld (hl),a
041055 21 95 13 04       2385 	ld hl,xpix
041059 AF                2386 	xor a
04105A 77                2387 	ld (hl),a
04105B 21 96 13 04       2388 	ld hl,ypix
04105F 77                2389 	ld (hl),a
041060                   2390 
041060                   2391 ss_exit:
041060 C9                2392 	ret
041061                   2393 
041061                   2394 ss_file_error:
041061 CD BB 11 04       2395 	call fn_print_file_error
041065                   2396 
041065                   2397 	; set path to home
041065 21 26 14 04       2398 	ld hl,back_path
041069                   2399 	moscall mos_cd
041069 3E 03             2399 		LD	A, function
04106B 49 CF             2399 		RST.LIS	08h
04106D                   2400 
04106D                   2401 	; exit on error
04106D FE 00             2402 	cp 0
04106F C2 30 10 04       2403 	jp nz,ss_folder_error
041073 C9                2404 	ret
041074                   2405 
041074                   2406 ; export sprite data in assembly language, giving its name
041074                   2407 fn_export_sprite:
041074                   2408 	; clear filename
041074 21 11 14 04       2409 	ld hl,filename
041078 06 0C             2410 	ld b,12
04107A AF                2411 	xor a
04107B                   2412 
04107B                   2413 es_clear_filename:
04107B 77                2414 	ld (hl),a
04107C 23                2415 	inc hl
04107D 10 FC             2416 	djnz es_clear_filename
04107F                   2417 
04107F                   2418 	; get filename
04107F CD 53 0D 04       2419 	call fn_input_text8
041083                   2420 
041083                   2421 	; set path to sprite path
041083 21 1E 14 04       2422 	ld hl,sprite_path
041087                   2423 	moscall mos_cd
041087 3E 03             2423 		LD	A, function
041089 49 CF             2423 		RST.LIS	08h
04108B                   2424 
04108B                   2425 	; create it on error
04108B FE 00             2426 	cp 0
04108D F5                2427 	push af
04108E C4 68 13 04       2428 	call nz,fn_create_sprite_folder
041092 F1                2429 	pop af
041093 28 0E             2430 	jr z,es_next
041095                   2431 
041095                   2432 	; set path to sprite path
041095 21 1E 14 04       2433 	ld hl,sprite_path
041099                   2434 	moscall mos_cd
041099 3E 03             2434 		LD	A, function
04109B 49 CF             2434 		RST.LIS	08h
04109D                   2435 
04109D                   2436 	; exit on error
04109D FE 00             2437 	cp 0
04109F C2 9F 11 04       2438 	jp nz,es_folder_error
0410A3                   2439 
0410A3                   2440 es_next:
0410A3                   2441 	; open the file for write
0410A3 21 11 14 04       2442 	ld hl,filename
0410A7 0E 0A             2443 	ld c,fa_create_always|fa_write
0410A9                   2444 	moscall mos_fopen
0410A9 3E 0A             2444 		LD	A, function
0410AB 49 CF             2444 		RST.LIS	08h
0410AD                   2445 
0410AD                   2446 	; exit on error
0410AD FE 00             2447 	cp 0
0410AF CA A8 11 04       2448 	jp z,es_file_error
0410B3                   2449 
0410B3                   2450 	; filehandle -> C
0410B3 4F                2451 	ld c,a
0410B4                   2452 
0410B4                   2453 
0410B4                   2454 	; L = first frame
0410B4 3E 00             2455 	ld a,0
0410B6 21 7A 14 04       2456 	ld hl,sprite_buffer
0410BA 11 00 00 00       2457 	ld de,$000000
0410BE                   2458 
0410BE                   2459 es_frames_repeat:
0410BE F5                2460 	push af
0410BF E5                2461 	push hl
0410C0                   2462 
0410C0 F5                2463 	push af
0410C1                   2464 
0410C1                   2465 	; start to write...
0410C1 1E 00             2466 	ld e,0 ; rows
0410C3                   2467 
0410C3 06 3B             2468 	ld b,';'
0410C5                   2469 	moscall mos_fputc
0410C5 3E 0D             2469 		LD	A, function
0410C7 49 CF             2469 		RST.LIS	08h
0410C9                   2470 
0410C9 06 20             2471 	ld b,' '
0410CB                   2472 	moscall mos_fputc
0410CB 3E 0D             2472 		LD	A, function
0410CD 49 CF             2472 		RST.LIS	08h
0410CF                   2473 
0410CF 06 46             2474 	ld b,'F'
0410D1                   2475 	moscall mos_fputc
0410D1 3E 0D             2475 		LD	A, function
0410D3 49 CF             2475 		RST.LIS	08h
0410D5                   2476 
0410D5 06 72             2477 	ld b,'r'
0410D7                   2478 	moscall mos_fputc
0410D7 3E 0D             2478 		LD	A, function
0410D9 49 CF             2478 		RST.LIS	08h
0410DB                   2479 
0410DB 06 6D             2480 	ld b,'m'
0410DD                   2481 	moscall mos_fputc
0410DD 3E 0D             2481 		LD	A, function
0410DF 49 CF             2481 		RST.LIS	08h
0410E1                   2482 
0410E1 06 20             2483 	ld b,' '
0410E3                   2484 	moscall mos_fputc
0410E3 3E 0D             2484 		LD	A, function
0410E5 49 CF             2484 		RST.LIS	08h
0410E7                   2485 
0410E7 F1                2486 	pop af
0410E8 C6 30             2487 	add a,'0'
0410EA 47                2488 	ld b,a
0410EB                   2489 	moscall mos_fputc
0410EB 3E 0D             2489 		LD	A, function
0410ED 49 CF             2489 		RST.LIS	08h
0410EF                   2490 
0410EF 06 0D             2491 	ld b,13
0410F1                   2492 	moscall mos_fputc
0410F1 3E 0D             2492 		LD	A, function
0410F3 49 CF             2492 		RST.LIS	08h
0410F5                   2493 
0410F5 06 0A             2494 	ld b,10
0410F7                   2495 	moscall mos_fputc
0410F7 3E 0D             2495 		LD	A, function
0410F9 49 CF             2495 		RST.LIS	08h
0410FB                   2496 
0410FB                   2497 es_repeat:
0410FB                   2498 
0410FB 06 44             2499 	ld b,'D'
0410FD                   2500 	moscall mos_fputc
0410FD 3E 0D             2500 		LD	A, function
0410FF 49 CF             2500 		RST.LIS	08h
041101                   2501 
041101 06 42             2502 	ld b,'B'
041103                   2503 	moscall mos_fputc
041103 3E 0D             2503 		LD	A, function
041105 49 CF             2503 		RST.LIS	08h
041107                   2504 
041107 06 20             2505 	ld b,' '
041109                   2506 	moscall mos_fputc
041109 3E 0D             2506 		LD	A, function
04110B 49 CF             2506 		RST.LIS	08h
04110D                   2507 
04110D 16 00             2508 	ld d,0 ; columns
04110F                   2509 
04110F                   2510 es_repeat_line:
04110F D5                2511 	push de
041110                   2512 
041110 7E                2513 	ld a,(hl)
041111 23                2514 	inc hl
041112                   2515 
041112                   2516 	; convert A to BCD
041112 CD 78 13 04       2517 	call fn_hex2bcd
041116                   2518 
041116                   2519 	; write two numbers (chars)
041116 5F                2520 	ld e,a
041117 E6 F0             2521 	and $f0
041119 0F                2522 	rrca
04111A 0F                2523 	rrca
04111B 0F                2524 	rrca
04111C 0F                2525 	rrca
04111D C6 30             2526 	add '0'
04111F                   2527 
04111F 47                2528 	ld b,a
041120                   2529 	moscall mos_fputc
041120 3E 0D             2529 		LD	A, function
041122 49 CF             2529 		RST.LIS	08h
041124                   2530 
041124 7B                2531 	ld a,e
041125 E6 0F             2532 	and $0f
041127 C6 30             2533 	add '0'
041129                   2534 
041129 47                2535 	ld b,a
04112A                   2536 	moscall mos_fputc
04112A 3E 0D             2536 		LD	A, function
04112C 49 CF             2536 		RST.LIS	08h
04112E                   2537 
04112E D1                2538 	pop de
04112F 14                2539 	inc d
041130 3A 9A 13 04       2540 	ld a,(spr_size)
041134 BA                2541 	cp d
041135 F5                2542 	push af
041136 C4 71 13 04       2543 	call nz,fn_comma
04113A F1                2544 	pop af
04113B C2 0F 11 04       2545 	jp nz,es_repeat_line
04113F                   2546 
04113F 06 0D             2547 	ld b,13 ; CR
041141                   2548 	moscall mos_fputc
041141 3E 0D             2548 		LD	A, function
041143 49 CF             2548 		RST.LIS	08h
041145                   2549 
041145 06 0A             2550 	ld b,10 ; LF
041147                   2551 	moscall mos_fputc
041147 3E 0D             2551 		LD	A, function
041149 49 CF             2551 		RST.LIS	08h
04114B                   2552 
04114B 1C                2553 	inc e
04114C 3A 9A 13 04       2554 	ld a,(spr_size)
041150 BB                2555 	cp e
041151 C2 FB 10 04       2556 	jp nz,es_repeat
041155                   2557 
041155 06 0D             2558 	ld b,13 ; CR
041157                   2559 	moscall mos_fputc
041157 3E 0D             2559 		LD	A, function
041159 49 CF             2559 		RST.LIS	08h
04115B                   2560 
04115B 06 0A             2561 	ld b,10 ; LF
04115D                   2562 	moscall mos_fputc
04115D 3E 0D             2562 		LD	A, function
04115F 49 CF             2562 		RST.LIS	08h
041161                   2563 
041161 E1                2564 	pop hl
041162 D5                2565 	push de
041163 ED 5C             2566 	mlt de
041165 19                2567 	add hl,de
041166 D1                2568 	pop de
041167 F1                2569 	pop af
041168 3C                2570 	inc a
041169 DD 21 72 14 04    2571 	ld ix,frames_count
04116E DD BE 00          2572 	cp (ix+0)
041171 C2 BE 10 04       2573 	jp nz,es_frames_repeat
041175                   2574 
041175                   2575 	; close the file
041175                   2576 	moscall mos_fclose
041175 3E 0B             2576 		LD	A, function
041177 49 CF             2576 		RST.LIS	08h
041179                   2577 
041179                   2578 	; set path to home
041179 21 26 14 04       2579 	ld hl,back_path
04117D                   2580 	moscall mos_cd
04117D 3E 03             2580 		LD	A, function
04117F 49 CF             2580 		RST.LIS	08h
041181                   2581 
041181                   2582 	; exit on error
041181 FE 00             2583 	cp 0
041183 C2 9F 11 04       2584 	jp nz,es_folder_error
041187                   2585 
041187                   2586 	; reset current frame and coordinates of the drawing pixel
041187 21 72 14 04       2587 	ld hl,frames_count
04118B 7E                2588 	ld a,(hl)
04118C 3D                2589 	dec a
04118D 21 71 14 04       2590 	ld hl,current_frame
041191 77                2591 	ld (hl),a
041192 21 95 13 04       2592 	ld hl,xpix
041196 AF                2593 	xor a
041197 77                2594 	ld (hl),a
041198 21 96 13 04       2595 	ld hl,ypix
04119C 77                2596 	ld (hl),a
04119D 18 08             2597 	jr es_exit
04119F                   2598 
04119F                   2599 es_folder_error:
04119F                   2600 	; write error
04119F CD F2 11 04       2601 	call fn_print_folder_error
0411A3 C3 A7 11 04       2602 	jp es_exit
0411A7                   2603 
0411A7                   2604 es_exit:
0411A7 C9                2605 	ret
0411A8                   2606 
0411A8                   2607 es_file_error:
0411A8 CD BB 11 04       2608 	call fn_print_file_error
0411AC                   2609 
0411AC                   2610 	; set path to home
0411AC 21 26 14 04       2611 	ld hl,back_path
0411B0                   2612 	moscall mos_cd
0411B0 3E 03             2612 		LD	A, function
0411B2 49 CF             2612 		RST.LIS	08h
0411B4                   2613 
0411B4                   2614 	; exit on error
0411B4 FE 00             2615 	cp 0
0411B6 C2 9F 11 04       2616 	jp nz,es_folder_error
0411BA C9                2617 	ret
0411BB                   2618 
0411BB                   2619 ; print 'file error'
0411BB                   2620 fn_print_file_error:
0411BB                   2621 	vdu 7
0411BB 3E 07             2621 		LD	A, function
0411BD 49 D7             2621 		RST.LIS	10h
0411BF                   2622 
0411BF                   2623 	; locate x,y
0411BF                   2624 	vdu 31
0411BF 3E 1F             2624 		LD	A, function
0411C1 49 D7             2624 		RST.LIS	10h
0411C3                   2625 	vdu FILENAME_X
0411C3 3E 07             2625 		LD	A, function
0411C5 49 D7             2625 		RST.LIS	10h
0411C7                   2626 	vdu FILENAME_Y
0411C7 3E 18             2626 		LD	A, function
0411C9 49 D7             2626 		RST.LIS	10h
0411CB                   2627 
0411CB                   2628 	; print text
0411CB 21 42 14 04       2629 	ld hl,file_error
0411CF 01 00 00 00       2630 	ld bc,0
0411D3 AF                2631 	xor a
0411D4 49 DF             2632 	rst.lis $18
0411D6                   2633 
0411D6 CD 4C 0D 04       2634 	call fn_input_key
0411DA                   2635 
0411DA                   2636 	; locate x,y
0411DA                   2637 	vdu 31
0411DA 3E 1F             2637 		LD	A, function
0411DC 49 D7             2637 		RST.LIS	10h
0411DE                   2638 	vdu FILENAME_X
0411DE 3E 07             2638 		LD	A, function
0411E0 49 D7             2638 		RST.LIS	10h
0411E2                   2639 	vdu FILENAME_Y
0411E2 3E 18             2639 		LD	A, function
0411E4 49 D7             2639 		RST.LIS	10h
0411E6                   2640 
0411E6                   2641 	; print text
0411E6 21 2B 14 04       2642 	ld hl,void_filename
0411EA 01 00 00 00       2643 	ld bc,0
0411EE AF                2644 	xor a
0411EF 49 DF             2645 	rst.lis $18
0411F1                   2646 
0411F1 C9                2647 	ret
0411F2                   2648 
0411F2                   2649 ; print 'folder error'
0411F2                   2650 fn_print_folder_error:
0411F2                   2651 	vdu 7
0411F2 3E 07             2651 		LD	A, function
0411F4 49 D7             2651 		RST.LIS	10h
0411F6                   2652 
0411F6                   2653 	; locate x,y
0411F6                   2654 	vdu 31
0411F6 3E 1F             2654 		LD	A, function
0411F8 49 D7             2654 		RST.LIS	10h
0411FA                   2655 	vdu FILENAME_X
0411FA 3E 07             2655 		LD	A, function
0411FC 49 D7             2655 		RST.LIS	10h
0411FE                   2656 	vdu FILENAME_Y
0411FE 3E 18             2656 		LD	A, function
041200 49 D7             2656 		RST.LIS	10h
041202                   2657 
041202                   2658 	; print text
041202 21 59 14 04       2659 	ld hl,folder_error
041206 01 00 00 00       2660 	ld bc,0
04120A AF                2661 	xor a
04120B 49 DF             2662 	rst.lis $18
04120D                   2663 
04120D CD 4C 0D 04       2664 	call fn_input_key
041211                   2665 
041211                   2666 	; locate x,y
041211                   2667 	vdu 31
041211 3E 1F             2667 		LD	A, function
041213 49 D7             2667 		RST.LIS	10h
041215                   2668 	vdu FILENAME_X
041215 3E 07             2668 		LD	A, function
041217 49 D7             2668 		RST.LIS	10h
041219                   2669 	vdu FILENAME_Y
041219 3E 18             2669 		LD	A, function
04121B 49 D7             2669 		RST.LIS	10h
04121D                   2670 
04121D                   2671 	; print text
04121D 21 2B 14 04       2672 	ld hl,void_filename
041221 01 00 00 00       2673 	ld bc,0
041225 AF                2674 	xor a
041226 49 DF             2675 	rst.lis $18
041228                   2676 
041228 C9                2677 	ret
041229                   2678 
041229                   2679 ; refresh all the current sprite frame
041229                   2680 fn_refresh_sprite:
041229 06 00             2681 	ld b,0 ; B -> x cordinate
04122B 0E 00             2682 	ld c,0 ; C -> y cordinate
04122D                   2683 
04122D                   2684 rs_loop:
04122D C5                2685 	push bc
04122E                   2686 
04122E 21 95 13 04       2687 	ld hl,xpix
041232 70                2688 	ld (hl),b
041233 21 96 13 04       2689 	ld hl,ypix
041237 71                2690 	ld (hl),c
041238 CD DE 0B 04       2691 	call fn_draw_pixel_without_border
04123C                   2692 
04123C C1                2693 	pop bc
04123D                   2694 
04123D 04                2695 	inc b
04123E 21 9A 13 04       2696 	ld hl,spr_size
041242 7E                2697 	ld a,(hl)
041243 B8                2698 	cp b
041244 28 04             2699 	jr z,rs_next_line
041246 C3 2D 12 04       2700 	jp rs_loop
04124A                   2701 
04124A                   2702 rs_next_line:
04124A 06 00             2703 	ld b,0
04124C 0C                2704 	inc c
04124D 21 9A 13 04       2705 	ld hl,spr_size
041251 7E                2706 	ld a,(hl)
041252 B9                2707 	cp c
041253 28 04             2708 	jr z,rs_end
041255 C3 2D 12 04       2709 	jp rs_loop
041259                   2710 
041259                   2711 rs_end:
041259 AF                2712 	xor a
04125A 21 95 13 04       2713 	ld hl,xpix
04125E 77                2714 	ld (hl),a
04125F 21 96 13 04       2715 	ld hl,ypix
041263 77                2716 	ld (hl),a
041264 CD CA 0B 04       2717 	call fn_draw_pixel_with_border
041268                   2718 
041268 C9                2719 	ret
041269                   2720 
041269                   2721 fn_change_frame:
041269 21 71 14 04       2722 	ld hl,current_frame
04126D 7E                2723 	ld a,(hl)
04126E 3C                2724 	inc a
04126F C6 30             2725 	add a,48
041271 21 73 14 04       2726 	ld hl,current_frame_ascii
041275 77                2727 	ld (hl),a
041276                   2728 
041276                   2729 	; locate 21,3
041276                   2730 	vdu 31
041276 3E 1F             2730 		LD	A, function
041278 49 D7             2730 		RST.LIS	10h
04127A                   2731 	vdu 21
04127A 3E 15             2731 		LD	A, function
04127C 49 D7             2731 		RST.LIS	10h
04127E                   2732 	vdu 3
04127E 3E 03             2732 		LD	A, function
041280 49 D7             2732 		RST.LIS	10h
041282                   2733 
041282                   2734 	; print text
041282 21 73 14 04       2735 	ld hl,current_frame_ascii
041286 01 00 00 00       2736 	ld bc,0
04128A AF                2737 	xor a
04128B 49 DF             2738 	rst.lis $18
04128D                   2739 
04128D C9                2740 	ret
04128E                   2741 
04128E                   2742 fn_change_frames_count:
04128E 21 72 14 04       2743 	ld hl,frames_count
041292 7E                2744 	ld a,(hl)
041293 C6 30             2745 	add a,48
041295 21 75 14 04       2746 	ld hl,frames_count_ascii
041299 77                2747 	ld (hl),a
04129A                   2748 
04129A                   2749 	; locate 23,3
04129A                   2750 	vdu 31
04129A 3E 1F             2750 		LD	A, function
04129C 49 D7             2750 		RST.LIS	10h
04129E                   2751 	vdu 23
04129E 3E 17             2751 		LD	A, function
0412A0 49 D7             2751 		RST.LIS	10h
0412A2                   2752 	vdu 3
0412A2 3E 03             2752 		LD	A, function
0412A4 49 D7             2752 		RST.LIS	10h
0412A6                   2753 
0412A6                   2754 	; print text
0412A6 21 75 14 04       2755 	ld hl,frames_count_ascii
0412AA 01 00 00 00       2756 	ld bc,0
0412AE AF                2757 	xor a
0412AF 49 DF             2758 	rst.lis $18
0412B1                   2759 
0412B1 C9                2760 	ret
0412B2                   2761 
0412B2                   2762 ; slowdown (wait delay)
0412B2                   2763 fn_slowdown:
0412B2 DD 21 77 14 04    2764 	ld ix,keydata
0412B7 DD 7E 02          2765 	ld a,(ix+2)
0412BA E6 02             2766 	and 2
0412BC FE 02             2767 	cp 2 ; shift key to disable delay
0412BE C8                2768 	ret z
0412BF                   2769 
0412BF                   2770 	moscall mos_sysvars
0412BF 3E 08             2770 		LD	A, function
0412C1 49 CF             2770 		RST.LIS	08h
0412C3 DD 4E 00          2771 	ld c,(ix+sysvar_time)
0412C6                   2772 
0412C6                   2773 sd_loop:
0412C6                   2774 	moscall mos_sysvars
0412C6 3E 08             2774 		LD	A, function
0412C8 49 CF             2774 		RST.LIS	08h
0412CA DD 7E 00          2775 	ld a,(ix+sysvar_time)
0412CD 91                2776 	sub c
0412CE FE 14             2777 	cp SLOWDOWN_DELAY
0412D0 20 F4             2778 	jr nz,sd_loop
0412D2 C9                2779 	ret
0412D3                   2780 
0412D3                   2781 fn_show_spr_descr:
0412D3                   2782 	; locate 15,3
0412D3                   2783 	vdu 31
0412D3 3E 1F             2783 		LD	A, function
0412D5 49 D7             2783 		RST.LIS	10h
0412D7                   2784 	vdu 15
0412D7 3E 0F             2784 		LD	A, function
0412D9 49 D7             2784 		RST.LIS	10h
0412DB                   2785 	vdu 3
0412DB 3E 03             2785 		LD	A, function
0412DD 49 D7             2785 		RST.LIS	10h
0412DF                   2786 
0412DF                   2787 	; print text
0412DF 21 E5 13 04       2788 	ld hl,spr_descr
0412E3 01 00 00 00       2789 	ld bc,0
0412E7 AF                2790 	xor a
0412E8 49 DF             2791 	rst.lis $18
0412EA                   2792 
0412EA                   2793 	; locate 15,5
0412EA                   2794 	vdu 31
0412EA 3E 1F             2794 		LD	A, function
0412EC 49 D7             2794 		RST.LIS	10h
0412EE                   2795 	vdu 15
0412EE 3E 0F             2795 		LD	A, function
0412F0 49 D7             2795 		RST.LIS	10h
0412F2                   2796 	vdu 5
0412F2 3E 05             2796 		LD	A, function
0412F4 49 D7             2796 		RST.LIS	10h
0412F6                   2797 
0412F6                   2798 	; check for sprite size...
0412F6 21 9A 13 04       2799 	ld hl,spr_size
0412FA 7E                2800 	ld a,(hl)
0412FB                   2801 
0412FB FE 04             2802 	cp 4
0412FD 20 0C             2803 	jr nz,ssd_8x8
0412FF                   2804 
0412FF                   2805 	; print text 4x4
0412FF 21 EF 13 04       2806 	ld hl,spr_descr1
041303 01 00 00 00       2807 	ld bc,0
041307 AF                2808 	xor a
041308 49 DF             2809 	rst.lis $18
04130A C9                2810 	ret
04130B                   2811 
04130B                   2812 ssd_8x8:
04130B FE 08             2813 	cp 8
04130D 20 0C             2814 	jr nz,ssd_16x16
04130F                   2815 
04130F                   2816 	; print text 8x8
04130F 21 F5 13 04       2817 	ld hl,spr_descr2
041313 01 00 00 00       2818 	ld bc,0
041317 AF                2819 	xor a
041318 49 DF             2820 	rst.lis $18
04131A C9                2821 	ret
04131B                   2822 
04131B                   2823 ssd_16x16:
04131B FE 10             2824 	cp 16
04131D 20 0C             2825 	jr nz,ssd_32x32
04131F                   2826 
04131F                   2827 	; print text 16x16
04131F 21 FB 13 04       2828 	ld hl,spr_descr3
041323 01 00 00 00       2829 	ld bc,0
041327 AF                2830 	xor a
041328 49 DF             2831 	rst.lis $18
04132A C9                2832 	ret
04132B                   2833 
04132B                   2834 ssd_32x32:
04132B                   2835 	; print text 32x32
04132B 21 01 14 04       2836 	ld hl,spr_descr4
04132F 01 00 00 00       2837 	ld bc,0
041333 AF                2838 	xor a
041334 49 DF             2839 	rst.lis $18
041336                   2840 
041336 C9                2841 	ret
041337                   2842 
041337                   2843 ; input: HL = negative key to check
041337                   2844 fn_inkey:
041337                   2845 	moscall mos_getkbmap
041337 3E 1E             2845 		LD	A, function
041339 49 CF             2845 		RST.LIS	08h
04133B 23                2846 	INC	HL
04133C 7D                2847 	LD	A, L
04133D ED 44             2848 	NEG
04133F 4F                2849 	LD	C, A
041340 3E 01             2850 	LD	A, 1
041342 FA 66 13 04       2851 	JP	M,i_false ; < -128 ?
041346                   2852 
041346 21 45 00 04       2853 	LD	HL,BITLOOKUP
04134A 11 00 00 00       2854 	LD	DE,0
04134E 79                2855 	LD	A,C
04134F E6 07             2856 	AND	00000111b
041351 5F                2857 	LD	E,A
041352 19                2858 	ADD	HL,DE
041353 46                2859 	LD	B,(HL)
041354                   2860 
041354 79                2861 	LD	A,C
041355 E6 78             2862 	AND	01111000b
041357 0F                2863 	RRCA
041358 0F                2864 	RRCA
041359 0F                2865 	RRCA
04135A 5F                2866 	LD	E, A
04135B DD 19             2867 	ADD	IX,DE
04135D DD 7E 00          2868 	LD	A,(IX+0)
041360 A0                2869 	AND	B
041361 28 03             2870 	JR Z,i_false
041363 3E 01             2871 	LD A,1
041365 C9                2872 	RET
041366                   2873 i_false:
041366 AF                2874 	XOR A
041367 C9                2875 	RET
041368                   2876 
041368                   2877 fn_create_sprite_folder:
041368 21 1E 14 04       2878 	ld hl,sprite_path
04136C                   2879 	moscall mos_mkdir
04136C 3E 07             2879 		LD	A, function
04136E 49 CF             2879 		RST.LIS	08h
041370 C9                2880 	ret
041371                   2881 
041371                   2882 fn_comma:
041371 06 2C             2883 	ld b,','
041373                   2884 	moscall mos_fputc
041373 3E 0D             2884 		LD	A, function
041375 49 CF             2884 		RST.LIS	08h
041377 C9                2885 	ret
041378                   2886 
041378                   2887 ; Hex to BCD
041378                   2888 ; converts a hex number (eg. $10) to its BCD representation (eg. $16).
041378                   2889 ; Input: a = hex number
041378                   2890 ; Output: a = BCD number
041378                   2891 ; Clobbers: b,c
041378                   2892 fn_hex2bcd:
041378 C5                2893 		push bc
041379 4F                2894 		ld c,a  ; Original (hex) number
04137A 06 08             2895 		ld b,8  ; How many bits
04137C AF                2896 		xor a   ; Output (BCD) number, starts at 0
04137D CB 21             2897 htb:	sla c   ; shift c into carry
04137F 8F                2898 		adc a,a
041380 27                2899 		daa     ; Decimal adjust a, so shift = BCD x2 plus carry
041381 10 FA             2900 		djnz htb  ; Repeat for 8 bits
041383 C1                2901 		pop bc
041384 C9                2902 		ret
041385                   2903 
041385                   2904 ;======================================================================
041385                   2905 
041385                   2906 ; coordinates for rectangles
041385                   2907 x1:
041385 00 00             2908 	dw $0000
041387                   2909 y1:
041387 00 00             2910 	dw $0000
041389                   2911 x2:
041389 00 00             2912 	dw $0000
04138B                   2913 y2:
04138B 00 00             2914 	dw $0000
04138D                   2915 
04138D                   2916 ; coordinates of the edited sprite
04138D                   2917 xs1:
04138D 5F 00             2918 	dw 95
04138F                   2919 ys1:
04138F 37 00             2920 	dw 55
041391                   2921 xs2:
041391 E0 00             2922 	dw 224
041393                   2923 ys2:
041393 B8 00             2924 	dw 184
041395                   2925 
041395                   2926 ; coordinates of active pixels to draw
041395                   2927 xpix:
041395 00                2928 	db 0
041396                   2929 ypix:
041396 00                2930 	db 0
041397                   2931 
041397                   2932 ; memorized coordinates of active pixels to draw
041397                   2933 memxpix:
041397 00                2934 	db 0
041398                   2935 memypix:
041398 00                2936 	db 0
041399                   2937 
041399                   2938 ; width of a pixel in the sprite
041399                   2939 pixel_width:
041399 00                2940 	db 0
04139A                   2941 
04139A                   2942 ; sprite size, in resized pixels
04139A                   2943 spr_size:
04139A 00                2944 	db 0
04139B                   2945 
04139B                   2946 ; pen color (0-63)
04139B                   2947 current_pen:
04139B 00                2948 	db 0
04139C                   2949 
04139C                   2950 ; texts for 1st menu
04139C                   2951 title:
04139C 53 50 52 2D 45 44 2952 	db "SPR-EDIT",0
       49 54 00          
0413A5                   2953 
0413A5                   2954 menu1:
0413A5 46 31 2E 20 34 78 2955 	db "F1. 4x4 Sprite",0
       34 20 53 70 72 69 
       74 65 00          
0413B4                   2956 menu2:
0413B4 46 32 2E 20 38 78 2957 	db "F2. 8x8 Sprite",0
       38 20 53 70 72 69 
       74 65 00          
0413C3                   2958 menu3:
0413C3 46 33 2E 20 31 36 2959 	db "F3. 16x16 Sprite",0
       78 31 36 20 53 70 
       72 69 74 65 00    
0413D4                   2960 menu4:
0413D4 46 34 2E 20 33 32 2961 	db "F4. 32x32 Sprite",0
       78 33 32 20 53 70 
       72 69 74 65 00    
0413E5                   2962 
0413E5                   2963 ; descriptions of sprites
0413E5                   2964 spr_descr:
0413E5 46 72 61 6D 65 3A 2965 	db "Frame:1/1",0
       31 2F 31 00       
0413EF                   2966 spr_descr1:
0413EF 34 78 34 20 20 00 2967 	db "4x4  ",0
0413F5                   2968 spr_descr2:
0413F5 38 78 38 20 20 00 2969 	db "8x8  ",0
0413FB                   2970 spr_descr3:
0413FB 31 36 78 31 36 00 2971 	db "16x16",0
041401                   2972 spr_descr4:
041401 33 32 78 33 32 00 2973 	db "32x32",0
041407                   2974 
041407                   2975 ; label before filename
041407                   2976 filename_label:
041407 46 69 6C 65 6E 61 2977 	db "Filename:",0
       6D 65 3A 00       
041411                   2978 
041411                   2979 ; filename without extension
041411                   2980 filename:
041411 00 00 00 00 00 00 2981 	ds 13,0
       00 00 00 00 00 00 
       00                
04141E                   2982 
04141E                   2983 sprite_path:
04141E 73 70 72 69 74 65 2984 	db "sprites",0
       73 00             
041426                   2985 
041426                   2986 back_path:
041426 2E 2E 00          2987 	db "..",0
041429                   2988 
041429                   2989 ; single space char to print
041429                   2990 spacechar:
041429 20 00             2991 	db " ",0
04142B                   2992 
04142B                   2993 ; spaces to remove filename label
04142B                   2994 void_filename:
04142B 20 20 20 20 20 20 2995 	db "                      ",0
       20 20 20 20 20 20 
       20 20 20 20 20 20 
       20 20 20 20 00    
041442                   2996 
041442                   2997 ; file error message
041442                   2998 file_error:
041442 46 69 6C 65 20 65 2999 	db "File error !          ",0
       72 72 6F 72 20 21 
       20 20 20 20 20 20 
       20 20 20 20 00    
041459                   3000 
041459                   3001 ; folder error message
041459                   3002 folder_error:
041459 46 6F 6C 64 65 72 3003 	db "Folder error !        ",0
       20 65 72 72 6F 72 
       20 21 20 20 20 20 
       20 20 20 20 00    
041470                   3004 
041470                   3005 ; number of colors
041470                   3006 colors_count:
041470 00                3007 	db 0
041471                   3008 
041471                   3009 ; current frame
041471                   3010 current_frame:
041471 00                3011 	db 0
041472                   3012 
041472                   3013 ; frames count
041472                   3014 frames_count:
041472 00                3015 	db 0
041473                   3016 
041473                   3017 current_frame_ascii:
041473 30 00             3018 	db '0',0
041475                   3019 
041475                   3020 frames_count_ascii:
041475 30 00             3021 	db '0',0
041477                   3022 
041477                   3023 ; keycode, keydown & keymods are stored here
041477                   3024 keydata:
041477 00 00 00          3025 	db 0,0,0
04147A                   3026 
04147A                   3027 ; buffer for the current sprite
04147A                   3028 sprite_buffer:
04147A 00 00 00 00 00 00 3029 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
04147A 00 00 00 00 00 00 3029 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
04147A 00 00 00 00 00 00 3029 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
04147A 00 00 00 00 00 00 3029 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
04147A 00 00 00 00 00 00 3029 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
04147A 00 00 00 00 00 00 3029 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00             
04347A                   3030 
04347A                   3031 asm_line:
04347A 44 42 20          3032 	DB "DB "
04347D                   3033 
04347D                   3034 asm_line_length:
04347D 03                3035 	DB 3
04347E                   3036 
04347E                   3037 rgb_palette:
04347E 00 00 00          3038 	db $00,$00,$00
043481 AA 00 00          3039 	db $AA,$00,$00
043484 00 AA 00          3040 	db $00,$AA,$00
043487 AA AA 00          3041 	db $AA,$AA,$00
04348A 00 00 AA          3042 	db $00,$00,$AA
04348D AA 00 AA          3043 	db $AA,$00,$AA
043490 00 AA AA          3044 	db $00,$AA,$AA
043493 AA AA AA          3045 	db $AA,$AA,$AA
043496                   3046 
043496 55 55 55          3047 	db $55,$55,$55
043499 FF 00 00          3048 	db $FF,$00,$00
04349C 00 FF 00          3049 	db $00,$FF,$00
04349F FF FF 00          3050 	db $FF,$FF,$00
0434A2 00 00 FF          3051 	db $00,$00,$FF
0434A5 FF 00 FF          3052 	db $FF,$00,$FF
0434A8 00 FF FF          3053 	db $00,$FF,$FF
0434AB FF FF FF          3054 	db $FF,$FF,$FF
0434AE                   3055 
0434AE 00 00 55          3056 	db $00,$00,$55
0434B1 00 55 00          3057 	db $00,$55,$00
0434B4 00 55 55          3058 	db $00,$55,$55
0434B7 00 55 AA          3059 	db $00,$55,$AA
0434BA 00 55 FF          3060 	db $00,$55,$FF
0434BD 00 AA 55          3061 	db $00,$AA,$55
0434C0 00 AA FF          3062 	db $00,$AA,$FF
0434C3 00 FF 55          3063 	db $00,$FF,$55
0434C6                   3064 
0434C6 00 FF AA          3065 	db $00,$FF,$AA
0434C9 55 00 00          3066 	db $55,$00,$00
0434CC 55 00 55          3067 	db $55,$00,$55
0434CF 55 00 AA          3068 	db $55,$00,$AA
0434D2 55 00 FF          3069 	db $55,$00,$FF
0434D5 55 55 00          3070 	db $55,$55,$00
0434D8 55 55 AA          3071 	db $55,$55,$AA
0434DB 55 55 FF          3072 	db $55,$55,$FF
0434DE                   3073 
0434DE 55 AA 00          3074 	db $55,$AA,$00
0434E1 55 AA 55          3075 	db $55,$AA,$55
0434E4 55 AA AA          3076 	db $55,$AA,$AA
0434E7 55 AA FF          3077 	db $55,$AA,$FF
0434EA 55 FF 00          3078 	db $55,$FF,$00
0434ED 55 FF 55          3079 	db $55,$FF,$55
0434F0 55 FF AA          3080 	db $55,$FF,$AA
0434F3 55 FF FF          3081 	db $55,$FF,$FF
0434F6                   3082 
0434F6 AA 00 55          3083 	db $AA,$00,$55
0434F9 AA 00 FF          3084 	db $AA,$00,$FF
0434FC AA 55 00          3085 	db $AA,$55,$00
0434FF AA 55 55          3086 	db $AA,$55,$55
043502 AA 55 AA          3087 	db $AA,$55,$AA
043505 AA 55 FF          3088 	db $AA,$55,$FF
043508 AA AA 55          3089 	db $AA,$AA,$55
04350B AA AA FF          3090 	db $AA,$AA,$FF
04350E                   3091 
04350E AA FF 00          3092 	db $AA,$FF,$00
043511 AA FF 55          3093 	db $AA,$FF,$55
043514 AA FF AA          3094 	db $AA,$FF,$AA
043517 AA FF FF          3095 	db $AA,$FF,$FF
04351A FF 00 55          3096 	db $FF,$00,$55
04351D FF 00 AA          3097 	db $FF,$00,$AA
043520 FF 55 00          3098 	db $FF,$55,$00
043523 FF 55 55          3099 	db $FF,$55,$55
043526                   3100 
043526 FF 55 AA          3101 	db $FF,$55,$AA
043529 FF 55 FF          3102 	db $FF,$55,$FF
04352C FF AA 00          3103 	db $FF,$AA,$00
04352F FF AA 55          3104 	db $FF,$AA,$55
043532 FF AA AA          3105 	db $FF,$AA,$AA
043535 FF AA FF          3106 	db $FF,$AA,$FF
043538 FF FF 55          3107 	db $FF,$FF,$55
04353B FF FF AA          3108 	db $FF,$FF,$AA
04353E                   3109 
04353E                   3110 ; sprite structure:
04353E                   3111 ; =================
04353E                   3112 ; colors_count  :   byte
04353E                   3113 ; frames count	:	byte
04353E                   3114 ; spr size		:	byte
04353E                   3115 ; data			:   width x height bytes of colors
04353E                   3116 
04353E                   3117 
04353E                   3118 ; TODO:
04353E                   3119 ;---------
04353E                   3120 ; add/remove frames must be done correctly
04353E                   3121 ; read animations with 'p' key
04353E                   3122 ; create a help text file with keyboard shorcuts list
04353E                   3123 ; solve the 'copy frame' bug
04353E                   3124 ; solve the bug of frames in fn_load/save sprite
