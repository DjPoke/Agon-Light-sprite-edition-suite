PC     Output            Line Source
040000                   0001 ; SprEdit.asm
040000                   0002 ;
040000                   0003 ; by B.Vignoli
040000                   0004 ; MIT 2023-2024
040000                   0005 ;
040000                   0006 ; Needs firmware 1.0.4 RC2
040000                   0007 ;
040000                   0008 
040000                   0009 .assume adl=1
040000                   0010 .org $040000
040000                   0011 
040000 C3 45 00 04       0012 	jp start
040004                   0013 
040004                   0014 ; MOS header
040004 FF FF FF FF FF FF 0015 .align 64
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
040040 4D 4F 53 00 01    0016 .db "MOS",0,1
040045                   0017 
040045                   0018 	include "mos_api.inc"
040045                   0001 ;
040045                   0002 ; Title:	AGON MOS - API for user projects
040045                   0003 ; Author:	Dean Belfield
040045                   0004 ; Created:	03/08/2022
040045                   0005 ; Last Updated:	10/08/2023
040045                   0006 ;
040045                   0007 ; Modinfo:
040045                   0008 ; 05/08/2022:	Added mos_feof
040045                   0009 ; 09/08/2022:	Added system variables: cursorX, cursorY
040045                   0010 ; 18/08/2022:	Added system variables: scrchar, scrpixel, audioChannel, audioSuccess, vpd_pflags
040045                   0011 ; 05/09/2022:	Added mos_ren, vdp_pflag_mode
040045                   0012 ; 24/09/2022:	Added mos_getError, mos_mkdir
040045                   0013 ; 13/10/2022:	Added mos_oscli
040045                   0014 ; 23/02/2023:	Added more sysvars, fixed typo in sysvar_audioSuccess, offsets for sysvar_scrCols, sysvar_scrRows
040045                   0015 ; 04/03/2023:	Added sysvar_scrpixelIndex
040045                   0016 ; 08/03/2023:	Renamed sysvar_keycode to sysvar_keyascii, added sysvar_vkeycode
040045                   0017 ; 15/03/2023:	Added mos_copy, mos_getrtc, mos_setrtc, rtc, vdp_pflag_rtc
040045                   0018 ; 21/03/2023:	Added mos_setintvector, sysvars for keyboard status, vdu codes for vdp
040045                   0019 ; 22/03/2023:	The VDP commands are now indexed from 0x80
040045                   0020 ; 29/03/2023:	Added mos_uopen, mos_uclose, mos_ugetc, mos_uputc
040045                   0021 ; 13/04/2023:	Added FatFS file structures (FFOBJID, FIL, DIR, FILINFO)
040045                   0022 ; 15/04/2023:	Added mos_getfil, mos_fread, mos_fwrite and mos_flseek
040045                   0023 ; 19/05/2023:	Added sysvar_scrMode
040045                   0024 ; 05/06/2023:	Added sysvar_rtcEnable
040045                   0025 ; 03/08/2023:	Added mos_setkbvector
040045                   0026 ; 10/08/2023:	Added mos_getkbmap
040045                   0027 
040045                   0028 ; VDP control (VDU 23, 0, n)
040045                   0029 ;
040045                   0030 vdp_gp:			EQU 	80h
040045                   0031 vdp_keycode:		EQU 	81h
040045                   0032 vdp_cursor:		EQU	82h
040045                   0033 vdp_scrchar:		EQU	83h
040045                   0034 vdp_scrpixel:		EQU	84h
040045                   0035 vdp_audio:		EQU	85h
040045                   0036 vdp_mode:		EQU	86h
040045                   0037 vdp_rtc:		EQU	87h
040045                   0038 vdp_keystate:		EQU	88h
040045                   0039 vdp_logicalcoords:	EQU	C0h
040045                   0040 vdp_terminalmode:	EQU	FFh
040045                   0041 
040045                   0042 ; MOS high level functions
040045                   0043 ;
040045                   0044 mos_getkey:		EQU	00h
040045                   0045 mos_load:		EQU	01h
040045                   0046 mos_save:		EQU	02h
040045                   0047 mos_cd:			EQU	03h
040045                   0048 mos_dir:		EQU	04h
040045                   0049 mos_del:		EQU	05h
040045                   0050 mos_ren:		EQU	06h
040045                   0051 mos_mkdir:		EQU	07h
040045                   0052 mos_sysvars:		EQU	08h
040045                   0053 mos_editline:		EQU	09h
040045                   0054 mos_fopen:		EQU	0Ah
040045                   0055 mos_fclose:		EQU	0Bh
040045                   0056 mos_fgetc:		EQU	0Ch
040045                   0057 mos_fputc:		EQU	0Dh
040045                   0058 mos_feof:		EQU	0Eh
040045                   0059 mos_getError:		EQU	0Fh
040045                   0060 mos_oscli:		EQU	10h
040045                   0061 mos_copy:		EQU	11h
040045                   0062 mos_getrtc:		EQU	12h
040045                   0063 mos_setrtc:		EQU	13h
040045                   0064 mos_setintvector:	EQU	14h
040045                   0065 mos_uopen:		EQU	15h
040045                   0066 mos_uclose:		EQU	16h
040045                   0067 mos_ugetc:		EQU	17h
040045                   0068 mos_uputc:		EQU 	18h
040045                   0069 mos_getfil:		EQU	19h
040045                   0070 mos_fread:		EQU	1Ah
040045                   0071 mos_fwrite:		EQU	1Bh
040045                   0072 mos_flseek:		EQU	1Ch
040045                   0073 mos_setkbvector:	EQU	1Dh
040045                   0074 mos_getkbmap:		EQU	1Eh
040045                   0075 
040045                   0076 ; FatFS file access functions
040045                   0077 ;
040045                   0078 ffs_fopen:		EQU	80h
040045                   0079 ffs_fclose:		EQU	81h
040045                   0080 ffs_fread:		EQU	82h
040045                   0081 ffs_fwrite:		EQU	83h
040045                   0082 ffs_flseek:		EQU	84h
040045                   0083 ffs_ftruncate:		EQU	85h
040045                   0084 ffs_fsync:		EQU	86h
040045                   0085 ffs_fforward:		EQU	87h
040045                   0086 ffs_fexpand:		EQU	88h
040045                   0087 ffs_fgets:		EQU	89h
040045                   0088 ffs_fputc:		EQU	8Ah
040045                   0089 ffs_fputs:		EQU	8Bh
040045                   0090 ffs_fprintf:		EQU	8Ch
040045                   0091 ffs_ftell:		EQU	8Dh
040045                   0092 ffs_feof:		EQU	8Eh
040045                   0093 ffs_fsize:		EQU	8Fh
040045                   0094 ffs_ferror:		EQU	90h
040045                   0095 
040045                   0096 ; FatFS directory access functions
040045                   0097 ;
040045                   0098 ffs_dopen:		EQU	91h
040045                   0099 ffs_dclose:		EQU	92h
040045                   0100 ffs_dread:		EQU	93h
040045                   0101 ffs_dfindfirst:		EQU	94h
040045                   0102 ffs_dfindnext:		EQU	95h
040045                   0103 
040045                   0104 ; FatFS file and directory management functions
040045                   0105 ;
040045                   0106 ffs_stat:		EQU	96h
040045                   0107 ffs_unlink:		EQU	97h
040045                   0108 ffs_rename:		EQU	98h
040045                   0109 ffs_chmod:		EQU	99h
040045                   0110 ffs_utime:		EQU	9Ah
040045                   0111 ffs_mkdir:		EQU	9Bh
040045                   0112 ffs_chdir:		EQU	9Ch
040045                   0113 ffs_chdrive:		EQU	9Dh
040045                   0114 ffs_getcwd:		EQU	9Eh
040045                   0115 
040045                   0116 ; FatFS volume management and system configuration functions
040045                   0117 ;
040045                   0118 ffs_mount:		EQU	9Fh
040045                   0119 ffs_mkfs:		EQU	A0h
040045                   0120 ffs_fdisk:		EQU	A1h
040045                   0121 ffs_getfree:		EQU	A2h
040045                   0122 ffs_getlabel:		EQU	A3h
040045                   0123 ffs_setlabel:		EQU	A4h
040045                   0124 ffs_setcp:		EQU	A5h
040045                   0125 
040045                   0126 ; File access modes
040045                   0127 ;
040045                   0128 fa_read:		EQU	01h
040045                   0129 fa_write:		EQU	02h
040045                   0130 fa_open_existing:	EQU	00h
040045                   0131 fa_create_new:		EQU	04h
040045                   0132 fa_create_always:	EQU	08h
040045                   0133 fa_open_always:		EQU	10h
040045                   0134 fa_open_append:		EQU	30h
040045                   0135 
040045                   0136 ; System variable indexes for api_sysvars
040045                   0137 ; Index into _sysvars in globals.asm
040045                   0138 ;
040045                   0139 sysvar_time:		EQU	00h	; 4: Clock timer in centiseconds (incremented by 2 every VBLANK)
040045                   0140 sysvar_vpd_pflags:	EQU	04h	; 1: Flags to indicate completion of VDP commands
040045                   0141 sysvar_keyascii:	EQU	05h	; 1: ASCII keycode, or 0 if no key is pressed
040045                   0142 sysvar_keymods:		EQU	06h	; 1: Keycode modifiers
040045                   0143 sysvar_cursorX:		EQU	07h	; 1: Cursor X position
040045                   0144 sysvar_cursorY:		EQU	08h	; 1: Cursor Y position
040045                   0145 sysvar_scrchar:		EQU	09h	; 1: Character read from screen
040045                   0146 sysvar_scrpixel:	EQU	0Ah	; 3: Pixel data read from screen (R,B,G)
040045                   0147 sysvar_audioChannel:	EQU	0Dh	; 1: Audio channel
040045                   0148 sysvar_audioSuccess:	EQU	0Eh	; 1: Audio channel note queued (0 = no, 1 = yes)
040045                   0149 sysvar_scrWidth:	EQU	0Fh	; 2: Screen width in pixels
040045                   0150 sysvar_scrHeight:	EQU	11h	; 2: Screen height in pixels
040045                   0151 sysvar_scrCols:		EQU	13h	; 1: Screen columns in characters
040045                   0152 sysvar_scrRows:		EQU	14h	; 1: Screen rows in characters
040045                   0153 sysvar_scrColours:	EQU	15h	; 1: Number of colours displayed
040045                   0154 sysvar_scrpixelIndex:	EQU	16h	; 1: Index of pixel data read from screen
040045                   0155 sysvar_vkeycode:	EQU	17h	; 1: Virtual key code from FabGL
040045                   0156 sysvar_vkeydown:	EQU	18h	; 1: Virtual key state from FabGL (0=up, 1=down)
040045                   0157 sysvar_vkeycount:	EQU	19h	; 1: Incremented every time a key packet is received
040045                   0158 sysvar_rtc:		EQU	1Ah	; 6: Real time clock data
040045                   0159 sysvar_spare:		EQU	20h	; 2: Spare, previously used by rtc
040045                   0160 sysvar_keydelay:	EQU	22h	; 2: Keyboard repeat delay
040045                   0161 sysvar_keyrate:		EQU	24h	; 2: Keyboard repeat reat
040045                   0162 sysvar_keyled:		EQU	26h	; 1: Keyboard LED status
040045                   0163 sysvar_scrMode:		EQU	27h	; 1: Screen mode
040045                   0164 sysvar_rtcEnable:	EQU	28h	; 1: RTC enable flag (0: disabled, 1: use ESP32 RTC)
040045                   0165 
040045                   0166 ; Flags for the VPD protocol
040045                   0167 ;
040045                   0168 vdp_pflag_cursor:	EQU	00000001b
040045                   0169 vdp_pflag_scrchar:	EQU	00000010b
040045                   0170 vdp_pflag_point:	EQU	00000100b
040045                   0171 vdp_pflag_audio:	EQU	00001000b
040045                   0172 vdp_pflag_mode:		EQU	00010000b
040045                   0173 vdp_pflag_rtc:		EQU	00100000b
040045                   0174 
040045                   0175 ;======================================================================
040045                   0176 
040045                   0177 	macro moscall arg1
040045                   0178 		ld a,arg1
040045                   0179 		rst.lis $08
040045                   0180     endmacro
040045                   0181 
040045                   0182 	macro vdu arg1
040045                   0183 		ld a,arg1
040045                   0184 		rst.lis $10
040045                   0185     endmacro
040045                   0186 
040045                   0187 	macro vdu_a
040045                   0188 		rst.lis $10
040045                   0189     endmacro
040045                   0190 
040045                   0191 ;======================================================================
040045                   0019 
040045                   0020 MAX_COLORS:		 	equ 64
040045                   0021 COLOR_MIN:	 		equ 0
040045                   0022 COLOR_MAX:	 		equ 63
040045                   0023 
040045                   0024 MAX_FRAMES:			equ 8
040045                   0025 
040045                   0026 COLOR_WHITE:		equ 15
040045                   0027 COLOR_GREY:			equ 7
040045                   0028 COLOR_BLACK:		equ 0
040045                   0029 
040045                   0030 TITLE_X: 	equ 17
040045                   0031 TITLE_Y: 	equ 2
040045                   0032 MENU_X: 	equ 13
040045                   0033 MENU1_Y: 	equ 8
040045                   0034 MENU2_Y: 	equ 12
040045                   0035 MENU3_Y: 	equ 16
040045                   0036 MENU4_Y: 	equ 20
040045                   0037 MENU5_Y: 	equ 24
040045                   0038 FILENAME_X: equ 7
040045                   0039 FILENAME_Y: equ 24
040045                   0040 
040045                   0041 SPR44: 		equ 4
040045                   0042 SPR88: 		equ 8
040045                   0043 SPR1616: 	equ 16
040045                   0044 SPR3232: 	equ 32
040045                   0045 
040045                   0046 SPR44_width: 	equ 32
040045                   0047 SPR88_width: 	equ 16
040045                   0048 SPR1616_width: 	equ 8
040045                   0049 SPR3232_width: 	equ 4
040045                   0050 
040045                   0051 BUFFER_SIZE:			equ 8192 ; 8 frames
040045                   0052 ONE_FRAME_BUFFER_SIZE:	equ 1024
040045                   0053 
040045                   0054 SLOWDOWN_DELAY:	equ 20
040045                   0055 
040045                   0056 VK_ESCAPE: 		equ 125
040045                   0057 VK_UP: 			equ 150
040045                   0058 VK_DOWN: 		equ 152
040045                   0059 VK_LEFT: 		equ 154
040045                   0060 VK_RIGHT: 		equ 156
040045                   0061 VK_SPACE: 		equ 1
040045                   0062 VK_RETURN: 		equ 143
040045                   0063 VK_TAB:			equ 142
040045                   0064 VK_DELETE:		equ 130
040045                   0065 VK_BACKSPACE:	equ 132
040045                   0066 VK_PGUP:		equ 146
040045                   0067 VK_PGDOWN:		equ 148
040045                   0068 VK_1: 			equ 93
040045                   0069 VK_2: 			equ 178
040045                   0070 VK_3: 			equ 77
040045                   0071 VK_4: 			equ 76
040045                   0072 VK_5: 			equ 108
040045                   0073 VK_6: 			equ 0
040045                   0074 VK_7: 			equ 0
040045                   0075 VK_8: 			equ 0
040045                   0076 VK_9: 			equ 0
040045                   0077 VK_0: 			equ 0
040045                   0078 VK_NUMPAD_1: 	equ 0
040045                   0079 VK_NUMPAD_2: 	equ 153
040045                   0080 VK_NUMPAD_3: 	equ 0
040045                   0081 VK_NUMPAD_4: 	equ 155
040045                   0082 VK_NUMPAD_5: 	equ 0
040045                   0083 VK_NUMPAD_6: 	equ 157
040045                   0084 VK_NUMPAD_7: 	equ 0
040045                   0085 VK_NUMPAD_8: 	equ 151
040045                   0086 VK_NUMPAD_9: 	equ 0
040045                   0087 VK_NUMPAD_0: 	equ 0
040045                   0088 VK_a: 			equ 22
040045                   0089 VK_b: 			equ 23
040045                   0090 VK_c:			equ 24
040045                   0091 VK_d: 			equ 25
040045                   0092 VK_e: 			equ 26
040045                   0093 VK_f: 			equ 27
040045                   0094 VK_g: 			equ 28
040045                   0095 VK_h: 			equ 29
040045                   0096 VK_i: 			equ 30
040045                   0097 VK_j: 			equ 31
040045                   0098 VK_k: 			equ 32
040045                   0099 VK_l: 			equ 33
040045                   0100 VK_m: 			equ 34
040045                   0101 VK_n: 			equ 35
040045                   0102 VK_o: 			equ 36
040045                   0103 VK_p: 			equ 37
040045                   0104 VK_q: 			equ 38
040045                   0105 VK_r: 			equ 39
040045                   0106 VK_s: 			equ 40
040045                   0107 VK_t: 			equ 41
040045                   0108 VK_u: 			equ 42
040045                   0109 VK_v: 			equ 43
040045                   0110 VK_w: 			equ 44
040045                   0111 VK_x: 			equ 45
040045                   0112 VK_y: 			equ 46
040045                   0113 VK_z: 			equ 47
040045                   0114 VK_A: 			equ 48
040045                   0115 VK_B: 			equ 49
040045                   0116 VK_C:			equ 50
040045                   0117 VK_D: 			equ 51
040045                   0118 VK_E: 			equ 52
040045                   0119 VK_F: 			equ 53
040045                   0120 VK_G: 			equ 54
040045                   0121 VK_H: 			equ 55
040045                   0122 VK_I: 			equ 56
040045                   0123 VK_J: 			equ 57
040045                   0124 VK_K: 			equ 58
040045                   0125 VK_L: 			equ 59
040045                   0126 VK_M: 			equ 60
040045                   0127 VK_N: 			equ 61
040045                   0128 VK_O: 			equ 62
040045                   0129 VK_P: 			equ 63
040045                   0130 VK_Q: 			equ 64
040045                   0131 VK_R: 			equ 65
040045                   0132 VK_S: 			equ 66
040045                   0133 VK_T: 			equ 67
040045                   0134 VK_U: 			equ 68
040045                   0135 VK_V: 			equ 69
040045                   0136 VK_W: 			equ 70
040045                   0137 VK_X: 			equ 71
040045                   0138 VK_Y: 			equ 72
040045                   0139 VK_Z: 			equ 73
040045                   0140 
040045                   0141 ;======================================================================
040045                   0142 start:
040045 F5                0143 	push af
040046 C5                0144 	push bc
040047 D5                0145 	push de
040048 DD E5             0146 	push ix
04004A FD E5             0147 	push iy
04004C                   0148 
04004C                   0149 	; set mode 8 (320x240x64)
04004C                   0150 	vdu 22
04004C 3E 16             0150 		ld a,arg1
04004E 49 D7             0150 		rst.lis $10
040050                   0151 	vdu 8
040050 3E 08             0151 		ld a,arg1
040052 49 D7             0151 		rst.lis $10
040054                   0152 
040054                   0153 	; set logical coordinates system
040054                   0154 	vdu 23
040054 3E 17             0154 		ld a,arg1
040056 49 D7             0154 		rst.lis $10
040058                   0155 	vdu 0
040058 3E 00             0155 		ld a,arg1
04005A 49 D7             0155 		rst.lis $10
04005C                   0156 	vdu $c0
04005C 3E C0             0156 		ld a,arg1
04005E 49 D7             0156 		rst.lis $10
040060                   0157 	vdu 0
040060 3E 00             0157 		ld a,arg1
040062 49 D7             0157 		rst.lis $10
040064                   0158 
040064                   0159 	; set text colors
040064                   0160 	vdu 17
040064 3E 11             0160 		ld a,arg1
040066 49 D7             0160 		rst.lis $10
040068                   0161 	vdu 128 ; black background
040068 3E 80             0161 		ld a,arg1
04006A 49 D7             0161 		rst.lis $10
04006C                   0162 
04006C                   0163 	vdu 17
04006C 3E 11             0163 		ld a,arg1
04006E 49 D7             0163 		rst.lis $10
040070                   0164 	vdu COLOR_WHITE ; white pen
040070 3E 0F             0164 		ld a,arg1
040072 49 D7             0164 		rst.lis $10
040074                   0165 
040074                   0166 	; set graphics pen
040074                   0167 	vdu 18
040074 3E 12             0167 		ld a,arg1
040076 49 D7             0167 		rst.lis $10
040078                   0168 	vdu 0
040078 3E 00             0168 		ld a,arg1
04007A 49 D7             0168 		rst.lis $10
04007C                   0169 	vdu COLOR_WHITE ; white pen
04007C 3E 0F             0169 		ld a,arg1
04007E 49 D7             0169 		rst.lis $10
040080                   0170 
040080                   0171 	; hide cursor
040080                   0172 	vdu 23
040080 3E 17             0172 		ld a,arg1
040082 49 D7             0172 		rst.lis $10
040084                   0173 	vdu 1
040084 3E 01             0173 		ld a,arg1
040086 49 D7             0173 		rst.lis $10
040088                   0174 	vdu 0
040088 3E 00             0174 		ld a,arg1
04008A 49 D7             0174 		rst.lis $10
04008C                   0175 
04008C                   0176 	; store coordinates
04008C DD 21 2B 10 04    0177 	ld ix,x1
040091 21 00 00 00       0178 	ld hl,0
040095 DD 75 00          0179 	ld (ix+0),l
040098 DD 74 01          0180 	ld (ix+1),h
04009B                   0181 
04009B DD 21 2D 10 04    0182 	ld ix,y1
0400A0 21 00 00 00       0183 	ld hl,0
0400A4 DD 75 00          0184 	ld (ix+0),l
0400A7 DD 74 01          0185 	ld (ix+1),h
0400AA                   0186 
0400AA DD 21 2F 10 04    0187 	ld ix,x2
0400AF 21 3F 01 00       0188 	ld hl,319
0400B3 DD 75 00          0189 	ld (ix+0),l
0400B6 DD 74 01          0190 	ld (ix+1),h
0400B9                   0191 
0400B9 DD 21 31 10 04    0192 	ld ix,y2
0400BE 21 EF 00 00       0193 	ld hl,239
0400C2 DD 75 00          0194 	ld (ix+0),l
0400C5 DD 74 01          0195 	ld (ix+1),h
0400C8                   0196 
0400C8                   0197 	; draw the border rectangle
0400C8 CD AC 08 04       0198 	call fn_rect
0400CC                   0199 
0400CC                   0200 	; locate x,y
0400CC                   0201 	vdu 31
0400CC 3E 1F             0201 		ld a,arg1
0400CE 49 D7             0201 		rst.lis $10
0400D0                   0202 	vdu TITLE_X
0400D0 3E 11             0202 		ld a,arg1
0400D2 49 D7             0202 		rst.lis $10
0400D4                   0203 	vdu TITLE_Y
0400D4 3E 02             0203 		ld a,arg1
0400D6 49 D7             0203 		rst.lis $10
0400D8                   0204 
0400D8                   0205 	; print text
0400D8 21 40 10 04       0206 	ld hl,title
0400DC 01 00 00 00       0207 	ld bc,0
0400E0 AF                0208 	xor a
0400E1 49 DF             0209 	rst.lis $18
0400E3                   0210 
0400E3                   0211 	; locate x,y
0400E3                   0212 	vdu 31
0400E3 3E 1F             0212 		ld a,arg1
0400E5 49 D7             0212 		rst.lis $10
0400E7                   0213 	vdu MENU_X
0400E7 3E 0D             0213 		ld a,arg1
0400E9 49 D7             0213 		rst.lis $10
0400EB                   0214 	vdu MENU1_Y
0400EB 3E 08             0214 		ld a,arg1
0400ED 49 D7             0214 		rst.lis $10
0400EF                   0215 
0400EF                   0216 	; print text
0400EF 21 49 10 04       0217 	ld hl,menu1
0400F3 01 00 00 00       0218 	ld bc,0
0400F7 AF                0219 	xor a
0400F8 49 DF             0220 	rst.lis $18
0400FA                   0221 
0400FA                   0222 	; locate x,y
0400FA                   0223 	vdu 31
0400FA 3E 1F             0223 		ld a,arg1
0400FC 49 D7             0223 		rst.lis $10
0400FE                   0224 	vdu MENU_X
0400FE 3E 0D             0224 		ld a,arg1
040100 49 D7             0224 		rst.lis $10
040102                   0225 	vdu MENU2_Y
040102 3E 0C             0225 		ld a,arg1
040104 49 D7             0225 		rst.lis $10
040106                   0226 
040106                   0227 	; print text
040106 21 57 10 04       0228 	ld hl,menu2
04010A 01 00 00 00       0229 	ld bc,0
04010E AF                0230 	xor a
04010F 49 DF             0231 	rst.lis $18
040111                   0232 
040111                   0233 	; locate x,y
040111                   0234 	vdu 31
040111 3E 1F             0234 		ld a,arg1
040113 49 D7             0234 		rst.lis $10
040115                   0235 	vdu MENU_X
040115 3E 0D             0235 		ld a,arg1
040117 49 D7             0235 		rst.lis $10
040119                   0236 	vdu MENU3_Y
040119 3E 10             0236 		ld a,arg1
04011B 49 D7             0236 		rst.lis $10
04011D                   0237 
04011D                   0238 	; print text
04011D 21 65 10 04       0239 	ld hl,menu3
040121 01 00 00 00       0240 	ld bc,0
040125 AF                0241 	xor a
040126 49 DF             0242 	rst.lis $18
040128                   0243 
040128                   0244 	; locate x,y
040128                   0245 	vdu 31
040128 3E 1F             0245 		ld a,arg1
04012A 49 D7             0245 		rst.lis $10
04012C                   0246 	vdu MENU_X
04012C 3E 0D             0246 		ld a,arg1
04012E 49 D7             0246 		rst.lis $10
040130                   0247 	vdu MENU4_Y
040130 3E 14             0247 		ld a,arg1
040132 49 D7             0247 		rst.lis $10
040134                   0248 
040134                   0249 	; print text
040134 21 75 10 04       0250 	ld hl,menu4
040138 01 00 00 00       0251 	ld bc,0
04013C AF                0252 	xor a
04013D 49 DF             0253 	rst.lis $18
04013F                   0254 
04013F                   0255 	; reset keycode
04013F AF                0256 	xor a
040140                   0257 
040140                   0258 ; menu loop
040140                   0259 menu_loop:
040140                   0260 	; get a keycode
040140 CD BB 0B 04       0261 	call fn_wait_key
040144                   0262 
040144                   0263 	; wait key to be released
040144 F5                0264 	push af
040145 E5                0265 	push hl
040146 CD D9 0B 04       0266 	call fn_wait_key_released
04014A E1                0267 	pop hl
04014B F1                0268 	pop af
04014C                   0269 
04014C FE 7D             0270 	cp VK_ESCAPE
04014E CA 88 08 04       0271 	jp z,exit_program
040152                   0272 
040152 FE 5D             0273 	cp VK_1
040154 20 06             0274 	jr nz,not_menu1
040156                   0275 
040156 3E 04             0276 	ld a,SPR44
040158 16 20             0277 	ld d,SPR44_width
04015A 18 1C             0278 	jr exit_menu_loop
04015C                   0279 
04015C                   0280 not_menu1:
04015C FE B2             0281 	cp VK_2
04015E 20 06             0282 	jr nz,not_menu2
040160                   0283 
040160 3E 08             0284 	ld a,SPR88
040162 16 10             0285 	ld d,SPR88_width
040164 18 12             0286 	jr exit_menu_loop
040166                   0287 
040166                   0288 not_menu2:
040166 FE 4D             0289 	cp VK_3
040168 20 06             0290 	jr nz,not_menu3
04016A                   0291 
04016A 3E 10             0292 	ld a,SPR1616
04016C 16 08             0293 	ld d,SPR1616_width
04016E 18 08             0294 	jr exit_menu_loop
040170                   0295 
040170                   0296 not_menu3:
040170 FE 4C             0297 	cp VK_4
040172 20 CC             0298 	jr nz,menu_loop
040174                   0299 
040174 3E 20             0300 	ld a,SPR3232
040176 16 04             0301 	ld d,SPR3232_width
040178                   0302 
040178                   0303 exit_menu_loop:
040178                   0304 	; store edited sprite size
040178 21 3E 10 04       0305 	ld hl,spr_size
04017C 77                0306 	ld (hl),a
04017D 21 3D 10 04       0307 	ld hl,pixel_width
040181 72                0308 	ld (hl),d
040182                   0309 
040182                   0310 	; clear the text screen
040182                   0311 	vdu 12
040182 3E 0C             0311 		ld a,arg1
040184 49 D7             0311 		rst.lis $10
040186                   0312 
040186                   0313 	; draw the palette
040186 0E 00             0314 	ld c,0
040188                   0315 
040188                   0316 palette_loop:
040188 C5                0317 	push bc
040189                   0318 
040189                   0319 	; choose palette color
040189                   0320 	vdu 18
040189 3E 12             0320 		ld a,arg1
04018B 49 D7             0320 		rst.lis $10
04018D                   0321 	vdu 0
04018D 3E 00             0321 		ld a,arg1
04018F 49 D7             0321 		rst.lis $10
040191 C1                0322 	pop bc
040192 C5                0323 	push bc
040193 79                0324 	ld a,c
040194                   0325 	vdu_a
040194 49 D7             0325 		rst.lis $10
040196                   0326 
040196                   0327 	; store coordinates for a palette square
040196 DD 21 2B 10 04    0328 	ld ix,x1
04019B E1                0329 	pop hl
04019C E5                0330 	push hl
04019D 26 05             0331 	ld h,5
04019F ED 6C             0332 	mlt hl
0401A1 E5                0333 	push hl
0401A2 DD 75 00          0334 	ld (ix+0),l
0401A5 DD 74 01          0335 	ld (ix+1),h
0401A8                   0336 
0401A8 DD 21 2D 10 04    0337 	ld ix,y1
0401AD 21 00 00 00       0338 	ld hl,0
0401B1 DD 75 00          0339 	ld (ix+0),l
0401B4 DD 74 01          0340 	ld (ix+1),h
0401B7                   0341 
0401B7 DD 21 2F 10 04    0342 	ld ix,x2
0401BC E1                0343 	pop hl
0401BD 11 04 00 00       0344 	ld de,4
0401C1 19                0345 	add hl,de
0401C2 DD 75 00          0346 	ld (ix+0),l
0401C5 DD 74 01          0347 	ld (ix+1),h
0401C8                   0348 
0401C8 DD 21 31 10 04    0349 	ld ix,y2
0401CD 21 0A 00 00       0350 	ld hl,10
0401D1 DD 75 00          0351 	ld (ix+0),l
0401D4 DD 74 01          0352 	ld (ix+1),h
0401D7                   0353 
0401D7                   0354 	; draw the palette filled square
0401D7 CD 6B 09 04       0355 	call fn_rectf
0401DB                   0356 
0401DB                   0357 	; next color ?
0401DB C1                0358 	pop bc
0401DC 0C                0359 	inc c
0401DD 79                0360 	ld a,c
0401DE FE 40             0361 	cp MAX_COLORS
0401E0 C2 88 01 04       0362 	jp nz,palette_loop
0401E4                   0363 
0401E4                   0364 	; store coordinates
0401E4 DD 21 2B 10 04    0365 	ld ix,x1
0401E9 21 00 00 00       0366 	ld hl,0
0401ED DD 75 00          0367 	ld (ix+0),l
0401F0 DD 74 01          0368 	ld (ix+1),h
0401F3                   0369 
0401F3 DD 21 2D 10 04    0370 	ld ix,y1
0401F8 21 0B 00 00       0371 	ld hl,11
0401FC DD 75 00          0372 	ld (ix+0),l
0401FF DD 74 01          0373 	ld (ix+1),h
040202                   0374 
040202 DD 21 2F 10 04    0375 	ld ix,x2
040207 21 3F 01 00       0376 	ld hl,319
04020B DD 75 00          0377 	ld (ix+0),l
04020E DD 74 01          0378 	ld (ix+1),h
040211                   0379 
040211 DD 21 31 10 04    0380 	ld ix,y2
040216 21 EF 00 00       0381 	ld hl,239
04021A DD 75 00          0382 	ld (ix+0),l
04021D DD 74 01          0383 	ld (ix+1),h
040220                   0384 
040220                   0385 	; draw the border rectangle
040220 CD AC 08 04       0386 	call fn_rect
040224                   0387 
040224                   0388 	; store edited sprite coordinates
040224 DD 21 33 10 04    0389 	ld ix,xs1
040229 FD 21 2B 10 04    0390 	ld iy,x1
04022E DD 6E 00          0391 	ld l,(ix+0)
040231 DD 66 01          0392 	ld h,(ix+1)
040234 FD 75 00          0393 	ld (iy+0),l
040237 FD 74 01          0394 	ld (iy+1),h
04023A                   0395 
04023A DD 21 35 10 04    0396 	ld ix,ys1
04023F FD 21 2D 10 04    0397 	ld iy,y1
040244 DD 6E 00          0398 	ld l,(ix+0)
040247 DD 66 01          0399 	ld h,(ix+1)
04024A FD 75 00          0400 	ld (iy+0),l
04024D FD 74 01          0401 	ld (iy+1),h
040250                   0402 
040250 DD 21 37 10 04    0403 	ld ix,xs2
040255 FD 21 2F 10 04    0404 	ld iy,x2
04025A DD 6E 00          0405 	ld l,(ix+0)
04025D DD 66 01          0406 	ld h,(ix+1)
040260 FD 75 00          0407 	ld (iy+0),l
040263 FD 74 01          0408 	ld (iy+1),h
040266                   0409 
040266 DD 21 39 10 04    0410 	ld ix,ys2
04026B FD 21 31 10 04    0411 	ld iy,y2
040270 DD 6E 00          0412 	ld l,(ix+0)
040273 DD 66 01          0413 	ld h,(ix+1)
040276 FD 75 00          0414 	ld (iy+0),l
040279 FD 74 01          0415 	ld (iy+1),h
04027C                   0416 
04027C                   0417 	; draw the sprite's border rectangle
04027C CD AC 08 04       0418 	call fn_rect
040280                   0419 
040280                   0420 	; update sprite size descriptions
040280 CD C7 0F 04       0421 	call fn_show_spr_descr
040284                   0422 
040284                   0423 ; initialize sprite vars
040284                   0424 init_sprite_vars:
040284                   0425 	; initialize coordinates before drawing the sprite
040284 DD 21 3B 10 04    0426 	ld ix,xpix
040289 AF                0427 	xor a
04028A DD 77 00          0428 	ld (ix+0),a ; xpix = 0
04028D DD 77 01          0429 	ld (ix+1),a	; ypix = 0
040290 DD 21 3F 10 04    0430 	ld ix,current_pen
040295 3E 0F             0431 	ld a,COLOR_WHITE
040297 DD 77 00          0432 	ld (ix+0),a ; current pen -> white
04029A                   0433 
04029A                   0434 	; set vars
04029A 21 0B 11 04       0435 	ld hl,colors_count
04029E 3E 40             0436 	ld a,MAX_COLORS
0402A0 77                0437 	ld (hl),a
0402A1 21 0C 11 04       0438 	ld hl,current_frame
0402A5 AF                0439 	xor a
0402A6 77                0440 	ld (hl),a
0402A7 3C                0441 	inc a
0402A8 21 0D 11 04       0442 	ld hl,frames_count
0402AC 77                0443 	ld (hl),a
0402AD                   0444 
0402AD                   0445 	; fill buffers with zeros
0402AD 01 00 20 00       0446 	ld bc,BUFFER_SIZE
0402B1 21 15 11 04       0447 	ld hl,sprite_buffer
0402B5                   0448 
0402B5                   0449 isv_fill_loop:
0402B5 AF                0450 	xor a
0402B6 77                0451 	ld (hl),a
0402B7 0B                0452 	dec bc
0402B8 23                0453 	inc hl
0402B9 78                0454 	ld a,b
0402BA B1                0455 	or c
0402BB FE 00             0456 	cp 0
0402BD 20 F6             0457 	jr nz,isv_fill_loop
0402BF                   0458 
0402BF                   0459 ; draw the pixel with a border
0402BF CD 39 0A 04       0460 	call fn_draw_pixel_with_border
0402C3                   0461 
0402C3 CD D9 0B 04       0462 	call fn_wait_key_released
0402C7                   0463 
0402C7                   0464 ; draw sprite loop
0402C7                   0465 draw_sprite_loop:
0402C7                   0466 	; get a keycode
0402C7 CD BB 0B 04       0467 	call fn_wait_key
0402CB                   0468 
0402CB                   0469 	; if not keydown, loop
0402CB 57                0470 	ld d,a
0402CC 7D                0471 	ld a,l
0402CD E6 01             0472 	and 1
0402CF FE 00             0473 	cp 0
0402D1 7A                0474 	ld a,d
0402D2 CA C7 02 04       0475 	jp z,draw_sprite_loop
0402D6                   0476 
0402D6 FE 00             0477 	cp 0 ; keycode = 0 ? loop
0402D8 CA C7 02 04       0478 	jp z,draw_sprite_loop
0402DC                   0479 
0402DC FE 01             0480 	cp VK_SPACE ; on space key....
0402DE CA 76 03 04       0481 	jp z,dsl_set_pen
0402E2                   0482 
0402E2 FE 82             0483 	cp VK_DELETE ; on delete key....
0402E4 CA A4 03 04       0484 	jp z,dsl_reset_pen
0402E8                   0485 
0402E8 FE 96             0486 	cp VK_UP ; on up arrow...
0402EA CA BB 03 04       0487 	jp z,dsl_up
0402EE                   0488 
0402EE FE 98             0489 	cp VK_DOWN ; on down arrow...
0402F0 CA FA 03 04       0490 	jp z,dsl_down
0402F4                   0491 
0402F4 FE 9A             0492 	cp VK_LEFT ; on left arrow...
0402F6 CA 3E 04 04       0493 	jp z,dsl_left
0402FA                   0494 
0402FA FE 9C             0495 	cp VK_RIGHT ; on right arrow...
0402FC CA 7D 04 04       0496 	jp z,dsl_right
040300                   0497 
040300 FE 8E             0498 	cp VK_TAB ; on tab key...
040302 CA 7F 07 04       0499 	jp z,dsl_palette_tool
040306                   0500 
040306 FE 23             0501 	cp VK_n ; on n key...
040308 CA F1 04 04       0502 	jp z,dsl_add_frame
04030C                   0503 
04030C FE 3D             0504 	cp VK_N ; on N key...
04030E CA F1 04 04       0505 	jp z,dsl_add_frame
040312                   0506 
040312 FE 18             0507 	cp VK_c ; on c key...
040314 CA 86 05 04       0508 	jp z,dsl_add_and_copy_frame
040318                   0509 
040318 FE 32             0510 	cp VK_C ; on C key...
04031A CA 86 05 04       0511 	jp z,dsl_add_and_copy_frame
04031E                   0512 
04031E FE 84             0513 	cp VK_BACKSPACE ; on backspace key...
040320 CA EB 05 04       0514 	jp z,dsl_delete_frame
040324                   0515 
040324 FE 92             0516 	cp VK_PGUP ; on pageup key...
040326 CA E0 06 04       0517 	jp z,dsl_next_frame
04032A                   0518 
04032A FE 94             0519 	cp VK_PGDOWN ; on pagedown key...
04032C CA C3 06 04       0520 	jp z,dsl_previous_frame
040330                   0521 
040330 FE 21             0522 	cp VK_l ; on l key...
040332 CA C1 04 04       0523 	jp z,dsl_load_sprite
040336                   0524 
040336 FE 3B             0525 	cp VK_L ; on L key...
040338 CA C1 04 04       0526 	jp z,dsl_load_sprite
04033C                   0527 
04033C FE 28             0528 	cp VK_s ; on s key...
04033E CA DD 04 04       0529 	jp z,dsl_save_sprite
040342                   0530 
040342 FE 42             0531 	cp VK_S ; on S key...
040344 CA DD 04 04       0532 	jp z,dsl_save_sprite
040348                   0533 
040348 FE 27             0534 	cp VK_r ; on r key...
04034A CA 04 07 04       0535 	jp z,dsl_rotate_frame
04034E                   0536 
04034E FE 41             0537 	cp VK_R ; on R key...
040350 CA 04 07 04       0538 	jp z,dsl_rotate_frame
040354                   0539 
040354 FE 1B             0540 	cp VK_f ; on f key...
040356 CA 10 07 04       0541 	jp z,dsl_flip_frame
04035A                   0542 
04035A FE 35             0543 	cp VK_F ; on F key...
04035C CA 10 07 04       0544 	jp z,dsl_flip_frame
040360                   0545 
040360 FE 22             0546 	cp VK_m ; on m key...
040362 CA 73 07 04       0547 	jp z,dsl_mirror_frame
040366                   0548 
040366 FE 3C             0549 	cp VK_M ; on M key...
040368 CA 73 07 04       0550 	jp z,dsl_mirror_frame
04036C                   0551 
04036C FE 7D             0552 	cp VK_ESCAPE ; on escape key...
04036E CA 88 08 04       0553 	jp z,exit_program
040372                   0554 
040372 C3 C7 02 04       0555 	jp draw_sprite_loop
040376                   0556 
040376                   0557 ; set the pen of the current pixel
040376                   0558 dsl_set_pen:
040376 CD 63 0A 04       0559 	call fn_get_pixel_color
04037A 21 3F 10 04       0560 	ld hl,current_pen
04037E BE                0561 	cp (hl)
04037F CA C7 02 04       0562 	jp z,draw_sprite_loop
040383 7E                0563 	ld a,(hl)
040384 CD A5 0A 04       0564 	call fn_set_pixel_color
040388 CD 39 0A 04       0565 	call fn_draw_pixel_with_border
04038C C3 C7 02 04       0566 	jp draw_sprite_loop
040390                   0567 
040390                   0568 ; set the pen of the current pixel
040390                   0569 dsl_set_pen2:
040390 CD 63 0A 04       0570 	call fn_get_pixel_color
040394 21 3F 10 04       0571 	ld hl,current_pen
040398 BE                0572 	cp (hl)
040399 C8                0573 	ret z
04039A 7E                0574 	ld a,(hl)
04039B CD A5 0A 04       0575 	call fn_set_pixel_color
04039F CD 39 0A 04       0576 	call fn_draw_pixel_with_border
0403A3 C9                0577 	ret
0403A4                   0578 
0403A4                   0579 ; reset the pen of the current pixel
0403A4                   0580 dsl_reset_pen:
0403A4 CD 63 0A 04       0581 	call fn_get_pixel_color
0403A8 FE 00             0582 	cp 0
0403AA CA C7 02 04       0583 	jp z,draw_sprite_loop
0403AE AF                0584 	xor a
0403AF CD A5 0A 04       0585 	call fn_set_pixel_color
0403B3 CD 39 0A 04       0586 	call fn_draw_pixel_with_border
0403B7 C3 C7 02 04       0587 	jp draw_sprite_loop
0403BB                   0588 
0403BB                   0589 ; move pixel up
0403BB                   0590 dsl_up:
0403BB 21 3C 10 04       0591 	ld hl,ypix
0403BF 7E                0592 	ld a,(hl)
0403C0 FE 00             0593 	cp 0
0403C2 CA C7 02 04       0594 	jp z,draw_sprite_loop
0403C6                   0595 
0403C6                   0596 	; controlkey down ? draw
0403C6 FD 21 12 11 04    0597 	ld iy,keydata
0403CB FD 7E 02          0598 	ld a,(iy+2)
0403CE E6 01             0599 	and 1
0403D0 FE 01             0600 	cp 1
0403D2 CC 90 03 04       0601 	call z,dsl_set_pen2
0403D6                   0602 
0403D6 CD 4D 0A 04       0603 	call fn_draw_pixel_without_border
0403DA CD E9 0A 04       0604 	call fn_move_up
0403DE CD 39 0A 04       0605 	call fn_draw_pixel_with_border
0403E2                   0606 
0403E2                   0607 	; controlkey down ? draw
0403E2 FD 21 12 11 04    0608 	ld iy,keydata
0403E7 FD 7E 02          0609 	ld a,(iy+2)
0403EA E6 01             0610 	and 1
0403EC FE 01             0611 	cp 1
0403EE CC 90 03 04       0612 	call z,dsl_set_pen2
0403F2                   0613 
0403F2 CD A6 0F 04       0614 	call fn_slowdown
0403F6 C3 C7 02 04       0615 	jp draw_sprite_loop
0403FA                   0616 
0403FA                   0617 ; move pixel down
0403FA                   0618 dsl_down:
0403FA 21 3E 10 04       0619 	ld hl,spr_size
0403FE 56                0620 	ld d,(hl)
0403FF 15                0621 	dec d
040400                   0622 
040400 21 3C 10 04       0623 	ld hl,ypix
040404 7E                0624 	ld a,(hl)
040405 BA                0625 	cp d
040406 CA C7 02 04       0626 	jp z,draw_sprite_loop
04040A                   0627 
04040A                   0628 	; controlkey down ? draw
04040A FD 21 12 11 04    0629 	ld iy,keydata
04040F FD 7E 02          0630 	ld a,(iy+2)
040412 E6 01             0631 	and 1
040414 FE 01             0632 	cp 1
040416 CC 90 03 04       0633 	call z,dsl_set_pen2
04041A                   0634 
04041A CD 4D 0A 04       0635 	call fn_draw_pixel_without_border
04041E CD EF 0A 04       0636 	call fn_move_down
040422 CD 39 0A 04       0637 	call fn_draw_pixel_with_border
040426                   0638 
040426                   0639 	; controlkey down ? draw
040426 FD 21 12 11 04    0640 	ld iy,keydata
04042B FD 7E 02          0641 	ld a,(iy+2)
04042E E6 01             0642 	and 1
040430 FE 01             0643 	cp 1
040432 CC 90 03 04       0644 	call z,dsl_set_pen2
040436                   0645 
040436 CD A6 0F 04       0646 	call fn_slowdown
04043A C3 C7 02 04       0647 	jp draw_sprite_loop
04043E                   0648 
04043E                   0649 ; move pixel left
04043E                   0650 dsl_left:
04043E 21 3B 10 04       0651 	ld hl,xpix
040442 7E                0652 	ld a,(hl)
040443 FE 00             0653 	cp 0
040445 CA C7 02 04       0654 	jp z,draw_sprite_loop
040449                   0655 
040449                   0656 	; controlkey down ? draw
040449 FD 21 12 11 04    0657 	ld iy,keydata
04044E FD 7E 02          0658 	ld a,(iy+2)
040451 E6 01             0659 	and 1
040453 FE 01             0660 	cp 1
040455 CC 90 03 04       0661 	call z,dsl_set_pen2
040459                   0662 
040459 CD 4D 0A 04       0663 	call fn_draw_pixel_without_border
04045D CD F5 0A 04       0664 	call fn_move_left
040461 CD 39 0A 04       0665 	call fn_draw_pixel_with_border
040465                   0666 
040465                   0667 	; controlkey down ? draw
040465 FD 21 12 11 04    0668 	ld iy,keydata
04046A FD 7E 02          0669 	ld a,(iy+2)
04046D E6 01             0670 	and 1
04046F FE 01             0671 	cp 1
040471 CC 90 03 04       0672 	call z,dsl_set_pen2
040475                   0673 
040475 CD A6 0F 04       0674 	call fn_slowdown
040479 C3 C7 02 04       0675 	jp draw_sprite_loop
04047D                   0676 
04047D                   0677 ; move pixel right
04047D                   0678 dsl_right:
04047D 21 3E 10 04       0679 	ld hl,spr_size
040481 56                0680 	ld d,(hl)
040482 15                0681 	dec d
040483                   0682 
040483 21 3B 10 04       0683 	ld hl,xpix
040487 7E                0684 	ld a,(hl)
040488 BA                0685 	cp d
040489 CA C7 02 04       0686 	jp z,draw_sprite_loop
04048D                   0687 
04048D                   0688 	; controlkey down ? draw
04048D FD 21 12 11 04    0689 	ld iy,keydata
040492 FD 7E 02          0690 	ld a,(iy+2)
040495 E6 01             0691 	and 1
040497 FE 01             0692 	cp 1
040499 CC 90 03 04       0693 	call z,dsl_set_pen2
04049D                   0694 
04049D CD 4D 0A 04       0695 	call fn_draw_pixel_without_border
0404A1 CD FB 0A 04       0696 	call fn_move_right
0404A5 CD 39 0A 04       0697 	call fn_draw_pixel_with_border
0404A9                   0698 
0404A9                   0699 	; controlkey down ? draw
0404A9 FD 21 12 11 04    0700 	ld iy,keydata
0404AE FD 7E 02          0701 	ld a,(iy+2)
0404B1 E6 01             0702 	and 1
0404B3 FE 01             0703 	cp 1
0404B5 CC 90 03 04       0704 	call z,dsl_set_pen2
0404B9                   0705 
0404B9 CD A6 0F 04       0706 	call fn_slowdown
0404BD C3 C7 02 04       0707 	jp draw_sprite_loop
0404C1                   0708 
0404C1                   0709 ; load a sprite
0404C1                   0710 dsl_load_sprite:
0404C1 CD D9 0B 04       0711 	call fn_wait_key_released
0404C5 CD 4D 0A 04       0712 	call fn_draw_pixel_without_border
0404C9 CD ED 0C 04       0713 	call fn_load_sprite
0404CD CD 1D 0F 04       0714 	call fn_refresh_sprite
0404D1 CD 39 0A 04       0715 	call fn_draw_pixel_with_border
0404D5 CD 5D 0F 04       0716 	call fn_change_frame
0404D9 C3 C7 02 04       0717 	jp draw_sprite_loop
0404DD                   0718 
0404DD                   0719 ; save a sprite
0404DD                   0720 dsl_save_sprite:
0404DD CD D9 0B 04       0721 	call fn_wait_key_released
0404E1 CD 4D 0A 04       0722 	call fn_draw_pixel_without_border
0404E5 CD E8 0D 04       0723 	call fn_save_sprite
0404E9 CD 1D 0F 04       0724 	call fn_refresh_sprite
0404ED C3 C7 02 04       0725 	jp draw_sprite_loop
0404F1                   0726 
0404F1                   0727 ; add a frame to the animation
0404F1                   0728 dsl_add_frame:
0404F1 CD D9 0B 04       0729 	call fn_wait_key_released
0404F5                   0730 
0404F5                   0731 	; frames limit reached ? exit
0404F5 21 0D 11 04       0732 	ld hl,frames_count
0404F9 7E                0733 	ld a,(hl)
0404FA FE 08             0734 	cp MAX_FRAMES
0404FC CA C7 02 04       0735 	jp z,draw_sprite_loop
040500                   0736 
040500                   0737 	; get the number of frames to copy
040500 21 0D 11 04       0738 	ld hl,frames_count
040504 7E                0739 	ld a,(hl)
040505 21 0C 11 04       0740 	ld hl,current_frame
040509 46                0741 	ld b,(hl)
04050A 90                0742 	sub b
04050B 3D                0743 	dec a
04050C                   0744 
04050C                   0745 	; get sprsize² (length of a sprite, in bytes)
04050C 21 3E 10 04       0746 	ld hl,spr_size
040510 11 00 00 00       0747 	ld de,$000000
040514 5E                0748 	ld e,(hl)
040515 56                0749 	ld d,(hl)
040516 ED 5C             0750 	mlt de ; DE = sprsize²
040518                   0751 
040518                   0752 	; prepare for the case we goto af_zap...
040518 21 15 11 04       0753 	ld hl,sprite_buffer
04051C                   0754 
04051C F5                0755 	push af
04051D E5                0756 	push hl
04051E 21 0C 11 04       0757 	ld hl,current_frame
040522 7E                0758 	ld a,(hl)
040523 3C                0759 	inc a
040524 47                0760 	ld b,a
040525 E1                0761 	pop hl
040526 F1                0762 	pop af
040527                   0763 
040527                   0764 af_loop0:
040527 19                0765 	add hl,de ; for if current frame = 0 (prepare to zap!)
040528 10 FD             0766 	djnz af_loop0
04052A                   0767 
04052A E5                0768 	push hl ; store HL = sprite buffer + sprsize²
04052B FE 00             0769 	cp 0
04052D CA 55 05 04       0770 	jp z,af_zap ; zap the copy, if the 'current frame' is at the last frame
040531 E1                0771 	pop hl ; HL unused in this case
040532                   0772 
040532 21 00 00 00       0773 	ld hl,$000000 ; HL is 0 to store the result
040536 47                0774 	ld b,a ; B = frames to copy
040537                   0775 
040537                   0776 ; multiply number of frames to copy by sprsize²
040537                   0777 af_loop1:
040537 19                0778 	add hl,de ; HL = length (in bytes) to copy (a few frames)
040538 10 FD             0779 	djnz af_loop1
04053A                   0780 
04053A E5                0781 	push hl
04053B C1                0782 	pop bc ; BC = HL = length (in bytes) to copy (a few frames)
04053C                   0783 
04053C 21 0C 11 04       0784 	ld hl,current_frame
040540 7E                0785 	ld a,(hl)
040541 3C                0786 	inc a
040542 21 15 11 04       0787 	ld hl,sprite_buffer
040546                   0788 
040546 C5                0789 	push bc
040547 47                0790 	ld b,a
040548                   0791 
040548                   0792 af_loop2:
040548 19                0793 	add hl,de ; HL = sprite buffer + length to copy
040549 10 FD             0794 	djnz af_loop2
04054B                   0795 
04054B C1                0796 	pop bc
04054C                   0797 
04054C E5                0798 	push hl ; HL = sprite_buffer + (current frame * sprsize²)
04054D                   0799 
04054D 09                0800 	add hl,bc
04054E 2B                0801 	dec hl ; HL = end address to copy to end target address
04054F                   0802 
04054F E5                0803 	push hl
040550 19                0804 	add hl,de
040551 EB                0805 	ex de,hl ; DE = end target address
040552 E1                0806 	pop hl
040553                   0807 
040553 ED B8             0808 	lddr
040555                   0809 
040555                   0810 af_zap:
040555                   0811 	; multiply number of frames to copy by sprsize²
040555 21 3E 10 04       0812 	ld hl,spr_size
040559 01 00 00 00       0813 	ld bc,$000000
04055D 4E                0814 	ld c,(hl)
04055E 46                0815 	ld b,(hl)
04055F ED 4C             0816 	mlt bc ; BC = sprsize²
040561                   0817 
040561 E1                0818 	pop hl ; HL = sprite_buffer + (current frame * sprsize²)
040562                   0819 
040562                   0820 ; fill frame with 0 color
040562                   0821 af_loop3:
040562 AF                0822 	xor a
040563 77                0823 	ld (hl),a
040564 23                0824 	inc hl
040565 0B                0825 	dec bc
040566 78                0826 	ld a,b
040567 B1                0827 	or c
040568 FE 00             0828 	cp 0
04056A 20 F6             0829 	jr nz,af_loop3
04056C                   0830 
04056C                   0831 	; increment the frames count and the current frame values
04056C 21 0D 11 04       0832 	ld hl,frames_count
040570 34                0833 	inc (hl)
040571 21 0C 11 04       0834 	ld hl,current_frame
040575 34                0835 	inc (hl)
040576                   0836 
040576 CD 5D 0F 04       0837 	call fn_change_frame
04057A CD 82 0F 04       0838 	call fn_change_frames_count
04057E CD 1D 0F 04       0839 	call fn_refresh_sprite
040582 C3 C7 02 04       0840 	jp draw_sprite_loop
040586                   0841 
040586                   0842 ; add a copy of the current frame to the animation
040586                   0843 dsl_add_and_copy_frame: ; TODO! debug me!
040586 CD D9 0B 04       0844 	call fn_wait_key_released
04058A                   0845 
04058A                   0846 	; frames limit reached ? exit
04058A 21 0D 11 04       0847 	ld hl,frames_count
04058E 7E                0848 	ld a,(hl)
04058F FE 08             0849 	cp MAX_FRAMES
040591 CA C7 02 04       0850 	jp z,draw_sprite_loop
040595                   0851 
040595                   0852 	; get the number of frames to copy
040595 21 0D 11 04       0853 	ld hl,frames_count
040599 7E                0854 	ld a,(hl)
04059A 21 0C 11 04       0855 	ld hl,current_frame
04059E 46                0856 	ld b,(hl)
04059F 90                0857 	sub b
0405A0                   0858 
0405A0                   0859 	; get sprsize² (length of a sprite, in bytes)
0405A0 21 3E 10 04       0860 	ld hl,spr_size
0405A4 11 00 00 00       0861 	ld de,$000000
0405A8 5E                0862 	ld e,(hl)
0405A9 56                0863 	ld d,(hl)
0405AA ED 5C             0864 	mlt de ; DE = sprsize²
0405AC                   0865 
0405AC 21 00 00 00       0866 	ld hl,$000000 ; HL is 0 to store the result
0405B0 47                0867 	ld b,a ; B = frames to copy
0405B1                   0868 
0405B1                   0869 ; multiply number of frames to copy by sprsize²
0405B1                   0870 aacf_loop1:
0405B1 19                0871 	add hl,de ; HL = length (in bytes) to copy (a few frames)
0405B2 10 FD             0872 	djnz aacf_loop1
0405B4                   0873 
0405B4 E5                0874 	push hl
0405B5 C1                0875 	pop bc ; BC = HL = length (in bytes) to copy (a few frames)
0405B6                   0876 
0405B6 21 0C 11 04       0877 	ld hl,current_frame
0405BA 7E                0878 	ld a,(hl)
0405BB 21 15 11 04       0879 	ld hl,sprite_buffer
0405BF FE 00             0880 	cp 0
0405C1 28 06             0881 	jr z,aacf_loop_end2
0405C3                   0882 
0405C3 C5                0883 	push bc
0405C4 47                0884 	ld b,a
0405C5                   0885 
0405C5                   0886 aacf_loop2:
0405C5 19                0887 	add hl,de ; HL = sprite buffer + length to copy
0405C6 10 FD             0888 	djnz aacf_loop2
0405C8                   0889 
0405C8 C1                0890 	pop bc
0405C9                   0891 
0405C9                   0892 aacf_loop_end2:
0405C9 09                0893 	add hl,bc
0405CA 2B                0894 	dec hl ; HL = end address to copy to end target address
0405CB                   0895 
0405CB E5                0896 	push hl
0405CC 19                0897 	add hl,de
0405CD EB                0898 	ex de,hl ; DE = end target address
0405CE E1                0899 	pop hl
0405CF                   0900 
0405CF ED B8             0901 	lddr
0405D1                   0902 
0405D1                   0903 	; increment the frames count and the current frame values
0405D1 21 0D 11 04       0904 	ld hl,frames_count
0405D5 34                0905 	inc (hl)
0405D6 21 0C 11 04       0906 	ld hl,current_frame
0405DA 34                0907 	inc (hl)
0405DB                   0908 
0405DB CD 5D 0F 04       0909 	call fn_change_frame
0405DF CD 82 0F 04       0910 	call fn_change_frames_count
0405E3 CD 1D 0F 04       0911 	call fn_refresh_sprite
0405E7 C3 C7 02 04       0912 	jp draw_sprite_loop
0405EB                   0913 
0405EB                   0914 ; delete last frame from animation
0405EB                   0915 dsl_delete_frame:
0405EB CD D9 0B 04       0916 	call fn_wait_key_released
0405EF                   0917 
0405EF                   0918 	; delete current selected frame
0405EF 21 3E 10 04       0919 	ld hl,spr_size
0405F3 01 00 00 00       0920 	ld bc,$000000
0405F7 4E                0921 	ld c,(hl)
0405F8 46                0922 	ld b,(hl)
0405F9 ED 4C             0923 	mlt bc ; BC = sprsize²
0405FB 21 0C 11 04       0924 	ld hl,current_frame
0405FF 7E                0925 	ld a,(hl) ; A = current frame
040600 21 15 11 04       0926 	ld hl,sprite_buffer ; HL = sprite buffer
040604 C5                0927 	push bc
040605 FE 00             0928 	cp 0
040607 28 06             0929 	jr z,df_loop2
040609                   0930 
040609                   0931 df_loop1:
040609 09                0932 	add hl,bc ; HL = sprite buffer + (current frame * sprsize²)
04060A 3D                0933 	dec a
04060B FE 00             0934 	cp 0
04060D 20 FA             0935 	jr nz,df_loop1
04060F                   0936 
04060F                   0937 ; clear the current frame
04060F                   0938 df_loop2:
04060F AF                0939 	xor a
040610 77                0940 	ld (hl),a
040611 23                0941 	inc hl
040612 0B                0942 	dec bc
040613 78                0943 	ld a,b
040614 B1                0944 	or c
040615 FE 00             0945 	cp 0
040617 20 F6             0946 	jr nz,df_loop2
040619                   0947 
040619                   0948 	; current frame + 1 = frames count ?
040619 E5                0949 	push hl
04061A 21 0C 11 04       0950 	ld hl,current_frame
04061E 5E                0951 	ld e,(hl)
04061F 1C                0952 	inc e
040620 21 0D 11 04       0953 	ld hl,frames_count
040624 7E                0954 	ld a,(hl)
040625 BB                0955 	cp e
040626 E1                0956 	pop hl
040627 C1                0957 	pop bc
040628 CA A4 06 04       0958 	jp z,df_exit
04062C                   0959 
04062C 11 0D 11 04       0960 	ld de,frames_count
040630 1A                0961 	ld a,(de) ; A = frames count
040631 E5                0962 	push hl
040632 21 0C 11 04       0963 	ld hl,current_frame
040636 5E                0964 	ld e,(hl) ; E = current frame
040637 E1                0965 	pop hl
040638 93                0966 	sub e
040639 3D                0967 	dec a ; A = number of frames to copy back
04063A                   0968 
04063A EB                0969 	ex de,hl ; DE = sprite buffer + ((current frame + 1) * sprsize²)
04063B 21 00 00 00       0970 	ld hl,$000000
04063F FE 00             0971 	cp 0 ; 0 frames to copy ?
040641 28 06             0972 	jr z,df_exit_loop3
040643                   0973 
040643                   0974 df_loop3:
040643 09                0975 	add hl,bc ; HL = length of a frame (sprsize²) * frames count
040644 3D                0976 	dec a
040645 FE 00             0977 	cp 0
040647 20 FA             0978 	jr nz,df_loop3
040649                   0979 
040649                   0980 df_exit_loop3:
040649 E5                0981 	push hl
04064A C1                0982 	pop bc ; BC = total length of area to copy
04064B D5                0983 	push de
04064C E1                0984 	pop hl ; HL = DE = start of area to copy
04064D                   0985 
04064D C5                0986 	push bc
04064E D5                0987 	push de
04064F E5                0988 	push hl
040650 21 3E 10 04       0989 	ld hl,spr_size
040654 11 00 00 00       0990 	ld de,$000000
040658 5E                0991 	ld e,(hl)
040659 56                0992 	ld d,(hl)
04065A ED 5C             0993 	mlt de ; DE = one sprite frame length
04065C E1                0994 	pop hl
04065D B7                0995 	or a
04065E ED 52             0996 	sbc hl,de ; HL = target area to copy
040660 D1                0997 	pop de
040661 EB                0998 	ex de,hl ; DE = target, HL = start
040662 C1                0999 	pop bc
040663 ED B0             1000 	ldir
040665                   1001 
040665 21 3E 10 04       1002 	ld hl,spr_size
040669 01 00 00 00       1003 	ld bc,$000000
04066D 4E                1004 	ld c,(hl)
04066E 46                1005 	ld b,(hl)
04066F ED 4C             1006 	mlt bc ; DE = one sprite frame length
040671                   1007 
040671                   1008 	; delete last frame data
040671 21 0D 11 04       1009 	ld hl,frames_count
040675 7E                1010 	ld a,(hl) ; A =frames count
040676 3D                1011 	dec a ; A = last frame
040677 21 15 11 04       1012 	ld hl,sprite_buffer ; HL = sprite buffer
04067B FE 00             1013 	cp 0
04067D 28 06             1014 	jr z,df_loop5
04067F                   1015 
04067F                   1016 df_loop4:
04067F 09                1017 	add hl,bc ; HL = sprite buffer + (last frame * sprsize²)
040680 3D                1018 	dec a
040681 FE 00             1019 	cp 0
040683 20 FA             1020 	jr nz,df_loop4
040685                   1021 
040685                   1022 ; clear the current frame
040685                   1023 df_loop5:
040685 AF                1024 	xor a
040686 77                1025 	ld (hl),a
040687 23                1026 	inc hl
040688 0B                1027 	dec bc
040689 78                1028 	ld a,b
04068A B1                1029 	or c
04068B FE 00             1030 	cp 0
04068D 20 F6             1031 	jr nz,df_loop5
04068F                   1032 
04068F                   1033 	; decrement frames count
04068F 21 0D 11 04       1034 	ld hl,frames_count
040693 35                1035 	dec (hl)
040694                   1036 
040694 CD 5D 0F 04       1037 	call fn_change_frame
040698 CD 82 0F 04       1038 	call fn_change_frames_count
04069C CD 1D 0F 04       1039 	call fn_refresh_sprite
0406A0 C3 C7 02 04       1040 	jp draw_sprite_loop
0406A4                   1041 
0406A4                   1042 df_exit:
0406A4 21 0D 11 04       1043 	ld hl,frames_count
0406A8 7E                1044 	ld a,(hl)
0406A9 FE 01             1045 	cp 1
0406AB 28 06             1046 	jr z,df_exit_end
0406AD 35                1047 	dec (hl)
0406AE 21 0C 11 04       1048 	ld hl,current_frame
0406B2 35                1049 	dec (hl)
0406B3                   1050 
0406B3                   1051 df_exit_end:
0406B3 CD 5D 0F 04       1052 	call fn_change_frame
0406B7 CD 82 0F 04       1053 	call fn_change_frames_count
0406BB CD 1D 0F 04       1054 	call fn_refresh_sprite
0406BF C3 C7 02 04       1055 	jp draw_sprite_loop
0406C3                   1056 
0406C3                   1057 ; goto previous frame
0406C3                   1058 dsl_previous_frame:
0406C3 CD D9 0B 04       1059 	call fn_wait_key_released
0406C7 21 0C 11 04       1060 	ld hl,current_frame
0406CB 7E                1061 	ld a,(hl)
0406CC FE 00             1062 	cp 0
0406CE CA C7 02 04       1063 	jp z,draw_sprite_loop
0406D2                   1064 
0406D2 3D                1065 	dec a
0406D3 77                1066 	ld (hl),a
0406D4 CD 5D 0F 04       1067 	call fn_change_frame
0406D8 CD 1D 0F 04       1068 	call fn_refresh_sprite
0406DC C3 C7 02 04       1069 	jp draw_sprite_loop
0406E0                   1070 
0406E0                   1071 ; goto next frame
0406E0                   1072 dsl_next_frame:
0406E0 CD D9 0B 04       1073 	call fn_wait_key_released
0406E4 21 0C 11 04       1074 	ld hl,current_frame
0406E8 7E                1075 	ld a,(hl)
0406E9 3C                1076 	inc a
0406EA 21 0D 11 04       1077 	ld hl,frames_count
0406EE BE                1078 	cp (hl)
0406EF CA C7 02 04       1079 	jp z,draw_sprite_loop
0406F3                   1080 
0406F3 21 0C 11 04       1081 	ld hl,current_frame
0406F7 77                1082 	ld (hl),a
0406F8 CD 5D 0F 04       1083 	call fn_change_frame
0406FC CD 1D 0F 04       1084 	call fn_refresh_sprite
040700 C3 C7 02 04       1085 	jp draw_sprite_loop
040704                   1086 
040704                   1087 ; rotate a frame 90° clockwise
040704                   1088 dsl_rotate_frame:
040704 CD D9 0B 04       1089 	call fn_wait_key_released
040708                   1090 
040708 CD 1D 0F 04       1091 	call fn_refresh_sprite
04070C C3 C7 02 04       1092 	jp draw_sprite_loop
040710                   1093 
040710                   1094 ; flip frame horizontally
040710                   1095 dsl_flip_frame:
040710 CD D9 0B 04       1096 	call fn_wait_key_released
040714                   1097 
040714 21 3E 10 04       1098 	ld hl,spr_size
040718 11 00 00 00       1099 	ld de,$000000
04071C 5E                1100 	ld e,(hl)
04071D 56                1101 	ld d,(hl)
04071E 4B                1102 	ld c,e
04071F ED 5C             1103 	mlt de ; DE = sprite length in bytes
040721 21 0C 11 04       1104 	ld hl,current_frame
040725 7E                1105 	ld a,(hl) ; A = current frame
040726 21 15 11 04       1106 	ld hl,sprite_buffer
04072A FE 00             1107 	cp 0
04072C 28 04             1108 	jr z,ff_noloop1
04072E 47                1109 	ld b,a
04072F                   1110 
04072F                   1111 ff_loop1:
04072F 19                1112 	add hl,de ; HL = sprite_buffer + (current frame * sprsize²)
040730 10 FD             1113 	djnz ff_loop1
040732                   1114 
040732                   1115 ff_noloop1:
040732 41                1116 	ld b,c ; B = sprite height
040733 11 00 00 00       1117 	ld de,$000000
040737 59                1118 	ld e,c ; DE = sprite width
040738 79                1119 	ld a,c ; A = sprite width
040739 0F                1120 	rrca
04073A E6 7F             1121 	and 127 ; A = sprite width / 2
04073C                   1122 
04073C E5                1123 	push hl
04073D DD E1             1124 	pop ix ; IX = frame address
04073F 19                1125 	add hl,de ; HL = frame address + sprite width - 1
040740 2B                1126 	dec hl
040741 E5                1127 	push hl
040742 FD E1             1128 	pop iy ; IY = YX + sprite width - 1
040744                   1129 
040744                   1130 ff_loop2:
040744 F5                1131 	push af
040745 D5                1132 	push de
040746 DD E5             1133 	push ix
040748 FD E5             1134 	push iy
04074A                   1135 ff_loop3:
04074A DD 5E 00          1136 	ld e,(ix+0)
04074D FD 56 00          1137 	ld d,(iy+0)
040750 DD 72 00          1138 	ld (ix+0),d
040753 FD 73 00          1139 	ld (iy+0),e
040756 DD 23             1140 	inc ix
040758 FD 2B             1141 	dec iy
04075A 3D                1142 	dec a
04075B FE 00             1143 	cp 0
04075D 20 EB             1144 	jr nz,ff_loop3
04075F FD E1             1145 	pop iy
040761 DD E1             1146 	pop ix
040763 D1                1147 	pop de
040764 F1                1148 	pop af
040765 DD 19             1149 	add ix,de
040767 FD 19             1150 	add iy,de
040769 10 D9             1151 	djnz ff_loop2
04076B                   1152 
04076B CD 1D 0F 04       1153 	call fn_refresh_sprite
04076F C3 C7 02 04       1154 	jp draw_sprite_loop
040773                   1155 
040773                   1156 ; mirror frame vertically
040773                   1157 dsl_mirror_frame:
040773 CD D9 0B 04       1158 	call fn_wait_key_released
040777                   1159 
040777 CD 1D 0F 04       1160 	call fn_refresh_sprite
04077B C3 C7 02 04       1161 	jp draw_sprite_loop
04077F                   1162 
04077F                   1163 ; change current tool to palette
04077F                   1164 dsl_palette_tool:
04077F CD D9 0B 04       1165 	call fn_wait_key_released
040783                   1166 
040783                   1167 	; hide sprite drawing cursor
040783 CD 4D 0A 04       1168 	call fn_draw_pixel_without_border
040787                   1169 
040787                   1170 	; draw selected palette color
040787 21 3F 10 04       1171 	ld hl,current_pen
04078B 4E                1172 	ld c,(hl)
04078C CD 01 0B 04       1173 	call fn_draw_palette_with_border
040790                   1174 
040790                   1175 ; select palette color
040790                   1176 dsl_palette_tool_loop:
040790                   1177 	; get a char
040790 CD BB 0B 04       1178 	call fn_wait_key
040794                   1179 
040794                   1180 	; if not keydown, loop
040794 57                1181 	ld d,a
040795 7D                1182 	ld a,l
040796 E6 01             1183 	and 1
040798 FE 00             1184 	cp 0
04079A 7A                1185 	ld a,d
04079B CA 90 07 04       1186 	jp z,dsl_palette_tool_loop
04079F                   1187 
04079F FE 00             1188 	cp 0 ; keycode = 0 ? loop
0407A1 CA 90 07 04       1189 	jp z,dsl_palette_tool_loop
0407A5                   1190 
0407A5 FE 9A             1191 	cp VK_LEFT ; on left key...
0407A7 CA 32 08 04       1192 	jp z,dsl_dec_pen
0407AB                   1193 
0407AB FE 9C             1194 	cp VK_RIGHT ; on right key...
0407AD CA 5D 08 04       1195 	jp z,dsl_inc_pen
0407B1                   1196 
0407B1 FE 8E             1197 	cp VK_TAB ; on tab key...
0407B3 CA 1D 08 04       1198 	jp z,dsl_draw_sprite_tool
0407B7                   1199 
0407B7 FE 21             1200 	cp VK_l ; on l key...
0407B9 CA D9 07 04       1201 	jp z,dslp_load_sprite
0407BD                   1202 
0407BD FE 3B             1203 	cp VK_L ; on L key...
0407BF CA D9 07 04       1204 	jp z,dslp_load_sprite
0407C3                   1205 
0407C3 FE 28             1206 	cp VK_s ; on s key...
0407C5 CA FF 07 04       1207 	jp z,dslp_save_sprite
0407C9                   1208 
0407C9 FE 42             1209 	cp VK_S ; on S key...
0407CB CA FF 07 04       1210 	jp z,dslp_save_sprite
0407CF                   1211 
0407CF FE 7D             1212 	cp VK_ESCAPE ; on escape key...
0407D1 CA 88 08 04       1213 	jp z,exit_program
0407D5                   1214 
0407D5 C3 90 07 04       1215 	jp dsl_palette_tool_loop
0407D9                   1216 
0407D9                   1217 dslp_load_sprite:
0407D9 CD D9 0B 04       1218 	call fn_wait_key_released
0407DD 21 3F 10 04       1219 	ld hl,current_pen
0407E1 4E                1220 	ld c,(hl)
0407E2 CD 66 0B 04       1221 	call fn_draw_palette_without_border
0407E6 CD ED 0C 04       1222 	call fn_load_sprite
0407EA 21 3F 10 04       1223 	ld hl,current_pen
0407EE 4E                1224 	ld c,(hl)
0407EF CD 1D 0F 04       1225 	call fn_refresh_sprite
0407F3 CD 01 0B 04       1226 	call fn_draw_palette_with_border
0407F7 CD 5D 0F 04       1227 	call fn_change_frame
0407FB C3 90 07 04       1228 	jp dsl_palette_tool_loop
0407FF                   1229 
0407FF                   1230 dslp_save_sprite:
0407FF CD D9 0B 04       1231 	call fn_wait_key_released
040803 21 3F 10 04       1232 	ld hl,current_pen
040807 4E                1233 	ld c,(hl)
040808 CD 66 0B 04       1234 	call fn_draw_palette_without_border
04080C CD E8 0D 04       1235 	call fn_save_sprite
040810 21 3F 10 04       1236 	ld hl,current_pen
040814 4E                1237 	ld c,(hl)
040815 CD 01 0B 04       1238 	call fn_draw_palette_with_border
040819 C3 90 07 04       1239 	jp dsl_palette_tool_loop
04081D                   1240 
04081D                   1241 dsl_draw_sprite_tool:
04081D CD D9 0B 04       1242 	call fn_wait_key_released
040821                   1243 
040821                   1244 	; unselect palette color
040821 21 3F 10 04       1245 	ld hl,current_pen
040825 4E                1246 	ld c,(hl)
040826 CD 66 0B 04       1247 	call fn_draw_palette_without_border
04082A                   1248 
04082A                   1249 	; draw the pixel with a border
04082A CD 39 0A 04       1250 	call fn_draw_pixel_with_border
04082E                   1251 
04082E C3 C7 02 04       1252 	jp draw_sprite_loop
040832                   1253 
040832                   1254 dsl_dec_pen:
040832 21 3F 10 04       1255 	ld hl,current_pen
040836 7E                1256 	ld a,(hl)
040837 FE 00             1257 	cp COLOR_MIN
040839 CA 90 07 04       1258 	jp z,dsl_palette_tool_loop
04083D                   1259 
04083D F5                1260 	push af
04083E E5                1261 	push hl
04083F                   1262 
04083F                   1263 	; unselect palette color
04083F 21 3F 10 04       1264 	ld hl,current_pen
040843 4E                1265 	ld c,(hl)
040844 CD 66 0B 04       1266 	call fn_draw_palette_without_border
040848                   1267 
040848 E1                1268 	pop hl
040849 F1                1269 	pop af
04084A                   1270 
04084A                   1271 	; dec the pen
04084A 3D                1272 	dec a
04084B 77                1273 	ld (hl),a
04084C                   1274 
04084C                   1275 	; select palette color
04084C 21 3F 10 04       1276 	ld hl,current_pen
040850 4E                1277 	ld c,(hl)
040851 CD 01 0B 04       1278 	call fn_draw_palette_with_border
040855 CD A6 0F 04       1279 	call fn_slowdown
040859 C3 90 07 04       1280 	jp dsl_palette_tool_loop
04085D                   1281 
04085D                   1282 dsl_inc_pen:
04085D 21 3F 10 04       1283 	ld hl,current_pen
040861 7E                1284 	ld a,(hl)
040862 FE 3F             1285 	cp COLOR_MAX
040864 CA 90 07 04       1286 	jp z,dsl_palette_tool_loop
040868                   1287 
040868 F5                1288 	push af
040869 E5                1289 	push hl
04086A                   1290 
04086A                   1291 	; unselect palette color
04086A 21 3F 10 04       1292 	ld hl,current_pen
04086E 4E                1293 	ld c,(hl)
04086F CD 66 0B 04       1294 	call fn_draw_palette_without_border
040873                   1295 
040873 E1                1296 	pop hl
040874 F1                1297 	pop af
040875                   1298 
040875                   1299 	; inc the pen
040875 3C                1300 	inc a
040876 77                1301 	ld (hl),a
040877                   1302 
040877                   1303 	; select palette color
040877 21 3F 10 04       1304 	ld hl,current_pen
04087B 4E                1305 	ld c,(hl)
04087C CD 01 0B 04       1306 	call fn_draw_palette_with_border
040880 CD A6 0F 04       1307 	call fn_slowdown
040884 C3 90 07 04       1308 	jp dsl_palette_tool_loop
040888                   1309 
040888                   1310 ; exit program
040888                   1311 exit_program:
040888                   1312 	; reset to mode 1
040888                   1313 	vdu 22
040888 3E 16             1313 		ld a,arg1
04088A 49 D7             1313 		rst.lis $10
04088C                   1314 	vdu 1
04088C 3E 01             1314 		ld a,arg1
04088E 49 D7             1314 		rst.lis $10
040890                   1315 
040890                   1316 	; position the texte cursor at home
040890                   1317 	vdu 30
040890 3E 1E             1317 		ld a,arg1
040892 49 D7             1317 		rst.lis $10
040894                   1318 
040894                   1319 	; show cursor
040894                   1320 	vdu 23
040894 3E 17             1320 		ld a,arg1
040896 49 D7             1320 		rst.lis $10
040898                   1321 	vdu 1
040898 3E 01             1321 		ld a,arg1
04089A 49 D7             1321 		rst.lis $10
04089C                   1322 	vdu 1
04089C 3E 01             1322 		ld a,arg1
04089E 49 D7             1322 		rst.lis $10
0408A0                   1323 
0408A0 FD E1             1324 	pop iy
0408A2 DD E1             1325 	pop ix
0408A4 D1                1326 	pop de
0408A5 C1                1327 	pop bc
0408A6 F1                1328 	pop af
0408A7 21 00 00 00       1329 	ld hl,0
0408AB                   1330 
0408AB C9                1331 	ret
0408AC                   1332 ;======================================================================
0408AC                   1333 
0408AC                   1334 ; draw a rectangle
0408AC                   1335 fn_rect:
0408AC                   1336 	vdu 25
0408AC 3E 19             1336 		ld a,arg1
0408AE 49 D7             1336 		rst.lis $10
0408B0                   1337 	vdu 4
0408B0 3E 04             1337 		ld a,arg1
0408B2 49 D7             1337 		rst.lis $10
0408B4 DD 21 2B 10 04    1338 	ld ix,x1
0408B9 DD 7E 00          1339 	ld a,(ix + 0)
0408BC                   1340 	vdu_a
0408BC 49 D7             1340 		rst.lis $10
0408BE DD 7E 01          1341 	ld a,(ix + 1)
0408C1                   1342 	vdu_a
0408C1 49 D7             1342 		rst.lis $10
0408C3 FD 21 2D 10 04    1343 	ld iy,y1
0408C8 FD 7E 00          1344 	ld a,(iy + 0)
0408CB                   1345 	vdu_a
0408CB 49 D7             1345 		rst.lis $10
0408CD FD 7E 01          1346 	ld a,(iy + 1)
0408D0                   1347 	vdu_a
0408D0 49 D7             1347 		rst.lis $10
0408D2                   1348 
0408D2                   1349 	vdu 25
0408D2 3E 19             1349 		ld a,arg1
0408D4 49 D7             1349 		rst.lis $10
0408D6                   1350 	vdu 5
0408D6 3E 05             1350 		ld a,arg1
0408D8 49 D7             1350 		rst.lis $10
0408DA DD 21 2F 10 04    1351 	ld ix,x2
0408DF DD 7E 00          1352 	ld a,(ix + 0)
0408E2                   1353 	vdu_a
0408E2 49 D7             1353 		rst.lis $10
0408E4 DD 7E 01          1354 	ld a,(ix + 1)
0408E7                   1355 	vdu_a
0408E7 49 D7             1355 		rst.lis $10
0408E9 FD 21 2D 10 04    1356 	ld iy,y1
0408EE FD 7E 00          1357 	ld a,(iy + 0)
0408F1                   1358 	vdu_a
0408F1 49 D7             1358 		rst.lis $10
0408F3 FD 7E 01          1359 	ld a,(iy + 1)
0408F6                   1360 	vdu_a
0408F6 49 D7             1360 		rst.lis $10
0408F8                   1361 
0408F8                   1362 	vdu 25
0408F8 3E 19             1362 		ld a,arg1
0408FA 49 D7             1362 		rst.lis $10
0408FC                   1363 	vdu 5
0408FC 3E 05             1363 		ld a,arg1
0408FE 49 D7             1363 		rst.lis $10
040900 DD 21 2F 10 04    1364 	ld ix,x2
040905 DD 7E 00          1365 	ld a,(ix + 0)
040908                   1366 	vdu_a
040908 49 D7             1366 		rst.lis $10
04090A DD 7E 01          1367 	ld a,(ix + 1)
04090D                   1368 	vdu_a
04090D 49 D7             1368 		rst.lis $10
04090F FD 21 31 10 04    1369 	ld iy,y2
040914 FD 7E 00          1370 	ld a,(iy + 0)
040917                   1371 	vdu_a
040917 49 D7             1371 		rst.lis $10
040919 FD 7E 01          1372 	ld a,(iy + 1)
04091C                   1373 	vdu_a
04091C 49 D7             1373 		rst.lis $10
04091E                   1374 
04091E                   1375 	vdu 25
04091E 3E 19             1375 		ld a,arg1
040920 49 D7             1375 		rst.lis $10
040922                   1376 	vdu 5
040922 3E 05             1376 		ld a,arg1
040924 49 D7             1376 		rst.lis $10
040926 DD 21 2B 10 04    1377 	ld ix,x1
04092B DD 7E 00          1378 	ld a,(ix + 0)
04092E                   1379 	vdu_a
04092E 49 D7             1379 		rst.lis $10
040930 DD 7E 01          1380 	ld a,(ix + 1)
040933                   1381 	vdu_a
040933 49 D7             1381 		rst.lis $10
040935 FD 21 31 10 04    1382 	ld iy,y2
04093A FD 7E 00          1383 	ld a,(iy + 0)
04093D                   1384 	vdu_a
04093D 49 D7             1384 		rst.lis $10
04093F FD 7E 01          1385 	ld a,(iy + 1)
040942                   1386 	vdu_a
040942 49 D7             1386 		rst.lis $10
040944                   1387 
040944                   1388 	vdu 25
040944 3E 19             1388 		ld a,arg1
040946 49 D7             1388 		rst.lis $10
040948                   1389 	vdu 5
040948 3E 05             1389 		ld a,arg1
04094A 49 D7             1389 		rst.lis $10
04094C DD 21 2B 10 04    1390 	ld ix,x1
040951 DD 7E 00          1391 	ld a,(ix + 0)
040954                   1392 	vdu_a
040954 49 D7             1392 		rst.lis $10
040956 DD 7E 01          1393 	ld a,(ix + 1)
040959                   1394 	vdu_a
040959 49 D7             1394 		rst.lis $10
04095B FD 21 2D 10 04    1395 	ld iy,y1
040960 FD 7E 00          1396 	ld a,(iy + 0)
040963                   1397 	vdu_a
040963 49 D7             1397 		rst.lis $10
040965 FD 7E 01          1398 	ld a,(iy + 1)
040968                   1399 	vdu_a
040968 49 D7             1399 		rst.lis $10
04096A                   1400 
04096A C9                1401 	ret
04096B                   1402 
04096B                   1403 ; draw a filled rectangle
04096B                   1404 fn_rectf:
04096B DD 21 2B 10 04    1405 	ld ix,x1
040970 FD 21 2D 10 04    1406 	ld iy,y1
040975                   1407 
040975                   1408 	vdu 25
040975 3E 19             1408 		ld a,arg1
040977 49 D7             1408 		rst.lis $10
040979                   1409 	vdu 4
040979 3E 04             1409 		ld a,arg1
04097B 49 D7             1409 		rst.lis $10
04097D DD 7E 00          1410 	ld a,(ix+0)
040980                   1411 	vdu_a
040980 49 D7             1411 		rst.lis $10
040982 DD 7E 01          1412 	ld a,(ix+1)
040985                   1413 	vdu_a
040985 49 D7             1413 		rst.lis $10
040987 FD 7E 00          1414 	ld a,(iy+0)
04098A                   1415 	vdu_a
04098A 49 D7             1415 		rst.lis $10
04098C FD 7E 01          1416 	ld a,(iy+1)
04098F                   1417 	vdu_a
04098F 49 D7             1417 		rst.lis $10
040991                   1418 
040991 DD 21 2F 10 04    1419 	ld ix,x2
040996 FD 21 31 10 04    1420 	ld iy,y2
04099B                   1421 
04099B                   1422 	vdu 25
04099B 3E 19             1422 		ld a,arg1
04099D 49 D7             1422 		rst.lis $10
04099F                   1423 	vdu 101
04099F 3E 65             1423 		ld a,arg1
0409A1 49 D7             1423 		rst.lis $10
0409A3 DD 7E 00          1424 	ld a,(ix+0)
0409A6                   1425 	vdu_a
0409A6 49 D7             1425 		rst.lis $10
0409A8 DD 7E 01          1426 	ld a,(ix+1)
0409AB                   1427 	vdu_a
0409AB 49 D7             1427 		rst.lis $10
0409AD FD 7E 00          1428 	ld a,(iy+0)
0409B0                   1429 	vdu_a
0409B0 49 D7             1429 		rst.lis $10
0409B2 FD 7E 01          1430 	ld a,(iy+1)
0409B5                   1431 	vdu_a
0409B5 49 D7             1431 		rst.lis $10
0409B7                   1432 
0409B7 C9                1433 	ret
0409B8                   1434 
0409B8                   1435 fn_calc_pixel_coords:
0409B8 11 00 00 00       1436 	ld de,$000000 ; reset deu
0409BC                   1437 
0409BC                   1438 	; calculate coordinates x of the resized pixel
0409BC 21 3B 10 04       1439 	ld hl,xpix
0409C0 5E                1440 	ld e,(hl) ; E = xpix
0409C1 21 3D 10 04       1441 	ld hl,pixel_width
0409C5 56                1442 	ld d,(hl) ; D = pixel_width
0409C6 D5                1443 	push de
0409C7 E1                1444 	pop hl ; HL = DE
0409C8 ED 6C             1445 	mlt hl ; HL = xpix * pixel_width
0409CA DD 21 33 10 04    1446 	ld ix,xs1
0409CF DD 5E 00          1447 	ld e,(ix+0)
0409D2 DD 56 01          1448 	ld d,(ix+1)
0409D5 13                1449 	inc de ; DE = xs1 + 1
0409D6 19                1450 	add hl,de ; HL = (xpix * pixel_width) + xs1 + 1
0409D7 FD 21 2B 10 04    1451 	ld iy,x1
0409DC FD 75 00          1452 	ld (iy+0),l
0409DF FD 74 01          1453 	ld (iy+1),h ; x1 = (xpix * pixel_width) + xs1 + 1
0409E2 E5                1454 	push hl
0409E3 21 3D 10 04       1455 	ld hl,pixel_width
0409E7 16 00             1456 	ld d,0
0409E9 5E                1457 	ld e,(hl)
0409EA E1                1458 	pop hl
0409EB 19                1459 	add hl,de
0409EC 2B                1460 	dec hl
0409ED FD 21 2F 10 04    1461 	ld iy,x2
0409F2 FD 75 00          1462 	ld (iy+0),l
0409F5 FD 74 01          1463 	ld (iy+1),h ; x2 = x1 + pixel_width - 1
0409F8                   1464 
0409F8 11 00 00 00       1465 	ld de,$000000 ; reset deu
0409FC                   1466 
0409FC                   1467 	; calculate coordinates y of the resized pixel
0409FC 21 3C 10 04       1468 	ld hl,ypix
040A00 5E                1469 	ld e,(hl) ; E = ypix
040A01 21 3D 10 04       1470 	ld hl,pixel_width
040A05 56                1471 	ld d,(hl) ; D = pixel_width
040A06 D5                1472 	push de
040A07 E1                1473 	pop hl ; HL = DE
040A08 ED 6C             1474 	mlt hl ; HL = ypix * pixel_width
040A0A DD 21 35 10 04    1475 	ld ix,ys1
040A0F DD 5E 00          1476 	ld e,(ix+0)
040A12 DD 56 01          1477 	ld d,(ix+1) ; ys1 = ypix * pixel_width
040A15 13                1478 	inc de ; DE = ys1 + 1
040A16 19                1479 	add hl,de ; HL = (ypix * pixel_width) + ys1 + 1
040A17 FD 21 2D 10 04    1480 	ld iy,y1
040A1C FD 75 00          1481 	ld (iy+0),l
040A1F FD 74 01          1482 	ld (iy+1),h ; y1 = (ypix * pixel_width) + ys1 + 1
040A22 E5                1483 	push hl
040A23 21 3D 10 04       1484 	ld hl,pixel_width
040A27 16 00             1485 	ld d,0
040A29 5E                1486 	ld e,(hl)
040A2A E1                1487 	pop hl
040A2B 19                1488 	add hl,de
040A2C 2B                1489 	dec hl
040A2D FD 21 31 10 04    1490 	ld iy,y2
040A32 FD 75 00          1491 	ld (iy+0),l
040A35 FD 74 01          1492 	ld (iy+1),h ; y2 = y1 + pixel_width - 1
040A38                   1493 
040A38 C9                1494 	ret
040A39                   1495 
040A39                   1496 ; draw the resized pixel border, with its color
040A39                   1497 fn_draw_pixel_with_border:
040A39 CD 4D 0A 04       1498 	call fn_draw_pixel_without_border
040A3D                   1499 
040A3D                   1500 	; set graphics pen
040A3D                   1501 	vdu 18
040A3D 3E 12             1501 		ld a,arg1
040A3F 49 D7             1501 		rst.lis $10
040A41                   1502 	vdu 0
040A41 3E 00             1502 		ld a,arg1
040A43 49 D7             1502 		rst.lis $10
040A45                   1503 	vdu COLOR_GREY ; grey pen
040A45 3E 07             1503 		ld a,arg1
040A47 49 D7             1503 		rst.lis $10
040A49                   1504 
040A49                   1505 	; draw the sprite's border rectangle
040A49 C3 AC 08 04       1506 	jp fn_rect
040A4D                   1507 
040A4D                   1508 ; draw the resized pixel color
040A4D                   1509 fn_draw_pixel_without_border:
040A4D CD B8 09 04       1510 	call fn_calc_pixel_coords
040A51                   1511 
040A51                   1512 	; set graphics pen
040A51                   1513 	vdu 18
040A51 3E 12             1513 		ld a,arg1
040A53 49 D7             1513 		rst.lis $10
040A55                   1514 	vdu 0
040A55 3E 00             1514 		ld a,arg1
040A57 49 D7             1514 		rst.lis $10
040A59 CD 63 0A 04       1515 	call fn_get_pixel_color
040A5D                   1516 	vdu_a
040A5D 49 D7             1516 		rst.lis $10
040A5F                   1517 
040A5F                   1518 	; draw the sprite's color rectangle
040A5F C3 6B 09 04       1519 	jp fn_rectf
040A63                   1520 
040A63                   1521 ; get pixel color value in the sprite buffer
040A63                   1522 ; returns A: pixel color (0-63)
040A63                   1523 fn_get_pixel_color:
040A63 11 00 00 00       1524 	ld de,$000000 ; reset deu
040A67                   1525 
040A67                   1526 	; calculate the offset to add to the address
040A67 21 3C 10 04       1527 	ld hl,ypix
040A6B 5E                1528 	ld e,(hl) ; E = ypix
040A6C 21 3E 10 04       1529 	ld hl,spr_size
040A70 56                1530 	ld d,(hl) ; D = sprsize
040A71 D5                1531 	push de
040A72 E1                1532 	pop hl
040A73 ED 6C             1533 	mlt hl ; HL = ypix * sprsize
040A75 E5                1534 	push hl
040A76 21 3B 10 04       1535 	ld hl,xpix
040A7A 5E                1536 	ld e,(hl)
040A7B 16 00             1537 	ld d,0
040A7D E1                1538 	pop hl
040A7E 19                1539 	add hl,de ; HL = (ypix * sprsize) + xpix
040A7F                   1540 
040A7F 11 0C 11 04       1541 	ld de,current_frame
040A83 1A                1542 	ld a,(de)
040A84 FE 00             1543 	cp 0
040A86 28 16             1544 	jr z,gpc_end_loop
040A88                   1545 
040A88 47                1546 	ld b,a
040A89 E5                1547 	push hl
040A8A 11 00 00 00       1548 	ld de,$000000
040A8E 21 3E 10 04       1549 	ld hl,spr_size
040A92 5E                1550 	ld e,(hl)
040A93 56                1551 	ld d,(hl)
040A94 D5                1552 	push de
040A95 E1                1553 	pop hl
040A96 ED 6C             1554 	mlt hl
040A98 E5                1555 	push hl
040A99 D1                1556 	pop de ; DE = sprsize²
040A9A E1                1557 	pop hl
040A9B                   1558 
040A9B                   1559 gpc_loop:
040A9B 19                1560 	add hl,de
040A9C 10 FD             1561 	djnz gpc_loop
040A9E                   1562 
040A9E                   1563 gpc_end_loop:
040A9E                   1564 	; add the offset to the address
040A9E 11 15 11 04       1565 	ld de,sprite_buffer
040AA2 19                1566 	add hl,de ; HL = sprite_buffer + ((ypix * sprsize) + xpix)
040AA3                   1567 
040AA3                   1568 	; get pixel color value
040AA3 7E                1569 	ld a,(hl)
040AA4                   1570 
040AA4 C9                1571 	ret
040AA5                   1572 
040AA5                   1573 ; get pixel color value in the sprite buffer
040AA5                   1574 ; A: pixel color (0-63)
040AA5                   1575 fn_set_pixel_color:
040AA5 11 00 00 00       1576 	ld de,$000000 ; reset deu
040AA9                   1577 
040AA9                   1578 	; calculate the offset to add to the address
040AA9 21 3C 10 04       1579 	ld hl,ypix
040AAD 5E                1580 	ld e,(hl) ; E = ypix
040AAE 21 3E 10 04       1581 	ld hl,spr_size
040AB2 56                1582 	ld d,(hl) ; D = sprsize
040AB3 D5                1583 	push de
040AB4 E1                1584 	pop hl
040AB5 ED 6C             1585 	mlt hl ; HL = ypix * sprsize
040AB7 E5                1586 	push hl
040AB8 21 3B 10 04       1587 	ld hl,xpix
040ABC 5E                1588 	ld e,(hl)
040ABD 16 00             1589 	ld d,0
040ABF E1                1590 	pop hl
040AC0 19                1591 	add hl,de ; HL = (ypix * sprsize) + xpix
040AC1 F5                1592 	push af
040AC2                   1593 
040AC2 11 0C 11 04       1594 	ld de,current_frame
040AC6 1A                1595 	ld a,(de)
040AC7 FE 00             1596 	cp 0
040AC9 28 16             1597 	jr z,spc_end_loop
040ACB                   1598 
040ACB 47                1599 	ld b,a
040ACC E5                1600 	push hl
040ACD 11 00 00 00       1601 	ld de,$000000
040AD1 21 3E 10 04       1602 	ld hl,spr_size
040AD5 5E                1603 	ld e,(hl)
040AD6 56                1604 	ld d,(hl)
040AD7 D5                1605 	push de
040AD8 E1                1606 	pop hl
040AD9 ED 6C             1607 	mlt hl
040ADB E5                1608 	push hl
040ADC D1                1609 	pop de ; DE = sprsize²
040ADD E1                1610 	pop hl
040ADE                   1611 
040ADE                   1612 spc_loop:
040ADE 19                1613 	add hl,de
040ADF 10 FD             1614 	djnz spc_loop
040AE1                   1615 
040AE1                   1616 spc_end_loop:
040AE1                   1617 
040AE1                   1618 	; add the offset to the address
040AE1 11 15 11 04       1619 	ld de,sprite_buffer
040AE5 19                1620 	add hl,de ; HL = sprite_buffer + ((ypix * sprsize) + xpix)
040AE6                   1621 
040AE6                   1622 	; set pixel color value
040AE6 F1                1623 	pop af
040AE7 77                1624 	ld (hl),a
040AE8                   1625 
040AE8 C9                1626 	ret
040AE9                   1627 
040AE9                   1628 fn_move_up:
040AE9 21 3C 10 04       1629 	ld hl,ypix
040AED 35                1630 	dec (hl)
040AEE C9                1631 	ret
040AEF                   1632 
040AEF                   1633 fn_move_down:
040AEF 21 3C 10 04       1634 	ld hl,ypix
040AF3 34                1635 	inc (hl)
040AF4 C9                1636 	ret
040AF5                   1637 
040AF5                   1638 fn_move_left:
040AF5 21 3B 10 04       1639 	ld hl,xpix
040AF9 35                1640 	dec (hl)
040AFA C9                1641 	ret
040AFB                   1642 
040AFB                   1643 fn_move_right:
040AFB 21 3B 10 04       1644 	ld hl,xpix
040AFF 34                1645 	inc (hl)
040B00 C9                1646 	ret
040B01                   1647 
040B01                   1648 ; draw palette color whit border and selection
040B01                   1649 ; C = color number (0-63)
040B01                   1650 fn_draw_palette_with_border:
040B01 C5                1651 	push bc
040B02                   1652 
040B02                   1653 	; choose palette color
040B02                   1654 	vdu 18
040B02 3E 12             1654 		ld a,arg1
040B04 49 D7             1654 		rst.lis $10
040B06                   1655 	vdu 0
040B06 3E 00             1655 		ld a,arg1
040B08 49 D7             1655 		rst.lis $10
040B0A C1                1656 	pop bc
040B0B C5                1657 	push bc
040B0C 79                1658 	ld a,c
040B0D                   1659 	vdu_a
040B0D 49 D7             1659 		rst.lis $10
040B0F                   1660 
040B0F                   1661 	; store coordinates for a palette square
040B0F DD 21 2B 10 04    1662 	ld ix,x1
040B14 E1                1663 	pop hl
040B15 E5                1664 	push hl
040B16 26 05             1665 	ld h,5
040B18 ED 6C             1666 	mlt hl
040B1A E5                1667 	push hl
040B1B DD 75 00          1668 	ld (ix+0),l
040B1E DD 74 01          1669 	ld (ix+1),h
040B21                   1670 
040B21 DD 21 2D 10 04    1671 	ld ix,y1
040B26 21 00 00 00       1672 	ld hl,0
040B2A DD 75 00          1673 	ld (ix+0),l
040B2D DD 74 01          1674 	ld (ix+1),h
040B30                   1675 
040B30 DD 21 2F 10 04    1676 	ld ix,x2
040B35 E1                1677 	pop hl
040B36 11 04 00 00       1678 	ld de,4
040B3A 19                1679 	add hl,de
040B3B DD 75 00          1680 	ld (ix+0),l
040B3E DD 74 01          1681 	ld (ix+1),h
040B41                   1682 
040B41 DD 21 31 10 04    1683 	ld ix,y2
040B46 21 0A 00 00       1684 	ld hl,10
040B4A DD 75 00          1685 	ld (ix+0),l
040B4D DD 74 01          1686 	ld (ix+1),h
040B50                   1687 
040B50                   1688 	; draw the palette filled square
040B50 CD 6B 09 04       1689 	call fn_rectf
040B54                   1690 
040B54                   1691 	; choose grey color
040B54                   1692 	vdu 18
040B54 3E 12             1692 		ld a,arg1
040B56 49 D7             1692 		rst.lis $10
040B58                   1693 	vdu 0
040B58 3E 00             1693 		ld a,arg1
040B5A 49 D7             1693 		rst.lis $10
040B5C 3E 07             1694 	ld a,COLOR_GREY
040B5E                   1695 	vdu_a
040B5E 49 D7             1695 		rst.lis $10
040B60                   1696 
040B60                   1697 	; draw the palette square border
040B60 CD AC 08 04       1698 	call fn_rect
040B64                   1699 
040B64                   1700 	; next color ?
040B64 C1                1701 	pop bc
040B65                   1702 
040B65 C9                1703 	ret
040B66                   1704 
040B66                   1705 ; draw palette color whitout border and selection
040B66                   1706 ; C = color number (0-63)
040B66                   1707 fn_draw_palette_without_border:
040B66 C5                1708 	push bc
040B67                   1709 
040B67                   1710 	; choose palette color
040B67                   1711 	vdu 18
040B67 3E 12             1711 		ld a,arg1
040B69 49 D7             1711 		rst.lis $10
040B6B                   1712 	vdu 0
040B6B 3E 00             1712 		ld a,arg1
040B6D 49 D7             1712 		rst.lis $10
040B6F C1                1713 	pop bc
040B70 C5                1714 	push bc
040B71 79                1715 	ld a,c
040B72                   1716 	vdu_a
040B72 49 D7             1716 		rst.lis $10
040B74                   1717 
040B74                   1718 	; store coordinates for a palette square
040B74 DD 21 2B 10 04    1719 	ld ix,x1
040B79 E1                1720 	pop hl
040B7A E5                1721 	push hl
040B7B 26 05             1722 	ld h,5
040B7D ED 6C             1723 	mlt hl
040B7F E5                1724 	push hl
040B80 DD 75 00          1725 	ld (ix+0),l
040B83 DD 74 01          1726 	ld (ix+1),h
040B86                   1727 
040B86 DD 21 2D 10 04    1728 	ld ix,y1
040B8B 21 00 00 00       1729 	ld hl,0
040B8F DD 75 00          1730 	ld (ix+0),l
040B92 DD 74 01          1731 	ld (ix+1),h
040B95                   1732 
040B95 DD 21 2F 10 04    1733 	ld ix,x2
040B9A E1                1734 	pop hl
040B9B 11 04 00 00       1735 	ld de,4
040B9F 19                1736 	add hl,de
040BA0 DD 75 00          1737 	ld (ix+0),l
040BA3 DD 74 01          1738 	ld (ix+1),h
040BA6                   1739 
040BA6 DD 21 31 10 04    1740 	ld ix,y2
040BAB 21 0A 00 00       1741 	ld hl,10
040BAF DD 75 00          1742 	ld (ix+0),l
040BB2 DD 74 01          1743 	ld (ix+1),h
040BB5                   1744 
040BB5                   1745 	; draw the palette filled square
040BB5 CD 6B 09 04       1746 	call fn_rectf
040BB9                   1747 
040BB9 C1                1748 	pop bc
040BBA                   1749 
040BBA C9                1750 	ret
040BBB                   1751 
040BBB                   1752 ; return the keyascii of the key pressed
040BBB                   1753 ; returns:
040BBB                   1754 ; A: keycode
040BBB                   1755 ; L: keydown
040BBB                   1756 ; h: keymods
040BBB                   1757 fn_wait_key:
040BBB                   1758 	moscall mos_sysvars
040BBB 3E 08             1758 		ld a,arg1
040BBD 49 CF             1758 		rst.lis $08
040BBF                   1759 
040BBF FD 21 12 11 04    1760 	ld iy,keydata
040BC4 DD 7E 18          1761 	ld a,(ix+sysvar_vkeydown)
040BC7 FD 77 01          1762 	ld (iy+1),a
040BCA 6F                1763 	ld l,a
040BCB DD 7E 06          1764 	ld a,(ix+sysvar_keymods)
040BCE FD 77 02          1765 	ld (iy+2),a
040BD1 67                1766 	ld h,a
040BD2 DD 7E 17          1767 	ld a,(ix+sysvar_vkeycode)
040BD5 FD 77 00          1768 	ld (iy+0),a
040BD8 C9                1769 	ret
040BD9                   1770 
040BD9                   1771 ; wait a key to be released
040BD9                   1772 fn_wait_key_released:
040BD9                   1773 	moscall mos_sysvars
040BD9 3E 08             1773 		ld a,arg1
040BDB 49 CF             1773 		rst.lis $08
040BDD                   1774 
040BDD DD 7E 18          1775 	ld a,(ix+sysvar_vkeydown)
040BE0 FE 00             1776 	cp 0
040BE2 20 F5             1777 	jr nz,fn_wait_key_released
040BE4 C9                1778 	ret
040BE5                   1779 
040BE5                   1780 ; get an ascii key value
040BE5                   1781 fn_input_key:
040BE5 C5                1782 	push bc
040BE6                   1783 	moscall mos_getkey
040BE6 3E 00             1783 		ld a,arg1
040BE8 49 CF             1783 		rst.lis $08
040BEA C1                1784 	pop bc
040BEB C9                1785 	ret
040BEC                   1786 
040BEC                   1787 ; input a text of 8 chars
040BEC                   1788 fn_input_text8:
040BEC                   1789 	; locate x,y
040BEC                   1790 	vdu 31
040BEC 3E 1F             1790 		ld a,arg1
040BEE 49 D7             1790 		rst.lis $10
040BF0                   1791 	vdu FILENAME_X
040BF0 3E 07             1791 		ld a,arg1
040BF2 49 D7             1791 		rst.lis $10
040BF4                   1792 	vdu FILENAME_Y
040BF4 3E 18             1792 		ld a,arg1
040BF6 49 D7             1792 		rst.lis $10
040BF8                   1793 
040BF8                   1794 	; print text
040BF8 21 A7 10 04       1795 	ld hl,filename_label
040BFC 01 00 00 00       1796 	ld bc,0
040C00 AF                1797 	xor a
040C01 49 DF             1798 	rst.lis $18
040C03                   1799 
040C03                   1800 	; show cursor
040C03                   1801 	vdu 23
040C03 3E 17             1801 		ld a,arg1
040C05 49 D7             1801 		rst.lis $10
040C07                   1802 	vdu 1
040C07 3E 01             1802 		ld a,arg1
040C09 49 D7             1802 		rst.lis $10
040C0B                   1803 	vdu 1
040C0B 3E 01             1803 		ld a,arg1
040C0D 49 D7             1803 		rst.lis $10
040C0F                   1804 
040C0F 0E 00             1805 	ld c,0
040C11                   1806 
040C11                   1807 it8_loop:
040C11                   1808 	; get ascii key
040C11 CD E5 0B 04       1809 	call fn_input_key
040C15 B7                1810 	or a
040C16 CA 11 0C 04       1811 	jp z,it8_loop
040C1A                   1812 
040C1A FE 2E             1813 	cp '.'
040C1C CA 66 0C 04       1814 	jp z,it8l_add_char
040C20                   1815 
040C20 FE 2D             1816 	cp '-'
040C22 CA 66 0C 04       1817 	jp z,it8l_add_char
040C26                   1818 
040C26 FE 5F             1819 	cp '_'
040C28 CA 66 0C 04       1820 	jp z,it8l_add_char
040C2C                   1821 
040C2C FE 7F             1822 	cp 127
040C2E CA 9A 0C 04       1823 	jp z,it8l_backspace
040C32                   1824 
040C32 FE 0D             1825 	cp 13
040C34 CA C9 0C 04       1826 	jp z,it8l_return
040C38                   1827 
040C38 FE 30             1828 	cp '0'
040C3A DA 11 0C 04       1829 	jp c,it8_loop
040C3E                   1830 
040C3E 16 39             1831 	ld d,'9'
040C40 14                1832 	inc d
040C41 BA                1833 	cp d
040C42 DA 66 0C 04       1834 	jp c,it8l_add_char
040C46                   1835 
040C46 FE 41             1836 	cp 'A'
040C48 DA 11 0C 04       1837 	jp c,it8_loop
040C4C                   1838 
040C4C 16 5A             1839 	ld d,'Z'
040C4E 14                1840 	inc d
040C4F BA                1841 	cp d
040C50 DA 66 0C 04       1842 	jp c,it8l_add_char
040C54                   1843 
040C54 FE 61             1844 	cp 'a'
040C56 DA 11 0C 04       1845 	jp c,it8_loop
040C5A                   1846 
040C5A 16 7A             1847 	ld d,'z'
040C5C 14                1848 	inc d
040C5D BA                1849 	cp d
040C5E DA 66 0C 04       1850 	jp c,it8l_add_char
040C62                   1851 
040C62 C3 11 0C 04       1852 	jp it8_loop
040C66                   1853 
040C66                   1854 it8l_add_char:
040C66 F5                1855 	push af
040C67 79                1856 	ld a,c
040C68 FE 0C             1857 	cp 12
040C6A 38 05             1858 	jr c,it8l_poke_char
040C6C F1                1859 	pop af
040C6D C3 11 0C 04       1860 	jp it8_loop
040C71                   1861 
040C71                   1862 it8l_poke_char:
040C71 F1                1863 	pop af
040C72 21 B1 10 04       1864 	ld hl,filename
040C76 06 00             1865 	ld b,0
040C78 09                1866 	add hl,bc
040C79 77                1867 	ld (hl),a
040C7A 0C                1868 	inc c
040C7B F5                1869 	push af
040C7C C5                1870 	push bc
040C7D                   1871 
040C7D                   1872 	; locate x,y
040C7D                   1873 	vdu 31
040C7D 3E 1F             1873 		ld a,arg1
040C7F 49 D7             1873 		rst.lis $10
040C81                   1874 	vdu FILENAME_X+10
040C81 3E 11             1874 		ld a,arg1
040C83 49 D7             1874 		rst.lis $10
040C85                   1875 	vdu FILENAME_Y
040C85 3E 18             1875 		ld a,arg1
040C87 49 D7             1875 		rst.lis $10
040C89                   1876 
040C89                   1877 	; print text
040C89 21 B1 10 04       1878 	ld hl,filename
040C8D 01 00 00 00       1879 	ld bc,0
040C91 AF                1880 	xor a
040C92 49 DF             1881 	rst.lis $18
040C94                   1882 
040C94 C1                1883 	pop bc
040C95 F1                1884 	pop af
040C96                   1885 
040C96 C3 11 0C 04       1886 	jp it8_loop
040C9A                   1887 
040C9A                   1888 it8l_backspace:
040C9A 79                1889 	ld a,c
040C9B FE 00             1890 	cp 0
040C9D CA 11 0C 04       1891 	jp z,it8_loop
040CA1                   1892 
040CA1                   1893 	; delete a character of the filename
040CA1 21 B1 10 04       1894 	ld hl,filename
040CA5 06 00             1895 	ld b,0
040CA7 09                1896 	add hl,bc
040CA8 AF                1897 	xor a
040CA9 77                1898 	ld (hl),a
040CAA 0D                1899 	dec c
040CAB C5                1900 	push bc
040CAC                   1901 
040CAC                   1902 	; locate x,y
040CAC                   1903 	vdu 31
040CAC 3E 1F             1903 		ld a,arg1
040CAE 49 D7             1903 		rst.lis $10
040CB0 3E 11             1904 	ld a,FILENAME_X+10
040CB2 81                1905 	add a,c
040CB3                   1906 	vdu_a
040CB3 49 D7             1906 		rst.lis $10
040CB5                   1907 	vdu FILENAME_Y
040CB5 3E 18             1907 		ld a,arg1
040CB7 49 D7             1907 		rst.lis $10
040CB9                   1908 
040CB9                   1909 	; print text
040CB9 21 C4 10 04       1910 	ld hl,spacechar
040CBD 01 00 00 00       1911 	ld bc,0
040CC1 AF                1912 	xor a
040CC2 49 DF             1913 	rst.lis $18
040CC4                   1914 
040CC4 C1                1915 	pop bc
040CC5 C3 11 0C 04       1916 	jp it8_loop
040CC9                   1917 
040CC9                   1918 it8l_return:
040CC9                   1919 	; locate x,y
040CC9                   1920 	vdu 31
040CC9 3E 1F             1920 		ld a,arg1
040CCB 49 D7             1920 		rst.lis $10
040CCD                   1921 	vdu FILENAME_X
040CCD 3E 07             1921 		ld a,arg1
040CCF 49 D7             1921 		rst.lis $10
040CD1                   1922 	vdu FILENAME_Y
040CD1 3E 18             1922 		ld a,arg1
040CD3 49 D7             1922 		rst.lis $10
040CD5                   1923 
040CD5                   1924 	; print text
040CD5 21 C6 10 04       1925 	ld hl,void_filename
040CD9 01 00 00 00       1926 	ld bc,0
040CDD AF                1927 	xor a
040CDE 49 DF             1928 	rst.lis $18
040CE0                   1929 
040CE0                   1930 	; hide cursor
040CE0                   1931 	vdu 23
040CE0 3E 17             1931 		ld a,arg1
040CE2 49 D7             1931 		rst.lis $10
040CE4                   1932 	vdu 1
040CE4 3E 01             1932 		ld a,arg1
040CE6 49 D7             1932 		rst.lis $10
040CE8                   1933 	vdu 0
040CE8 3E 00             1933 		ld a,arg1
040CEA 49 D7             1933 		rst.lis $10
040CEC                   1934 
040CEC C9                1935 	ret
040CED                   1936 
040CED                   1937 ; load a sprite, giving its name (must be on spredit folder)
040CED                   1938 fn_load_sprite:
040CED                   1939 	; clear filename
040CED 21 B1 10 04       1940 	ld hl,filename
040CF1 06 0C             1941 	ld b,12
040CF3 AF                1942 	xor a
040CF4                   1943 
040CF4                   1944 ls_clear_filename:
040CF4 77                1945 	ld (hl),a
040CF5 23                1946 	inc hl
040CF6 10 FC             1947 	djnz ls_clear_filename
040CF8                   1948 
040CF8                   1949 	; get filename
040CF8 CD EC 0B 04       1950 	call fn_input_text8
040CFC                   1951 
040CFC                   1952 	; set path to home
040CFC 21 BE 10 04       1953 	ld hl,home_path
040D00                   1954 	moscall mos_cd
040D00 3E 03             1954 		ld a,arg1
040D02 49 CF             1954 		rst.lis $08
040D04                   1955 
040D04                   1956 	; exit on error
040D04 FE 00             1957 	cp 0
040D06 C2 C3 0D 04       1958 	jp nz,ls_folder_error
040D0A                   1959 
040D0A                   1960 	; open the file for read
040D0A 21 B1 10 04       1961 	ld hl,filename
040D0E 0E 01             1962 	ld c,fa_open_existing|fa_read
040D10                   1963 	moscall mos_fopen
040D10 3E 0A             1963 		ld a,arg1
040D12 49 CF             1963 		rst.lis $08
040D14                   1964 
040D14                   1965 	; exit on error
040D14 FE 00             1966 	cp 0
040D16 CA E3 0D 04       1967 	jp z,ls_file_error
040D1A                   1968 
040D1A                   1969 	; filehandle -> C
040D1A 4F                1970 	ld c,a
040D1B                   1971 
040D1B                   1972 	; get colors count
040D1B                   1973 	moscall mos_fgetc
040D1B 3E 0C             1973 		ld a,arg1
040D1D 49 CF             1973 		rst.lis $08
040D1F DA AC 0D 04       1974 	jp c,ls_close_error
040D23                   1975 
040D23 FE 40             1976 	cp MAX_COLORS
040D25 C2 AC 0D 04       1977 	jp nz,ls_close_error
040D29                   1978 
040D29                   1979 	; store colors count
040D29 21 0B 11 04       1980 	ld hl,colors_count
040D2D 77                1981 	ld (hl),a
040D2E                   1982 
040D2E                   1983 	; get frames count
040D2E                   1984 	moscall mos_fgetc
040D2E 3E 0C             1984 		ld a,arg1
040D30 49 CF             1984 		rst.lis $08
040D32 DA AC 0D 04       1985 	jp c,ls_close_error
040D36                   1986 
040D36                   1987 	; store frames count
040D36 21 0D 11 04       1988 	ld hl,frames_count
040D3A 77                1989 	ld (hl),a
040D3B 21 0C 11 04       1990 	ld hl,current_frame
040D3F 3D                1991 	dec a
040D40 77                1992 	ld (hl),a
040D41                   1993 
040D41                   1994 	; get sprite size
040D41                   1995 	moscall mos_fgetc
040D41 3E 0C             1995 		ld a,arg1
040D43 49 CF             1995 		rst.lis $08
040D45 DA AC 0D 04       1996 	jp c,ls_close_error
040D49                   1997 
040D49                   1998 	; store sprite size
040D49 21 3E 10 04       1999 	ld hl,spr_size
040D4D 77                2000 	ld (hl),a
040D4E                   2001 
040D4E                   2002 	; set 4x4 pixel width
040D4E FE 04             2003 	cp SPR44
040D50 20 09             2004 	jr nz,ls_next1
040D52                   2005 
040D52 21 3D 10 04       2006 	ld hl,pixel_width
040D56 06 20             2007 	ld b,SPR44_width
040D58 70                2008 	ld (hl),b
040D59 18 21             2009 	jr ls_next4
040D5B                   2010 
040D5B                   2011 ls_next1:
040D5B                   2012 	; set 8x8 pixel width
040D5B FE 08             2013 	cp SPR88
040D5D 20 09             2014 	jr nz,ls_next2
040D5F                   2015 
040D5F 21 3D 10 04       2016 	ld hl,pixel_width
040D63 06 10             2017 	ld b,SPR88_width
040D65 70                2018 	ld (hl),b
040D66 18 14             2019 	jr ls_next4
040D68                   2020 
040D68                   2021 ls_next2:
040D68                   2022 
040D68                   2023 	; set 16x16 pixel width
040D68 FE 10             2024 	cp SPR1616
040D6A 20 09             2025 	jr nz,ls_next3
040D6C                   2026 
040D6C 21 3D 10 04       2027 	ld hl,pixel_width
040D70 06 08             2028 	ld b,SPR1616_width
040D72 70                2029 	ld (hl),b
040D73 18 07             2030 	jr ls_next4
040D75                   2031 
040D75                   2032 ls_next3:
040D75                   2033 
040D75 21 3D 10 04       2034 	ld hl,pixel_width
040D79 06 04             2035 	ld b,SPR3232_width
040D7B 70                2036 	ld (hl),b
040D7C                   2037 
040D7C                   2038 ls_next4:
040D7C                   2039 
040D7C 6F                2040 	ld l,a
040D7D 67                2041 	ld h,a
040D7E ED 6C             2042 	mlt hl ; HL = sprite length
040D80 E5                2043 	push hl
040D81                   2044 
040D81                   2045 	; get frames count
040D81 21 0C 11 04       2046 	ld hl,current_frame
040D85 46                2047 	ld b,(hl)
040D86                   2048 
040D86 E1                2049 	pop hl
040D87                   2050 
040D87 78                2051 	ld a,b
040D88 FE 00             2052 	cp 0
040D8A 28 07             2053 	jr z,ls_read_data
040D8C                   2054 
040D8C                   2055 	; de = size²
040D8C 11 00 04 00       2056 	ld de,ONE_FRAME_BUFFER_SIZE
040D90                   2057 ls_add_length:
040D90 19                2058 	add hl,de
040D91 10 FD             2059 	djnz ls_add_length
040D93                   2060 
040D93                   2061 ls_read_data:
040D93 E5                2062 	push hl
040D94 E5                2063 	push hl
040D95 D1                2064 	pop de
040D96 7B                2065 	ld a,e
040D97 21 15 11 04       2066 	ld hl,sprite_buffer
040D9B                   2067 	moscall mos_fread
040D9B 3E 1A             2067 		ld a,arg1
040D9D 49 CF             2067 		rst.lis $08
040D9F E1                2068 	pop hl
040DA0 7C                2069 	ld a,h
040DA1 BA                2070 	cp d
040DA2 20 08             2071 	jr nz,ls_close_error
040DA4 7D                2072 	ld a,l
040DA5 BB                2073 	cp e
040DA6 20 04             2074 	jr nz,ls_close_error
040DA8 C3 CB 0D 04       2075 	jp ls_close
040DAC                   2076 
040DAC                   2077 ls_close_error:
040DAC C5                2078 	push bc
040DAD                   2079 
040DAD                   2080 	; read error
040DAD CD A7 0E 04       2081 	call fn_print_file_error
040DB1                   2082 
040DB1 C1                2083 	pop bc
040DB2                   2084 
040DB2                   2085 	; close the file
040DB2                   2086 	moscall mos_fclose
040DB2 3E 0B             2086 		ld a,arg1
040DB4 49 CF             2086 		rst.lis $08
040DB6                   2087 
040DB6                   2088 	; reset current frame and coordinates of the drawing pixel
040DB6 21 3B 10 04       2089 	ld hl,xpix
040DBA AF                2090 	xor a
040DBB 77                2091 	ld (hl),a
040DBC 21 3C 10 04       2092 	ld hl,ypix
040DC0 77                2093 	ld (hl),a
040DC1 18 17             2094 	jr ls_exit
040DC3                   2095 
040DC3                   2096 ls_folder_error:
040DC3                   2097 	; write error
040DC3 CD E2 0E 04       2098 	call fn_print_folder_error
040DC7 C3 DA 0D 04       2099 	jp ls_exit
040DCB                   2100 
040DCB                   2101 ls_close:
040DCB                   2102 	; close the file
040DCB                   2103 	moscall mos_fclose
040DCB 3E 0B             2103 		ld a,arg1
040DCD 49 CF             2103 		rst.lis $08
040DCF                   2104 
040DCF                   2105 	; reset current frame and coordinates of the drawing pixel
040DCF 21 3B 10 04       2106 	ld hl,xpix
040DD3 AF                2107 	xor a
040DD4 77                2108 	ld (hl),a
040DD5 21 3C 10 04       2109 	ld hl,ypix
040DD9 77                2110 	ld (hl),a
040DDA                   2111 
040DDA                   2112 ls_exit:
040DDA CD C7 0F 04       2113 	call fn_show_spr_descr
040DDE CD 82 0F 04       2114 	call fn_change_frames_count
040DE2 C9                2115 	ret
040DE3                   2116 
040DE3                   2117 ls_file_error:
040DE3 CD A7 0E 04       2118 	call fn_print_file_error
040DE7 C9                2119 	ret
040DE8                   2120 
040DE8                   2121 ; save a sprite, giving its name (must be on spredit folder)
040DE8                   2122 fn_save_sprite:
040DE8                   2123 	; clear filename
040DE8 21 B1 10 04       2124 	ld hl,filename
040DEC 06 0C             2125 	ld b,12
040DEE AF                2126 	xor a
040DEF                   2127 
040DEF                   2128 ss_clear_filename:
040DEF 77                2129 	ld (hl),a
040DF0 23                2130 	inc hl
040DF1 10 FC             2131 	djnz ss_clear_filename
040DF3                   2132 
040DF3                   2133 	; get filename
040DF3 CD EC 0B 04       2134 	call fn_input_text8
040DF7                   2135 
040DF7                   2136 	; set path to home
040DF7 21 BE 10 04       2137 	ld hl,home_path
040DFB                   2138 	moscall mos_cd
040DFB 3E 03             2138 		ld a,arg1
040DFD 49 CF             2138 		rst.lis $08
040DFF                   2139 
040DFF                   2140 	; exit on error
040DFF FE 00             2141 	cp 0
040E01 C2 7F 0E 04       2142 	jp nz,ss_folder_error
040E05                   2143 
040E05                   2144 	; open the file for write
040E05 21 B1 10 04       2145 	ld hl,filename
040E09 0E 06             2146 	ld c,fa_create_new|fa_write
040E0B                   2147 	moscall mos_fopen
040E0B 3E 0A             2147 		ld a,arg1
040E0D 49 CF             2147 		rst.lis $08
040E0F                   2148 
040E0F                   2149 	; exit on error
040E0F FE 00             2150 	cp 0
040E11 CA A2 0E 04       2151 	jp z,ss_file_error
040E15                   2152 
040E15                   2153 	; filehandle -> C
040E15 4F                2154 	ld c,a
040E16                   2155 
040E16                   2156 	; store colors count in the file
040E16 06 40             2157 	ld b,MAX_COLORS
040E18                   2158 	moscall mos_fputc
040E18 3E 0D             2158 		ld a,arg1
040E1A 49 CF             2158 		rst.lis $08
040E1C                   2159 
040E1C                   2160 	; store frames count in the file
040E1C 21 0D 11 04       2161 	ld hl,frames_count
040E20 46                2162 	ld b,(hl)
040E21                   2163 	moscall mos_fputc
040E21 3E 0D             2163 		ld a,arg1
040E23 49 CF             2163 		rst.lis $08
040E25                   2164 
040E25                   2165 	; store sprite size in the file
040E25 21 3E 10 04       2166 	ld hl,spr_size
040E29 46                2167 	ld b,(hl)
040E2A                   2168 	moscall mos_fputc
040E2A 3E 0D             2168 		ld a,arg1
040E2C 49 CF             2168 		rst.lis $08
040E2E                   2169 
040E2E                   2170 	; de = size²
040E2E 68                2171 	ld l,b
040E2F 60                2172 	ld h,b
040E30 ED 6C             2173 	mlt hl ; HL = sprite length
040E32 E5                2174 	push hl
040E33                   2175 
040E33                   2176 	; get frames count
040E33 21 0C 11 04       2177 	ld hl,current_frame
040E37 46                2178 	ld b,(hl)
040E38                   2179 
040E38 E1                2180 	pop hl
040E39                   2181 
040E39 78                2182 	ld a,b
040E3A FE 00             2183 	cp 0
040E3C 28 07             2184 	jr z,ss_write_data
040E3E                   2185 
040E3E 11 00 04 00       2186 	ld de,ONE_FRAME_BUFFER_SIZE
040E42                   2187 ss_add_length:
040E42 19                2188 	add hl,de
040E43 10 FD             2189 	djnz ss_add_length
040E45                   2190 
040E45                   2191 ss_write_data:
040E45 E5                2192 	push hl
040E46 E5                2193 	push hl
040E47 D1                2194 	pop de
040E48 21 15 11 04       2195 	ld hl,sprite_buffer
040E4C                   2196 	moscall mos_fwrite
040E4C 3E 1B             2196 		ld a,arg1
040E4E 49 CF             2196 		rst.lis $08
040E50 E1                2197 	pop hl
040E51 7C                2198 	ld a,h
040E52 BA                2199 	cp d
040E53 20 08             2200 	jr nz,ss_close_error
040E55 7D                2201 	ld a,l
040E56 BB                2202 	cp e
040E57 20 04             2203 	jr nz,ss_close_error
040E59 C3 87 0E 04       2204 	jp ss_close
040E5D                   2205 
040E5D                   2206 ss_close_error:
040E5D C5                2207 	push bc
040E5E                   2208 
040E5E                   2209 	; write error
040E5E CD A7 0E 04       2210 	call fn_print_file_error
040E62                   2211 
040E62 C1                2212 	pop bc
040E63                   2213 
040E63                   2214 	; close the file
040E63                   2215 	moscall mos_fclose
040E63 3E 0B             2215 		ld a,arg1
040E65 49 CF             2215 		rst.lis $08
040E67                   2216 
040E67                   2217 	; reset current frame and coordinates of the drawing pixel
040E67 21 0D 11 04       2218 	ld hl,frames_count
040E6B 7E                2219 	ld a,(hl)
040E6C 3D                2220 	dec a
040E6D 21 0C 11 04       2221 	ld hl,current_frame
040E71 77                2222 	ld (hl),a
040E72 21 3B 10 04       2223 	ld hl,xpix
040E76 AF                2224 	xor a
040E77 77                2225 	ld (hl),a
040E78 21 3C 10 04       2226 	ld hl,ypix
040E7C 77                2227 	ld (hl),a
040E7D 18 22             2228 	jr ss_exit
040E7F                   2229 
040E7F                   2230 ss_folder_error:
040E7F                   2231 	; write error
040E7F CD E2 0E 04       2232 	call fn_print_folder_error
040E83 C3 A1 0E 04       2233 	jp ss_exit
040E87                   2234 
040E87                   2235 ss_close:
040E87                   2236 	; close the file
040E87                   2237 	moscall mos_fclose
040E87 3E 0B             2237 		ld a,arg1
040E89 49 CF             2237 		rst.lis $08
040E8B                   2238 
040E8B                   2239 	; reset current frame and coordinates of the drawing pixel
040E8B 21 0D 11 04       2240 	ld hl,frames_count
040E8F 7E                2241 	ld a,(hl)
040E90 3D                2242 	dec a
040E91 21 0C 11 04       2243 	ld hl,current_frame
040E95 77                2244 	ld (hl),a
040E96 21 3B 10 04       2245 	ld hl,xpix
040E9A AF                2246 	xor a
040E9B 77                2247 	ld (hl),a
040E9C 21 3C 10 04       2248 	ld hl,ypix
040EA0 77                2249 	ld (hl),a
040EA1                   2250 
040EA1                   2251 ss_exit:
040EA1 C9                2252 	ret
040EA2                   2253 
040EA2                   2254 ss_file_error:
040EA2 CD A7 0E 04       2255 	call fn_print_file_error
040EA6 C9                2256 	ret
040EA7                   2257 
040EA7                   2258 ; print 'file error'
040EA7                   2259 fn_print_file_error:
040EA7                   2260 	vdu 7
040EA7 3E 07             2260 		ld a,arg1
040EA9 49 D7             2260 		rst.lis $10
040EAB CD D9 0B 04       2261 	call fn_wait_key_released
040EAF                   2262 
040EAF                   2263 	; locate x,y
040EAF                   2264 	vdu 31
040EAF 3E 1F             2264 		ld a,arg1
040EB1 49 D7             2264 		rst.lis $10
040EB3                   2265 	vdu FILENAME_X
040EB3 3E 07             2265 		ld a,arg1
040EB5 49 D7             2265 		rst.lis $10
040EB7                   2266 	vdu FILENAME_Y
040EB7 3E 18             2266 		ld a,arg1
040EB9 49 D7             2266 		rst.lis $10
040EBB                   2267 
040EBB                   2268 	; print text
040EBB 21 DD 10 04       2269 	ld hl,file_error
040EBF 01 00 00 00       2270 	ld bc,0
040EC3 AF                2271 	xor a
040EC4 49 DF             2272 	rst.lis $18
040EC6                   2273 
040EC6 CD E5 0B 04       2274 	call fn_input_key
040ECA                   2275 
040ECA                   2276 	; locate x,y
040ECA                   2277 	vdu 31
040ECA 3E 1F             2277 		ld a,arg1
040ECC 49 D7             2277 		rst.lis $10
040ECE                   2278 	vdu FILENAME_X
040ECE 3E 07             2278 		ld a,arg1
040ED0 49 D7             2278 		rst.lis $10
040ED2                   2279 	vdu FILENAME_Y
040ED2 3E 18             2279 		ld a,arg1
040ED4 49 D7             2279 		rst.lis $10
040ED6                   2280 
040ED6                   2281 	; print text
040ED6 21 C6 10 04       2282 	ld hl,void_filename
040EDA 01 00 00 00       2283 	ld bc,0
040EDE AF                2284 	xor a
040EDF 49 DF             2285 	rst.lis $18
040EE1                   2286 
040EE1 C9                2287 	ret
040EE2                   2288 
040EE2                   2289 ; print 'folder error'
040EE2                   2290 fn_print_folder_error:
040EE2                   2291 	vdu 7
040EE2 3E 07             2291 		ld a,arg1
040EE4 49 D7             2291 		rst.lis $10
040EE6 CD D9 0B 04       2292 	call fn_wait_key_released
040EEA                   2293 
040EEA                   2294 	; locate x,y
040EEA                   2295 	vdu 31
040EEA 3E 1F             2295 		ld a,arg1
040EEC 49 D7             2295 		rst.lis $10
040EEE                   2296 	vdu FILENAME_X
040EEE 3E 07             2296 		ld a,arg1
040EF0 49 D7             2296 		rst.lis $10
040EF2                   2297 	vdu FILENAME_Y
040EF2 3E 18             2297 		ld a,arg1
040EF4 49 D7             2297 		rst.lis $10
040EF6                   2298 
040EF6                   2299 	; print text
040EF6 21 F4 10 04       2300 	ld hl,folder_error
040EFA 01 00 00 00       2301 	ld bc,0
040EFE AF                2302 	xor a
040EFF 49 DF             2303 	rst.lis $18
040F01                   2304 
040F01 CD E5 0B 04       2305 	call fn_input_key
040F05                   2306 
040F05                   2307 	; locate x,y
040F05                   2308 	vdu 31
040F05 3E 1F             2308 		ld a,arg1
040F07 49 D7             2308 		rst.lis $10
040F09                   2309 	vdu FILENAME_X
040F09 3E 07             2309 		ld a,arg1
040F0B 49 D7             2309 		rst.lis $10
040F0D                   2310 	vdu FILENAME_Y
040F0D 3E 18             2310 		ld a,arg1
040F0F 49 D7             2310 		rst.lis $10
040F11                   2311 
040F11                   2312 	; print text
040F11 21 C6 10 04       2313 	ld hl,void_filename
040F15 01 00 00 00       2314 	ld bc,0
040F19 AF                2315 	xor a
040F1A 49 DF             2316 	rst.lis $18
040F1C                   2317 
040F1C C9                2318 	ret
040F1D                   2319 
040F1D                   2320 ; refresh all the current sprite frame
040F1D                   2321 fn_refresh_sprite:
040F1D 06 00             2322 	ld b,0 ; B -> x cordinate
040F1F 0E 00             2323 	ld c,0 ; C -> y cordinate
040F21                   2324 
040F21                   2325 rs_loop:
040F21 C5                2326 	push bc
040F22                   2327 
040F22 21 3B 10 04       2328 	ld hl,xpix
040F26 70                2329 	ld (hl),b
040F27 21 3C 10 04       2330 	ld hl,ypix
040F2B 71                2331 	ld (hl),c
040F2C CD 4D 0A 04       2332 	call fn_draw_pixel_without_border
040F30                   2333 
040F30 C1                2334 	pop bc
040F31                   2335 
040F31 04                2336 	inc b
040F32 21 3E 10 04       2337 	ld hl,spr_size
040F36 7E                2338 	ld a,(hl)
040F37 B8                2339 	cp b
040F38 28 04             2340 	jr z,rs_next_line
040F3A C3 21 0F 04       2341 	jp rs_loop
040F3E                   2342 
040F3E                   2343 rs_next_line:
040F3E 06 00             2344 	ld b,0
040F40 0C                2345 	inc c
040F41 21 3E 10 04       2346 	ld hl,spr_size
040F45 7E                2347 	ld a,(hl)
040F46 B9                2348 	cp c
040F47 28 04             2349 	jr z,rs_end
040F49 C3 21 0F 04       2350 	jp rs_loop
040F4D                   2351 
040F4D                   2352 rs_end:
040F4D AF                2353 	xor a
040F4E 21 3B 10 04       2354 	ld hl,xpix
040F52 77                2355 	ld (hl),a
040F53 21 3C 10 04       2356 	ld hl,ypix
040F57 77                2357 	ld (hl),a
040F58 CD 39 0A 04       2358 	call fn_draw_pixel_with_border
040F5C                   2359 
040F5C C9                2360 	ret
040F5D                   2361 
040F5D                   2362 fn_change_frame:
040F5D 21 0C 11 04       2363 	ld hl,current_frame
040F61 7E                2364 	ld a,(hl)
040F62 3C                2365 	inc a
040F63 C6 30             2366 	add a,48
040F65 21 0E 11 04       2367 	ld hl,current_frame_ascii
040F69 77                2368 	ld (hl),a
040F6A                   2369 
040F6A                   2370 	; locate 21,3
040F6A                   2371 	vdu 31
040F6A 3E 1F             2371 		ld a,arg1
040F6C 49 D7             2371 		rst.lis $10
040F6E                   2372 	vdu 21
040F6E 3E 15             2372 		ld a,arg1
040F70 49 D7             2372 		rst.lis $10
040F72                   2373 	vdu 3
040F72 3E 03             2373 		ld a,arg1
040F74 49 D7             2373 		rst.lis $10
040F76                   2374 
040F76                   2375 	; print text
040F76 21 0E 11 04       2376 	ld hl,current_frame_ascii
040F7A 01 00 00 00       2377 	ld bc,0
040F7E AF                2378 	xor a
040F7F 49 DF             2379 	rst.lis $18
040F81                   2380 
040F81 C9                2381 	ret
040F82                   2382 
040F82                   2383 fn_change_frames_count:
040F82 21 0D 11 04       2384 	ld hl,frames_count
040F86 7E                2385 	ld a,(hl)
040F87 C6 30             2386 	add a,48
040F89 21 10 11 04       2387 	ld hl,frames_count_ascii
040F8D 77                2388 	ld (hl),a
040F8E                   2389 
040F8E                   2390 	; locate 23,3
040F8E                   2391 	vdu 31
040F8E 3E 1F             2391 		ld a,arg1
040F90 49 D7             2391 		rst.lis $10
040F92                   2392 	vdu 23
040F92 3E 17             2392 		ld a,arg1
040F94 49 D7             2392 		rst.lis $10
040F96                   2393 	vdu 3
040F96 3E 03             2393 		ld a,arg1
040F98 49 D7             2393 		rst.lis $10
040F9A                   2394 
040F9A                   2395 	; print text
040F9A 21 10 11 04       2396 	ld hl,frames_count_ascii
040F9E 01 00 00 00       2397 	ld bc,0
040FA2 AF                2398 	xor a
040FA3 49 DF             2399 	rst.lis $18
040FA5                   2400 
040FA5 C9                2401 	ret
040FA6                   2402 
040FA6                   2403 ; slowdown (wait delay)
040FA6                   2404 fn_slowdown:
040FA6 DD 21 12 11 04    2405 	ld ix,keydata
040FAB DD 7E 02          2406 	ld a,(ix+2)
040FAE E6 02             2407 	and 2
040FB0 FE 02             2408 	cp 2 ; shift key to disable delay
040FB2 C8                2409 	ret z
040FB3                   2410 
040FB3                   2411 	moscall mos_sysvars
040FB3 3E 08             2411 		ld a,arg1
040FB5 49 CF             2411 		rst.lis $08
040FB7 DD 4E 00          2412 	ld c,(ix+sysvar_time)
040FBA                   2413 
040FBA                   2414 sd_loop:
040FBA                   2415 	moscall mos_sysvars
040FBA 3E 08             2415 		ld a,arg1
040FBC 49 CF             2415 		rst.lis $08
040FBE DD 7E 00          2416 	ld a,(ix+sysvar_time)
040FC1 91                2417 	sub c
040FC2 FE 14             2418 	cp SLOWDOWN_DELAY
040FC4 20 F4             2419 	jr nz,sd_loop
040FC6 C9                2420 	ret
040FC7                   2421 
040FC7                   2422 fn_show_spr_descr:
040FC7                   2423 	; locate 15,3
040FC7                   2424 	vdu 31
040FC7 3E 1F             2424 		ld a,arg1
040FC9 49 D7             2424 		rst.lis $10
040FCB                   2425 	vdu 15
040FCB 3E 0F             2425 		ld a,arg1
040FCD 49 D7             2425 		rst.lis $10
040FCF                   2426 	vdu 3
040FCF 3E 03             2426 		ld a,arg1
040FD1 49 D7             2426 		rst.lis $10
040FD3                   2427 
040FD3                   2428 	; print text
040FD3 21 85 10 04       2429 	ld hl,spr_descr
040FD7 01 00 00 00       2430 	ld bc,0
040FDB AF                2431 	xor a
040FDC 49 DF             2432 	rst.lis $18
040FDE                   2433 
040FDE                   2434 	; locate 15,5
040FDE                   2435 	vdu 31
040FDE 3E 1F             2435 		ld a,arg1
040FE0 49 D7             2435 		rst.lis $10
040FE2                   2436 	vdu 15
040FE2 3E 0F             2436 		ld a,arg1
040FE4 49 D7             2436 		rst.lis $10
040FE6                   2437 	vdu 5
040FE6 3E 05             2437 		ld a,arg1
040FE8 49 D7             2437 		rst.lis $10
040FEA                   2438 
040FEA                   2439 	; check for sprite size...
040FEA 21 3E 10 04       2440 	ld hl,spr_size
040FEE 7E                2441 	ld a,(hl)
040FEF                   2442 
040FEF FE 04             2443 	cp 4
040FF1 20 0C             2444 	jr nz,ssd_8x8
040FF3                   2445 
040FF3                   2446 	; print text 4x4
040FF3 21 8F 10 04       2447 	ld hl,spr_descr1
040FF7 01 00 00 00       2448 	ld bc,0
040FFB AF                2449 	xor a
040FFC 49 DF             2450 	rst.lis $18
040FFE C9                2451 	ret
040FFF                   2452 
040FFF                   2453 ssd_8x8:
040FFF FE 08             2454 	cp 8
041001 20 0C             2455 	jr nz,ssd_16x16
041003                   2456 
041003                   2457 	; print text 8x8
041003 21 95 10 04       2458 	ld hl,spr_descr2
041007 01 00 00 00       2459 	ld bc,0
04100B AF                2460 	xor a
04100C 49 DF             2461 	rst.lis $18
04100E C9                2462 	ret
04100F                   2463 
04100F                   2464 ssd_16x16:
04100F FE 10             2465 	cp 16
041011 20 0C             2466 	jr nz,ssd_32x32
041013                   2467 
041013                   2468 	; print text 16x16
041013 21 9B 10 04       2469 	ld hl,spr_descr3
041017 01 00 00 00       2470 	ld bc,0
04101B AF                2471 	xor a
04101C 49 DF             2472 	rst.lis $18
04101E C9                2473 	ret
04101F                   2474 
04101F                   2475 ssd_32x32:
04101F                   2476 	; print text 32x32
04101F 21 A1 10 04       2477 	ld hl,spr_descr4
041023 01 00 00 00       2478 	ld bc,0
041027 AF                2479 	xor a
041028 49 DF             2480 	rst.lis $18
04102A                   2481 
04102A C9                2482 	ret
04102B                   2483 ;======================================================================
04102B                   2484 
04102B                   2485 ; coordinates for rectangles
04102B                   2486 x1:
04102B 00 00             2487 	dw $0000
04102D                   2488 y1:
04102D 00 00             2489 	dw $0000
04102F                   2490 x2:
04102F 00 00             2491 	dw $0000
041031                   2492 y2:
041031 00 00             2493 	dw $0000
041033                   2494 
041033                   2495 ; coordinates of the edited sprite
041033                   2496 xs1:
041033 5F 00             2497 	dw 95
041035                   2498 ys1:
041035 37 00             2499 	dw 55
041037                   2500 xs2:
041037 E0 00             2501 	dw 224
041039                   2502 ys2:
041039 B8 00             2503 	dw 184
04103B                   2504 
04103B                   2505 ; coordinates of active pixels to draw
04103B                   2506 xpix:
04103B 00                2507 	db 0
04103C                   2508 ypix:
04103C 00                2509 	db 0
04103D                   2510 
04103D                   2511 ; width of a pixel in the sprite
04103D                   2512 pixel_width:
04103D 00                2513 	db 0
04103E                   2514 
04103E                   2515 ; sprite size, in resized pixels
04103E                   2516 spr_size:
04103E 00                2517 	db 0
04103F                   2518 
04103F                   2519 ; pen color (0-63)
04103F                   2520 current_pen:
04103F 00                2521 	db 0
041040                   2522 
041040                   2523 ; texts for 1st menu
041040                   2524 title:
041040 53 50 52 2D 45 44 2525 	db "SPR-EDIT",0
       49 54 00          
041049                   2526 
041049                   2527 menu1:
041049 31 29 20 34 78 34 2528 	db "1) 4x4 Sprite",0
       20 53 70 72 69 74 
       65 00             
041057                   2529 menu2:
041057 32 29 20 38 78 38 2530 	db "2) 8x8 Sprite",0
       20 53 70 72 69 74 
       65 00             
041065                   2531 menu3:
041065 33 29 20 31 36 78 2532 	db "3) 16x16 Sprite",0
       31 36 20 53 70 72 
       69 74 65 00       
041075                   2533 menu4:
041075 34 29 20 33 32 78 2534 	db "4) 32x32 Sprite",0
       33 32 20 53 70 72 
       69 74 65 00       
041085                   2535 
041085                   2536 ; descriptions of sprites
041085                   2537 spr_descr:
041085 46 72 61 6D 65 3A 2538 	db "Frame:1/1",0
       31 2F 31 00       
04108F                   2539 spr_descr1:
04108F 34 78 34 20 20 00 2540 	db "4x4  ",0
041095                   2541 spr_descr2:
041095 38 78 38 20 20 00 2542 	db "8x8  ",0
04109B                   2543 spr_descr3:
04109B 31 36 78 31 36 00 2544 	db "16x16",0
0410A1                   2545 spr_descr4:
0410A1 33 32 78 33 32 00 2546 	db "32x32",0
0410A7                   2547 
0410A7                   2548 ; label before filename
0410A7                   2549 filename_label:
0410A7 46 69 6C 65 6E 61 2550 	db "Filename:",0
       6D 65 3A 00       
0410B1                   2551 
0410B1                   2552 ; filename without extension
0410B1                   2553 filename:
0410B1 00 00 00 00 00 00 2554 	ds 13,0
       00 00 00 00 00 00 
       00                
0410BE                   2555 
0410BE                   2556 home_path:
0410BE 2F 68 6F 6D 65 00 2557 	db "/home",0
0410C4                   2558 
0410C4                   2559 ; single space char to print
0410C4                   2560 spacechar:
0410C4 20 00             2561 	db " ",0
0410C6                   2562 
0410C6                   2563 ; spaces to remove filename label
0410C6                   2564 void_filename:
0410C6 20 20 20 20 20 20 2565 	db "                      ",0
       20 20 20 20 20 20 
       20 20 20 20 20 20 
       20 20 20 20 00    
0410DD                   2566 
0410DD                   2567 ; file error message
0410DD                   2568 file_error:
0410DD 46 69 6C 65 20 65 2569 	db "File error !          ",0
       72 72 6F 72 20 21 
       20 20 20 20 20 20 
       20 20 20 20 00    
0410F4                   2570 
0410F4                   2571 ; folder error message
0410F4                   2572 folder_error:
0410F4 46 6F 6C 64 65 72 2573 	db "Folder error !        ",0
       20 65 72 72 6F 72 
       20 21 20 20 20 20 
       20 20 20 20 00    
04110B                   2574 
04110B                   2575 ; number of colors
04110B                   2576 colors_count:
04110B 00                2577 	db 0
04110C                   2578 
04110C                   2579 ; current frame
04110C                   2580 current_frame:
04110C 00                2581 	db 0
04110D                   2582 
04110D                   2583 ; frames count
04110D                   2584 frames_count:
04110D 00                2585 	db 0
04110E                   2586 
04110E                   2587 current_frame_ascii:
04110E 30 00             2588 	db '0',0
041110                   2589 
041110                   2590 frames_count_ascii:
041110 30 00             2591 	db '0',0
041112                   2592 
041112                   2593 ; keycode, keydown & keymods are stored here
041112                   2594 keydata:
041112 00 00 00          2595 	db 0,0,0
041115                   2596 
041115                   2597 ; buffer for the current sprite
041115                   2598 sprite_buffer:
041115 00 00 00 00 00 00 2599 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
041115 00 00 00 00 00 00 2599 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
041115 00 00 00 00 00 00 2599 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
041115 00 00 00 00 00 00 2599 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
041115 00 00 00 00 00 00 2599 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
041115 00 00 00 00 00 00 2599 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00             
043115                   2600 
043115                   2601 rgb_palette:
043115 00 00 00          2602 	db $00,$00,$00
043118 AA 00 00          2603 	db $AA,$00,$00
04311B 00 AA 00          2604 	db $00,$AA,$00
04311E AA AA 00          2605 	db $AA,$AA,$00
043121 00 00 AA          2606 	db $00,$00,$AA
043124 AA 00 AA          2607 	db $AA,$00,$AA
043127 00 AA AA          2608 	db $00,$AA,$AA
04312A AA AA AA          2609 	db $AA,$AA,$AA
04312D                   2610 
04312D 55 55 55          2611 	db $55,$55,$55
043130 FF 00 00          2612 	db $FF,$00,$00
043133 00 FF 00          2613 	db $00,$FF,$00
043136 FF FF 00          2614 	db $FF,$FF,$00
043139 00 00 FF          2615 	db $00,$00,$FF
04313C FF 00 FF          2616 	db $FF,$00,$FF
04313F 00 FF FF          2617 	db $00,$FF,$FF
043142 FF FF FF          2618 	db $FF,$FF,$FF
043145                   2619 
043145 00 00 55          2620 	db $00,$00,$55
043148 00 55 00          2621 	db $00,$55,$00
04314B 00 55 55          2622 	db $00,$55,$55
04314E 00 55 AA          2623 	db $00,$55,$AA
043151 00 55 FF          2624 	db $00,$55,$FF
043154 00 AA 55          2625 	db $00,$AA,$55
043157 00 AA FF          2626 	db $00,$AA,$FF
04315A 00 FF 55          2627 	db $00,$FF,$55
04315D                   2628 
04315D 00 FF AA          2629 	db $00,$FF,$AA
043160 55 00 00          2630 	db $55,$00,$00
043163 55 00 55          2631 	db $55,$00,$55
043166 55 00 AA          2632 	db $55,$00,$AA
043169 55 00 FF          2633 	db $55,$00,$FF
04316C 55 55 00          2634 	db $55,$55,$00
04316F 55 55 AA          2635 	db $55,$55,$AA
043172 55 55 FF          2636 	db $55,$55,$FF
043175                   2637 
043175 55 AA 00          2638 	db $55,$AA,$00
043178 55 AA 55          2639 	db $55,$AA,$55
04317B 55 AA AA          2640 	db $55,$AA,$AA
04317E 55 AA FF          2641 	db $55,$AA,$FF
043181 55 FF 00          2642 	db $55,$FF,$00
043184 55 FF 55          2643 	db $55,$FF,$55
043187 55 FF AA          2644 	db $55,$FF,$AA
04318A 55 FF FF          2645 	db $55,$FF,$FF
04318D                   2646 
04318D AA 00 55          2647 	db $AA,$00,$55
043190 AA 00 FF          2648 	db $AA,$00,$FF
043193 AA 55 00          2649 	db $AA,$55,$00
043196 AA 55 55          2650 	db $AA,$55,$55
043199 AA 55 AA          2651 	db $AA,$55,$AA
04319C AA 55 FF          2652 	db $AA,$55,$FF
04319F AA AA 55          2653 	db $AA,$AA,$55
0431A2 AA AA FF          2654 	db $AA,$AA,$FF
0431A5                   2655 
0431A5 AA FF 00          2656 	db $AA,$FF,$00
0431A8 AA FF 55          2657 	db $AA,$FF,$55
0431AB AA FF AA          2658 	db $AA,$FF,$AA
0431AE AA FF FF          2659 	db $AA,$FF,$FF
0431B1 FF 00 55          2660 	db $FF,$00,$55
0431B4 FF 00 AA          2661 	db $FF,$00,$AA
0431B7 FF 55 00          2662 	db $FF,$55,$00
0431BA FF 55 55          2663 	db $FF,$55,$55
0431BD                   2664 
0431BD FF 55 AA          2665 	db $FF,$55,$AA
0431C0 FF 55 FF          2666 	db $FF,$55,$FF
0431C3 FF AA 00          2667 	db $FF,$AA,$00
0431C6 FF AA 55          2668 	db $FF,$AA,$55
0431C9 FF AA AA          2669 	db $FF,$AA,$AA
0431CC FF AA FF          2670 	db $FF,$AA,$FF
0431CF FF FF 55          2671 	db $FF,$FF,$55
0431D2 FF FF AA          2672 	db $FF,$FF,$AA
0431D5                   2673 
0431D5                   2674 ; sprite structure:
0431D5                   2675 ; =================
0431D5                   2676 ; colors_count  :   byte
0431D5                   2677 ; frames count	:	byte
0431D5                   2678 ; spr size		:	byte
0431D5                   2679 ; data			:   width x height bytes of colors
0431D5                   2680 
0431D5                   2681 
0431D5                   2682 ; TODO:
0431D5                   2683 ;---------
0431D5                   2684 ; add/remove frames must be done correctly
0431D5                   2685 ; read animations with 'p' key
0431D5                   2686 ; create a help text file with keyboard shorcuts list
0431D5                   2687 ; solve the 'copy frame' bug
0431D5                   2688 ; solve the bug of frames in fn_load/save sprite
