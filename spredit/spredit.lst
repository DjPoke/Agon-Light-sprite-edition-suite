PC     Output            Line Source
040000                   0001 ; spredit.asm
040000                   0002 ;
040000                   0003 ; by B.Vignoli
040000                   0004 ; MIT 2023
040000                   0005 ;
040000                   0006 
040000                   0007 .assume adl=1
040000                   0008 .org $040000
040000                   0009 
040000 C3 4D 00 04       0010 	jp start
040004                   0011 
040004                   0012 ; MOS header
040004 FF FF FF FF FF FF 0013 .align 64
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
040040 4D 4F 53 00 01    0014 .db "MOS",0,1
040045                   0015 
040045                   0016 	include "mos_api.inc"
040045                   0001 ;
040045                   0002 ; Title:	AGON MOS - API for user projects
040045                   0003 ; Author:	Dean Belfield
040045                   0004 ; Created:	03/08/2022
040045                   0005 ; Last Updated:	10/08/2023
040045                   0006 ;
040045                   0007 ; Modinfo:
040045                   0008 ; 05/08/2022:	Added mos_feof
040045                   0009 ; 09/08/2022:	Added system variables: cursorX, cursorY
040045                   0010 ; 18/08/2022:	Added system variables: scrchar, scrpixel, audioChannel, audioSuccess, vpd_pflags
040045                   0011 ; 05/09/2022:	Added mos_ren, vdp_pflag_mode
040045                   0012 ; 24/09/2022:	Added mos_getError, mos_mkdir
040045                   0013 ; 13/10/2022:	Added mos_oscli
040045                   0014 ; 23/02/2023:	Added more sysvars, fixed typo in sysvar_audioSuccess, offsets for sysvar_scrCols, sysvar_scrRows
040045                   0015 ; 04/03/2023:	Added sysvar_scrpixelIndex
040045                   0016 ; 08/03/2023:	Renamed sysvar_keycode to sysvar_keyascii, added sysvar_vkeycode
040045                   0017 ; 15/03/2023:	Added mos_copy, mos_getrtc, mos_setrtc, rtc, vdp_pflag_rtc
040045                   0018 ; 21/03/2023:	Added mos_setintvector, sysvars for keyboard status, vdu codes for vdp
040045                   0019 ; 22/03/2023:	The VDP commands are now indexed from 0x80
040045                   0020 ; 29/03/2023:	Added mos_uopen, mos_uclose, mos_ugetc, mos_uputc
040045                   0021 ; 13/04/2023:	Added FatFS file structures (FFOBJID, FIL, DIR, FILINFO)
040045                   0022 ; 15/04/2023:	Added mos_getfil, mos_fread, mos_fwrite and mos_flseek
040045                   0023 ; 19/05/2023:	Added sysvar_scrMode
040045                   0024 ; 05/06/2023:	Added sysvar_rtcEnable
040045                   0025 ; 03/08/2023:	Added mos_setkbvector
040045                   0026 ; 10/08/2023:	Added mos_getkbmap
040045                   0027 
040045                   0028 ; VDP control (VDU 23, 0, n)
040045                   0029 ;
040045                   0030 vdp_gp:			EQU 	80h
040045                   0031 vdp_keycode:		EQU 	81h
040045                   0032 vdp_cursor:		EQU	82h
040045                   0033 vdp_scrchar:		EQU	83h
040045                   0034 vdp_scrpixel:		EQU	84h
040045                   0035 vdp_audio:		EQU	85h
040045                   0036 vdp_mode:		EQU	86h
040045                   0037 vdp_rtc:		EQU	87h
040045                   0038 vdp_keystate:		EQU	88h
040045                   0039 vdp_logicalcoords:	EQU	C0h
040045                   0040 vdp_terminalmode:	EQU	FFh
040045                   0041 
040045                   0042 ; MOS high level functions
040045                   0043 ;
040045                   0044 mos_getkey:		EQU	00h
040045                   0045 mos_load:		EQU	01h
040045                   0046 mos_save:		EQU	02h
040045                   0047 mos_cd:			EQU	03h
040045                   0048 mos_dir:		EQU	04h
040045                   0049 mos_del:		EQU	05h
040045                   0050 mos_ren:		EQU	06h
040045                   0051 mos_mkdir:		EQU	07h
040045                   0052 mos_sysvars:		EQU	08h
040045                   0053 mos_editline:		EQU	09h
040045                   0054 mos_fopen:		EQU	0Ah
040045                   0055 mos_fclose:		EQU	0Bh
040045                   0056 mos_fgetc:		EQU	0Ch
040045                   0057 mos_fputc:		EQU	0Dh
040045                   0058 mos_feof:		EQU	0Eh
040045                   0059 mos_getError:		EQU	0Fh
040045                   0060 mos_oscli:		EQU	10h
040045                   0061 mos_copy:		EQU	11h
040045                   0062 mos_getrtc:		EQU	12h
040045                   0063 mos_setrtc:		EQU	13h
040045                   0064 mos_setintvector:	EQU	14h
040045                   0065 mos_uopen:		EQU	15h
040045                   0066 mos_uclose:		EQU	16h
040045                   0067 mos_ugetc:		EQU	17h
040045                   0068 mos_uputc:		EQU 	18h
040045                   0069 mos_getfil:		EQU	19h
040045                   0070 mos_fread:		EQU	1Ah
040045                   0071 mos_fwrite:		EQU	1Bh
040045                   0072 mos_flseek:		EQU	1Ch
040045                   0073 mos_setkbvector:	EQU	1Dh
040045                   0074 mos_getkbmap:		EQU	1Eh
040045                   0075 
040045                   0076 ; FatFS file access functions
040045                   0077 ;
040045                   0078 ffs_fopen:		EQU	80h
040045                   0079 ffs_fclose:		EQU	81h
040045                   0080 ffs_fread:		EQU	82h
040045                   0081 ffs_fwrite:		EQU	83h
040045                   0082 ffs_flseek:		EQU	84h
040045                   0083 ffs_ftruncate:		EQU	85h
040045                   0084 ffs_fsync:		EQU	86h
040045                   0085 ffs_fforward:		EQU	87h
040045                   0086 ffs_fexpand:		EQU	88h
040045                   0087 ffs_fgets:		EQU	89h
040045                   0088 ffs_fputc:		EQU	8Ah
040045                   0089 ffs_fputs:		EQU	8Bh
040045                   0090 ffs_fprintf:		EQU	8Ch
040045                   0091 ffs_ftell:		EQU	8Dh
040045                   0092 ffs_feof:		EQU	8Eh
040045                   0093 ffs_fsize:		EQU	8Fh
040045                   0094 ffs_ferror:		EQU	90h
040045                   0095 
040045                   0096 ; FatFS directory access functions
040045                   0097 ;
040045                   0098 ffs_dopen:		EQU	91h
040045                   0099 ffs_dclose:		EQU	92h
040045                   0100 ffs_dread:		EQU	93h
040045                   0101 ffs_dfindfirst:		EQU	94h
040045                   0102 ffs_dfindnext:		EQU	95h
040045                   0103 
040045                   0104 ; FatFS file and directory management functions
040045                   0105 ;
040045                   0106 ffs_stat:		EQU	96h
040045                   0107 ffs_unlink:		EQU	97h
040045                   0108 ffs_rename:		EQU	98h
040045                   0109 ffs_chmod:		EQU	99h
040045                   0110 ffs_utime:		EQU	9Ah
040045                   0111 ffs_mkdir:		EQU	9Bh
040045                   0112 ffs_chdir:		EQU	9Ch
040045                   0113 ffs_chdrive:		EQU	9Dh
040045                   0114 ffs_getcwd:		EQU	9Eh
040045                   0115 
040045                   0116 ; FatFS volume management and system configuration functions
040045                   0117 ;
040045                   0118 ffs_mount:		EQU	9Fh
040045                   0119 ffs_mkfs:		EQU	A0h
040045                   0120 ffs_fdisk:		EQU	A1h
040045                   0121 ffs_getfree:		EQU	A2h
040045                   0122 ffs_getlabel:		EQU	A3h
040045                   0123 ffs_setlabel:		EQU	A4h
040045                   0124 ffs_setcp:		EQU	A5h
040045                   0125 
040045                   0126 ; File access modes
040045                   0127 ;
040045                   0128 fa_read:		EQU	01h
040045                   0129 fa_write:		EQU	02h
040045                   0130 fa_open_existing:	EQU	00h
040045                   0131 fa_create_new:		EQU	04h
040045                   0132 fa_create_always:	EQU	08h
040045                   0133 fa_open_always:		EQU	10h
040045                   0134 fa_open_append:		EQU	30h
040045                   0135 
040045                   0136 ; System variable indexes for api_sysvars
040045                   0137 ; Index into _sysvars in globals.asm
040045                   0138 ;
040045                   0139 sysvar_time:		EQU	00h	; 4: Clock timer in centiseconds (incremented by 2 every VBLANK)
040045                   0140 sysvar_vpd_pflags:	EQU	04h	; 1: Flags to indicate completion of VDP commands
040045                   0141 sysvar_keyascii:	EQU	05h	; 1: ASCII keycode, or 0 if no key is pressed
040045                   0142 sysvar_keymods:		EQU	06h	; 1: Keycode modifiers
040045                   0143 sysvar_cursorX:		EQU	07h	; 1: Cursor X position
040045                   0144 sysvar_cursorY:		EQU	08h	; 1: Cursor Y position
040045                   0145 sysvar_scrchar:		EQU	09h	; 1: Character read from screen
040045                   0146 sysvar_scrpixel:	EQU	0Ah	; 3: Pixel data read from screen (R,B,G)
040045                   0147 sysvar_audioChannel:	EQU	0Dh	; 1: Audio channel
040045                   0148 sysvar_audioSuccess:	EQU	0Eh	; 1: Audio channel note queued (0 = no, 1 = yes)
040045                   0149 sysvar_scrWidth:	EQU	0Fh	; 2: Screen width in pixels
040045                   0150 sysvar_scrHeight:	EQU	11h	; 2: Screen height in pixels
040045                   0151 sysvar_scrCols:		EQU	13h	; 1: Screen columns in characters
040045                   0152 sysvar_scrRows:		EQU	14h	; 1: Screen rows in characters
040045                   0153 sysvar_scrColours:	EQU	15h	; 1: Number of colours displayed
040045                   0154 sysvar_scrpixelIndex:	EQU	16h	; 1: Index of pixel data read from screen
040045                   0155 sysvar_vkeycode:	EQU	17h	; 1: Virtual key code from FabGL
040045                   0156 sysvar_vkeydown:	EQU	18h	; 1: Virtual key state from FabGL (0=up, 1=down)
040045                   0157 sysvar_vkeycount:	EQU	19h	; 1: Incremented every time a key packet is received
040045                   0158 sysvar_rtc:		EQU	1Ah	; 6: Real time clock data
040045                   0159 sysvar_spare:		EQU	20h	; 2: Spare, previously used by rtc
040045                   0160 sysvar_keydelay:	EQU	22h	; 2: Keyboard repeat delay
040045                   0161 sysvar_keyrate:		EQU	24h	; 2: Keyboard repeat reat
040045                   0162 sysvar_keyled:		EQU	26h	; 1: Keyboard LED status
040045                   0163 sysvar_scrMode:		EQU	27h	; 1: Screen mode
040045                   0164 sysvar_rtcEnable:	EQU	28h	; 1: RTC enable flag (0: disabled, 1: use ESP32 RTC)
040045                   0165 
040045                   0166 ; Flags for the VPD protocol
040045                   0167 ;
040045                   0168 vdp_pflag_cursor:	EQU	00000001b
040045                   0169 vdp_pflag_scrchar:	EQU	00000010b
040045                   0170 vdp_pflag_point:	EQU	00000100b
040045                   0171 vdp_pflag_audio:	EQU	00001000b
040045                   0172 vdp_pflag_mode:		EQU	00010000b
040045                   0173 vdp_pflag_rtc:		EQU	00100000b
040045                   0174 
040045                   0175 ;
040045                   0176 ; Macro for calling the API
040045                   0177 ; Parameters:
040045                   0178 ; - function: One of the function numbers listed above
040045                   0179 ;
040045                   0180 	MACRO moscall function
040045                   0181 		LD	A, function
040045                   0182 		RST.LIS	08h
040045                   0183 	ENDMACRO
040045                   0184 
040045                   0185 	MACRO vdu function
040045                   0186 		LD	A, function
040045                   0187 		RST.LIS	10h
040045                   0188 	ENDMACRO
040045                   0189 
040045                   0190 	MACRO vdu_a
040045                   0191 		RST.LIS	10h
040045                   0192 	ENDMACRO
040045                   0017 
040045                   0018 MAX_COLORS:		 	equ 64
040045                   0019 COLOR_MIN:	 		equ 0
040045                   0020 COLOR_MAX:	 		equ 63
040045                   0021 
040045                   0022 MAX_FRAMES:			equ 8
040045                   0023 
040045                   0024 COLOR_WHITE:		equ 15
040045                   0025 COLOR_GREY:			equ 7
040045                   0026 COLOR_BLACK:		equ 0
040045                   0027 
040045                   0028 TITLE_X: 	equ 17
040045                   0029 TITLE_Y: 	equ 2
040045                   0030 MENU_X: 	equ 13
040045                   0031 MENU1_Y: 	equ 8
040045                   0032 MENU2_Y: 	equ 12
040045                   0033 MENU3_Y: 	equ 16
040045                   0034 MENU4_Y: 	equ 20
040045                   0035 MENU5_Y: 	equ 24
040045                   0036 FILENAME_X: equ 7
040045                   0037 FILENAME_Y: equ 24
040045                   0038 
040045                   0039 SPR44: 		equ 4
040045                   0040 SPR88: 		equ 8
040045                   0041 SPR1616: 	equ 16
040045                   0042 SPR3232: 	equ 32
040045                   0043 
040045                   0044 SPR44_width: 	equ 32
040045                   0045 SPR88_width: 	equ 16
040045                   0046 SPR1616_width: 	equ 8
040045                   0047 SPR3232_width: 	equ 4
040045                   0048 
040045                   0049 BUFFER_SIZE:			equ 8192 ; 8 frames
040045                   0050 ONE_FRAME_BUFFER_SIZE:	equ 1024
040045                   0051 
040045                   0052 SLOWDOWN_DELAY:	equ 20
040045                   0053 
040045                   0054 KEY_SPACE: equ -99
040045                   0055 KEY_UP: equ -58
040045                   0056 KEY_DOWN: equ -42
040045                   0057 KEY_LEFT: equ -26
040045                   0058 KEY_RIGHT: equ -122
040045                   0059 KEY_DELETE: equ -90
040045                   0060 KEY_TAB: equ -97
040045                   0061 KEY_N: equ -86
040045                   0062 KEY_C: equ -83
040045                   0063 KEY_BACKSPACE: equ -48
040045                   0064 KEY_PGUP: equ -64
040045                   0065 KEY_PGDOWN: equ -79
040045                   0066 KEY_L: equ -87
040045                   0067 KEY_S: equ -82
040045                   0068 KEY_E: equ -35
040045                   0069 KEY_R: equ -52
040045                   0070 KEY_F: equ -68
040045                   0071 KEY_M: equ -102
040045                   0072 KEY_ESCAPE: equ -113
040045                   0073 KEY_F1: equ -114
040045                   0074 KEY_F2: equ -115
040045                   0075 KEY_F3: equ -116
040045                   0076 KEY_F4: equ -21
040045                   0077 KEY_RETURN: equ -74
040045                   0078 
040045                   0079 BITLOOKUP:
040045 01 02 04 08       0080 	DB 01h,02h,04h,08h
040049 10 20 40 80       0081 	DB 10h,20h,40h,80h
04004D                   0082 
04004D                   0083 ;======================================================================
04004D                   0084 start:
04004D F5                0085 	push af
04004E C5                0086 	push bc
04004F D5                0087 	push de
040050 DD E5             0088 	push ix
040052 FD E5             0089 	push iy
040054                   0090 
040054                   0091 	; set mode 8 (320x240x64)
040054                   0092 	vdu 22
040054 3E 16             0092 		LD	A, function
040056 49 D7             0092 		RST.LIS	10h
040058                   0093 	vdu 8
040058 3E 08             0093 		LD	A, function
04005A 49 D7             0093 		RST.LIS	10h
04005C                   0094 
04005C                   0095 	; set logical coordinates system
04005C                   0096 	vdu 23
04005C 3E 17             0096 		LD	A, function
04005E 49 D7             0096 		RST.LIS	10h
040060                   0097 	vdu 0
040060 3E 00             0097 		LD	A, function
040062 49 D7             0097 		RST.LIS	10h
040064                   0098 	vdu $c0
040064 3E C0             0098 		LD	A, function
040066 49 D7             0098 		RST.LIS	10h
040068                   0099 	vdu 0
040068 3E 00             0099 		LD	A, function
04006A 49 D7             0099 		RST.LIS	10h
04006C                   0100 
04006C                   0101 	; set text colors
04006C                   0102 	vdu 17
04006C 3E 11             0102 		LD	A, function
04006E 49 D7             0102 		RST.LIS	10h
040070                   0103 	vdu 128 ; black background
040070 3E 80             0103 		LD	A, function
040072 49 D7             0103 		RST.LIS	10h
040074                   0104 
040074                   0105 	vdu 17
040074 3E 11             0105 		LD	A, function
040076 49 D7             0105 		RST.LIS	10h
040078                   0106 	vdu COLOR_WHITE ; white pen
040078 3E 0F             0106 		LD	A, function
04007A 49 D7             0106 		RST.LIS	10h
04007C                   0107 
04007C                   0108 	; set graphics pen
04007C                   0109 	vdu 18
04007C 3E 12             0109 		LD	A, function
04007E 49 D7             0109 		RST.LIS	10h
040080                   0110 	vdu 0
040080 3E 00             0110 		LD	A, function
040082 49 D7             0110 		RST.LIS	10h
040084                   0111 	vdu COLOR_WHITE ; white pen
040084 3E 0F             0111 		LD	A, function
040086 49 D7             0111 		RST.LIS	10h
040088                   0112 
040088                   0113 	; hide cursor
040088                   0114 	vdu 23
040088 3E 17             0114 		LD	A, function
04008A 49 D7             0114 		RST.LIS	10h
04008C                   0115 	vdu 1
04008C 3E 01             0115 		LD	A, function
04008E 49 D7             0115 		RST.LIS	10h
040090                   0116 	vdu 0
040090 3E 00             0116 		LD	A, function
040092 49 D7             0116 		RST.LIS	10h
040094                   0117 
040094                   0118 	; store coordinates
040094 DD 21 29 14 04    0119 	ld ix,x1
040099 21 00 00 00       0120 	ld hl,0
04009D DD 75 00          0121 	ld (ix+0),l
0400A0 DD 74 01          0122 	ld (ix+1),h
0400A3                   0123 
0400A3 DD 21 2B 14 04    0124 	ld ix,y1
0400A8 21 00 00 00       0125 	ld hl,0
0400AC DD 75 00          0126 	ld (ix+0),l
0400AF DD 74 01          0127 	ld (ix+1),h
0400B2                   0128 
0400B2 DD 21 2D 14 04    0129 	ld ix,x2
0400B7 21 3F 01 00       0130 	ld hl,319
0400BB DD 75 00          0131 	ld (ix+0),l
0400BE DD 74 01          0132 	ld (ix+1),h
0400C1                   0133 
0400C1 DD 21 2F 14 04    0134 	ld ix,y2
0400C6 21 EF 00 00       0135 	ld hl,239
0400CA DD 75 00          0136 	ld (ix+0),l
0400CD DD 74 01          0137 	ld (ix+1),h
0400D0                   0138 
0400D0                   0139 	; draw the border rectangle
0400D0 CD E1 0A 04       0140 	call fn_rect
0400D4                   0141 
0400D4                   0142 	; locate x,y
0400D4                   0143 	vdu 31
0400D4 3E 1F             0143 		LD	A, function
0400D6 49 D7             0143 		RST.LIS	10h
0400D8                   0144 	vdu TITLE_X
0400D8 3E 11             0144 		LD	A, function
0400DA 49 D7             0144 		RST.LIS	10h
0400DC                   0145 	vdu TITLE_Y
0400DC 3E 02             0145 		LD	A, function
0400DE 49 D7             0145 		RST.LIS	10h
0400E0                   0146 
0400E0                   0147 	; print text
0400E0 21 40 14 04       0148 	ld hl,title
0400E4 01 00 00 00       0149 	ld bc,0
0400E8 AF                0150 	xor a
0400E9 49 DF             0151 	rst.lis $18
0400EB                   0152 
0400EB                   0153 	; locate x,y
0400EB                   0154 	vdu 31
0400EB 3E 1F             0154 		LD	A, function
0400ED 49 D7             0154 		RST.LIS	10h
0400EF                   0155 	vdu MENU_X
0400EF 3E 0D             0155 		LD	A, function
0400F1 49 D7             0155 		RST.LIS	10h
0400F3                   0156 	vdu MENU1_Y
0400F3 3E 08             0156 		LD	A, function
0400F5 49 D7             0156 		RST.LIS	10h
0400F7                   0157 
0400F7                   0158 	; print text
0400F7 21 49 14 04       0159 	ld hl,menu1
0400FB 01 00 00 00       0160 	ld bc,0
0400FF AF                0161 	xor a
040100 49 DF             0162 	rst.lis $18
040102                   0163 
040102                   0164 	; locate x,y
040102                   0165 	vdu 31
040102 3E 1F             0165 		LD	A, function
040104 49 D7             0165 		RST.LIS	10h
040106                   0166 	vdu MENU_X
040106 3E 0D             0166 		LD	A, function
040108 49 D7             0166 		RST.LIS	10h
04010A                   0167 	vdu MENU2_Y
04010A 3E 0C             0167 		LD	A, function
04010C 49 D7             0167 		RST.LIS	10h
04010E                   0168 
04010E                   0169 	; print text
04010E 21 58 14 04       0170 	ld hl,menu2
040112 01 00 00 00       0171 	ld bc,0
040116 AF                0172 	xor a
040117 49 DF             0173 	rst.lis $18
040119                   0174 
040119                   0175 	; locate x,y
040119                   0176 	vdu 31
040119 3E 1F             0176 		LD	A, function
04011B 49 D7             0176 		RST.LIS	10h
04011D                   0177 	vdu MENU_X
04011D 3E 0D             0177 		LD	A, function
04011F 49 D7             0177 		RST.LIS	10h
040121                   0178 	vdu MENU3_Y
040121 3E 10             0178 		LD	A, function
040123 49 D7             0178 		RST.LIS	10h
040125                   0179 
040125                   0180 	; print text
040125 21 67 14 04       0181 	ld hl,menu3
040129 01 00 00 00       0182 	ld bc,0
04012D AF                0183 	xor a
04012E 49 DF             0184 	rst.lis $18
040130                   0185 
040130                   0186 	; locate x,y
040130                   0187 	vdu 31
040130 3E 1F             0187 		LD	A, function
040132 49 D7             0187 		RST.LIS	10h
040134                   0188 	vdu MENU_X
040134 3E 0D             0188 		LD	A, function
040136 49 D7             0188 		RST.LIS	10h
040138                   0189 	vdu MENU4_Y
040138 3E 14             0189 		LD	A, function
04013A 49 D7             0189 		RST.LIS	10h
04013C                   0190 
04013C                   0191 	; print text
04013C 21 78 14 04       0192 	ld hl,menu4
040140 01 00 00 00       0193 	ld bc,0
040144 AF                0194 	xor a
040145 49 DF             0195 	rst.lis $18
040147                   0196 
040147                   0197 ; menu loop
040147                   0198 menu_loop:
040147 21 8F FF FF       0199 	ld hl,KEY_ESCAPE
04014B CD DB 13 04       0200 	call fn_inkey
04014F FE 01             0201 	CP 1
040151 CA BD 0A 04       0202 	jp z,exit_program
040155                   0203 
040155 21 8E FF FF       0204 	ld hl,KEY_F1
040159 CD DB 13 04       0205 	call fn_inkey
04015D FE 01             0206 	CP 1
04015F CA 91 01 04       0207 	jp z,ml_menu1
040163                   0208 
040163 21 8D FF FF       0209 	ld hl,KEY_F2
040167 CD DB 13 04       0210 	call fn_inkey
04016B FE 01             0211 	CP 1
04016D CA 97 01 04       0212 	jp z,ml_menu2
040171                   0213 
040171 21 8C FF FF       0214 	ld hl,KEY_F3
040175 CD DB 13 04       0215 	call fn_inkey
040179 FE 01             0216 	CP 1
04017B CA 9D 01 04       0217 	jp z,ml_menu3
04017F                   0218 
04017F 21 EB FF FF       0219 	ld hl,KEY_F4
040183 CD DB 13 04       0220 	call fn_inkey
040187 FE 01             0221 	CP 1
040189 CA A3 01 04       0222 	jp z,ml_menu4
04018D                   0223 
04018D C3 47 01 04       0224 	jp menu_loop
040191                   0225 
040191                   0226 ml_menu1:
040191 3E 04             0227 	ld a,SPR44
040193 16 20             0228 	ld d,SPR44_width
040195 18 10             0229 	jr exit_menu_loop
040197                   0230 
040197                   0231 ml_menu2:
040197 3E 08             0232 	ld a,SPR88
040199 16 10             0233 	ld d,SPR88_width
04019B 18 0A             0234 	jr exit_menu_loop
04019D                   0235 
04019D                   0236 ml_menu3:
04019D 3E 10             0237 	ld a,SPR1616
04019F 16 08             0238 	ld d,SPR1616_width
0401A1 18 04             0239 	jr exit_menu_loop
0401A3                   0240 
0401A3                   0241 ml_menu4:
0401A3 3E 20             0242 	ld a,SPR3232
0401A5 16 04             0243 	ld d,SPR3232_width
0401A7                   0244 
0401A7                   0245 exit_menu_loop:
0401A7                   0246 	; store edited sprite size
0401A7 21 3E 14 04       0247 	ld hl,spr_size
0401AB 77                0248 	ld (hl),a
0401AC 21 3D 14 04       0249 	ld hl,pixel_width
0401B0 72                0250 	ld (hl),d
0401B1                   0251 
0401B1                   0252 	; clear the text screen
0401B1                   0253 	vdu 12
0401B1 3E 0C             0253 		LD	A, function
0401B3 49 D7             0253 		RST.LIS	10h
0401B5                   0254 
0401B5                   0255 	; draw the palette
0401B5 0E 00             0256 	ld c,0
0401B7                   0257 
0401B7                   0258 palette_loop:
0401B7 C5                0259 	push bc
0401B8                   0260 
0401B8                   0261 	; choose palette color
0401B8                   0262 	vdu 18
0401B8 3E 12             0262 		LD	A, function
0401BA 49 D7             0262 		RST.LIS	10h
0401BC                   0263 	vdu 0
0401BC 3E 00             0263 		LD	A, function
0401BE 49 D7             0263 		RST.LIS	10h
0401C0 C1                0264 	pop bc
0401C1 C5                0265 	push bc
0401C2 79                0266 	ld a,c
0401C3                   0267 	vdu_a
0401C3 49 D7             0267 		RST.LIS	10h
0401C5                   0268 
0401C5                   0269 	; store coordinates for a palette square
0401C5 DD 21 29 14 04    0270 	ld ix,x1
0401CA E1                0271 	pop hl
0401CB E5                0272 	push hl
0401CC 26 05             0273 	ld h,5
0401CE ED 6C             0274 	mlt hl
0401D0 E5                0275 	push hl
0401D1 DD 75 00          0276 	ld (ix+0),l
0401D4 DD 74 01          0277 	ld (ix+1),h
0401D7                   0278 
0401D7 DD 21 2B 14 04    0279 	ld ix,y1
0401DC 21 00 00 00       0280 	ld hl,0
0401E0 DD 75 00          0281 	ld (ix+0),l
0401E3 DD 74 01          0282 	ld (ix+1),h
0401E6                   0283 
0401E6 DD 21 2D 14 04    0284 	ld ix,x2
0401EB E1                0285 	pop hl
0401EC 11 04 00 00       0286 	ld de,4
0401F0 19                0287 	add hl,de
0401F1 DD 75 00          0288 	ld (ix+0),l
0401F4 DD 74 01          0289 	ld (ix+1),h
0401F7                   0290 
0401F7 DD 21 2F 14 04    0291 	ld ix,y2
0401FC 21 0A 00 00       0292 	ld hl,10
040200 DD 75 00          0293 	ld (ix+0),l
040203 DD 74 01          0294 	ld (ix+1),h
040206                   0295 
040206                   0296 	; draw the palette filled square
040206 CD A0 0B 04       0297 	call fn_rectf
04020A                   0298 
04020A                   0299 	; next color ?
04020A C1                0300 	pop bc
04020B 0C                0301 	inc c
04020C 79                0302 	ld a,c
04020D FE 40             0303 	cp MAX_COLORS
04020F C2 B7 01 04       0304 	jp nz,palette_loop
040213                   0305 
040213                   0306 	; store coordinates
040213 DD 21 29 14 04    0307 	ld ix,x1
040218 21 00 00 00       0308 	ld hl,0
04021C DD 75 00          0309 	ld (ix+0),l
04021F DD 74 01          0310 	ld (ix+1),h
040222                   0311 
040222 DD 21 2B 14 04    0312 	ld ix,y1
040227 21 0B 00 00       0313 	ld hl,11
04022B DD 75 00          0314 	ld (ix+0),l
04022E DD 74 01          0315 	ld (ix+1),h
040231                   0316 
040231 DD 21 2D 14 04    0317 	ld ix,x2
040236 21 3F 01 00       0318 	ld hl,319
04023A DD 75 00          0319 	ld (ix+0),l
04023D DD 74 01          0320 	ld (ix+1),h
040240                   0321 
040240 DD 21 2F 14 04    0322 	ld ix,y2
040245 21 EF 00 00       0323 	ld hl,239
040249 DD 75 00          0324 	ld (ix+0),l
04024C DD 74 01          0325 	ld (ix+1),h
04024F                   0326 
04024F                   0327 	; draw the border rectangle
04024F CD E1 0A 04       0328 	call fn_rect
040253                   0329 
040253                   0330 	; store edited sprite coordinates
040253 DD 21 31 14 04    0331 	ld ix,xs1
040258 FD 21 29 14 04    0332 	ld iy,x1
04025D DD 6E 00          0333 	ld l,(ix+0)
040260 DD 66 01          0334 	ld h,(ix+1)
040263 FD 75 00          0335 	ld (iy+0),l
040266 FD 74 01          0336 	ld (iy+1),h
040269                   0337 
040269 DD 21 33 14 04    0338 	ld ix,ys1
04026E FD 21 2B 14 04    0339 	ld iy,y1
040273 DD 6E 00          0340 	ld l,(ix+0)
040276 DD 66 01          0341 	ld h,(ix+1)
040279 FD 75 00          0342 	ld (iy+0),l
04027C FD 74 01          0343 	ld (iy+1),h
04027F                   0344 
04027F DD 21 35 14 04    0345 	ld ix,xs2
040284 FD 21 2D 14 04    0346 	ld iy,x2
040289 DD 6E 00          0347 	ld l,(ix+0)
04028C DD 66 01          0348 	ld h,(ix+1)
04028F FD 75 00          0349 	ld (iy+0),l
040292 FD 74 01          0350 	ld (iy+1),h
040295                   0351 
040295 DD 21 37 14 04    0352 	ld ix,ys2
04029A FD 21 2F 14 04    0353 	ld iy,y2
04029F DD 6E 00          0354 	ld l,(ix+0)
0402A2 DD 66 01          0355 	ld h,(ix+1)
0402A5 FD 75 00          0356 	ld (iy+0),l
0402A8 FD 74 01          0357 	ld (iy+1),h
0402AB                   0358 
0402AB                   0359 	; draw the sprite's border rectangle
0402AB CD E1 0A 04       0360 	call fn_rect
0402AF                   0361 
0402AF                   0362 	; update sprite size descriptions
0402AF CD 77 13 04       0363 	call fn_show_spr_descr
0402B3                   0364 
0402B3                   0365 ; initialize sprite vars
0402B3                   0366 init_sprite_vars:
0402B3                   0367 	; initialize coordinates before drawing the sprite
0402B3 DD 21 39 14 04    0368 	ld ix,xpix
0402B8 AF                0369 	xor a
0402B9 DD 77 00          0370 	ld (ix+0),a ; xpix = 0
0402BC DD 77 01          0371 	ld (ix+1),a	; ypix = 0
0402BF DD 21 3F 14 04    0372 	ld ix,current_pen
0402C4 3E 0F             0373 	ld a,COLOR_WHITE
0402C6 DD 77 00          0374 	ld (ix+0),a ; current pen -> white
0402C9                   0375 
0402C9                   0376 	; set vars
0402C9 21 14 15 04       0377 	ld hl,colors_count
0402CD 3E 40             0378 	ld a,MAX_COLORS
0402CF 77                0379 	ld (hl),a
0402D0 21 15 15 04       0380 	ld hl,current_frame
0402D4 AF                0381 	xor a
0402D5 77                0382 	ld (hl),a
0402D6 3C                0383 	inc a
0402D7 21 16 15 04       0384 	ld hl,frames_count
0402DB 77                0385 	ld (hl),a
0402DC                   0386 
0402DC                   0387 	; fill buffers with zeros
0402DC 01 00 20 00       0388 	ld bc,BUFFER_SIZE
0402E0 21 1E 15 04       0389 	ld hl,sprite_buffer
0402E4                   0390 
0402E4                   0391 isv_fill_loop:
0402E4 AF                0392 	xor a
0402E5 77                0393 	ld (hl),a
0402E6 0B                0394 	dec bc
0402E7 23                0395 	inc hl
0402E8 78                0396 	ld a,b
0402E9 B1                0397 	or c
0402EA FE 00             0398 	cp 0
0402EC 20 F6             0399 	jr nz,isv_fill_loop
0402EE                   0400 
0402EE                   0401 ; draw the pixel with a border
0402EE CD 6E 0C 04       0402 	call fn_draw_pixel_with_border
0402F2                   0403 
0402F2                   0404 ; draw sprite loop
0402F2                   0405 draw_sprite_loop:
0402F2 21 9D FF FF       0406 	ld hl,KEY_SPACE
0402F6 CD DB 13 04       0407 	call fn_inkey
0402FA FE 01             0408 	cp 1
0402FC CC 0E 04 04       0409 	call z,dsl_set_pen
040300                   0410 
040300 21 C6 FF FF       0411 	ld hl,KEY_UP
040304 CD DB 13 04       0412 	call fn_inkey
040308 FE 01             0413 	cp 1
04030A CC 33 04 04       0414 	call z,dsl_up
04030E                   0415 
04030E 21 D6 FF FF       0416 	ld hl,KEY_DOWN
040312 CD DB 13 04       0417 	call fn_inkey
040316 FE 01             0418 	cp 1
040318 CC 5A 04 04       0419 	call z,dsl_down
04031C                   0420 
04031C 21 E6 FF FF       0421 	ld hl,KEY_LEFT
040320 CD DB 13 04       0422 	call fn_inkey
040324 FE 01             0423 	cp 1
040326 CC 86 04 04       0424 	call z,dsl_left
04032A                   0425 
04032A 21 86 FF FF       0426 	ld hl,KEY_RIGHT
04032E CD DB 13 04       0427 	call fn_inkey
040332 FE 01             0428 	cp 1
040334 CC AD 04 04       0429 	call z,dsl_right
040338                   0430 
040338 21 A6 FF FF       0431 	ld hl,KEY_DELETE
04033C CD DB 13 04       0432 	call fn_inkey
040340 FE 01             0433 	cp 1
040342 CC 22 04 04       0434 	call z,dsl_reset_pen
040346                   0435 
040346 21 9F FF FF       0436 	ld hl,KEY_TAB
04034A CD DB 13 04       0437 	call fn_inkey
04034E FE 01             0438 	cp 1
040350 CA 85 09 04       0439 	jp z,dsl_palette_tool
040354                   0440 
040354 21 AA FF FF       0441 	ld hl,KEY_N
040358 CD DB 13 04       0442 	call fn_inkey
04035C FE 01             0443 	cp 1
04035E CC 2C 05 04       0444 	call z,dsl_add_frame
040362                   0445 
040362 21 AD FF FF       0446 	ld hl,KEY_C
040366 CD DB 13 04       0447 	call fn_inkey
04036A FE 01             0448 	cp 1
04036C CC C3 05 04       0449 	call z,dsl_add_and_copy_frame
040370                   0450 
040370 21 D0 FF FF       0451 	ld hl,KEY_BACKSPACE
040374 CD DB 13 04       0452 	call fn_inkey
040378 FE 01             0453 	cp 1
04037A CC 2A 06 04       0454 	call z,dsl_delete_frame
04037E                   0455 
04037E 21 C0 FF FF       0456 	ld hl,KEY_PGUP
040382 CD DB 13 04       0457 	call fn_inkey
040386 FE 01             0458 	cp 1
040388 CC 23 07 04       0459 	call z,dsl_next_frame
04038C                   0460 
04038C 21 B1 FF FF       0461 	ld hl,KEY_PGDOWN
040390 CD DB 13 04       0462 	call fn_inkey
040394 FE 01             0463 	cp 1
040396 CC 04 07 04       0464 	call z,dsl_previous_frame
04039A                   0465 
04039A 21 A9 FF FF       0466 	ld hl,KEY_L
04039E CD DB 13 04       0467 	call fn_inkey
0403A2 FE 01             0468 	cp 1
0403A4 CC D9 04 04       0469 	call z,dsl_load_sprite
0403A8                   0470 
0403A8 21 AE FF FF       0471 	ld hl,KEY_S
0403AC CD DB 13 04       0472 	call fn_inkey
0403B0 FE 01             0473 	cp 1
0403B2 CC FA 04 04       0474 	call z,dsl_save_sprite
0403B6                   0475 
0403B6 21 DD FF FF       0476 	ld hl,KEY_E
0403BA CD DB 13 04       0477 	call fn_inkey
0403BE FE 01             0478 	cp 1
0403C0 CC 13 05 04       0479 	call z,dsl_export_sprite
0403C4                   0480 
0403C4 21 CC FF FF       0481 	ld hl,KEY_R
0403C8 CD DB 13 04       0482 	call fn_inkey
0403CC FE 01             0483 	cp 1
0403CE CC 49 07 04       0484 	call z,dsl_rotate_frame
0403D2                   0485 
0403D2 21 BC FF FF       0486 	ld hl,KEY_F
0403D6 CD DB 13 04       0487 	call fn_inkey
0403DA FE 01             0488 	cp 1
0403DC CC FE 07 04       0489 	call z,dsl_flip_frame
0403E0                   0490 
0403E0 21 9A FF FF       0491 	ld hl,KEY_M
0403E4 CD DB 13 04       0492 	call fn_inkey
0403E8 FE 01             0493 	cp 1
0403EA CC 65 08 04       0494 	call z,dsl_mirror_frame
0403EE                   0495 
0403EE 21 B6 FF FF       0496 	ld hl,KEY_RETURN
0403F2 CD DB 13 04       0497 	call fn_inkey
0403F6 FE 01             0498 	cp 1
0403F8 CC E5 08 04       0499 	call z,dsl_flood_fill
0403FC                   0500 
0403FC 21 8F FF FF       0501 	ld hl,KEY_ESCAPE
040400 CD DB 13 04       0502 	call fn_inkey
040404 FE 01             0503 	cp 1
040406 CA BD 0A 04       0504 	jp z,exit_program
04040A                   0505 
04040A C3 F2 02 04       0506 	jp draw_sprite_loop
04040E                   0507 
04040E                   0508 ; set the pen of the current pixel
04040E                   0509 dsl_set_pen:
04040E CD 98 0C 04       0510 	call fn_get_pixel_color
040412 21 3F 14 04       0511 	ld hl,current_pen
040416 BE                0512 	cp (hl)
040417 C8                0513 	ret z
040418 7E                0514 	ld a,(hl)
040419 CD DA 0C 04       0515 	call fn_set_pixel_color
04041D CD 6E 0C 04       0516 	call fn_draw_pixel_with_border
040421 C9                0517 	ret
040422                   0518 
040422                   0519 ; reset the pen of the current pixel
040422                   0520 dsl_reset_pen:
040422 CD 98 0C 04       0521 	call fn_get_pixel_color
040426 FE 00             0522 	cp 0
040428 C8                0523 	ret z
040429 AF                0524 	xor a
04042A CD DA 0C 04       0525 	call fn_set_pixel_color
04042E CD 6E 0C 04       0526 	call fn_draw_pixel_with_border
040432 C9                0527 	ret
040433                   0528 
040433                   0529 ; move pixel up
040433                   0530 dsl_up:
040433 21 3A 14 04       0531 	ld hl,ypix
040437 7E                0532 	ld a,(hl)
040438 FE 00             0533 	cp 0
04043A C8                0534 	ret z
04043B                   0535 
04043B 21 9D FF FF       0536 	ld hl,KEY_SPACE
04043F CD DB 13 04       0537 	call fn_inkey
040443 FE 01             0538 	cp 1
040445 CC 0E 04 04       0539 	call z,dsl_set_pen
040449                   0540 
040449 CD 82 0C 04       0541 	call fn_draw_pixel_without_border
04044D CD 1E 0D 04       0542 	call fn_move_up
040451 CD 6E 0C 04       0543 	call fn_draw_pixel_with_border
040455 CD 56 13 04       0544 	call fn_slowdown
040459 C9                0545 	ret
04045A                   0546 
04045A                   0547 ; move pixel down
04045A                   0548 dsl_down:
04045A 21 3E 14 04       0549 	ld hl,spr_size
04045E 56                0550 	ld d,(hl)
04045F 15                0551 	dec d
040460                   0552 
040460 21 3A 14 04       0553 	ld hl,ypix
040464 7E                0554 	ld a,(hl)
040465 BA                0555 	cp d
040466 C8                0556 	ret z
040467                   0557 
040467 21 9D FF FF       0558 	ld hl,KEY_SPACE
04046B CD DB 13 04       0559 	call fn_inkey
04046F FE 01             0560 	cp 1
040471 CC 0E 04 04       0561 	call z,dsl_set_pen
040475                   0562 
040475 CD 82 0C 04       0563 	call fn_draw_pixel_without_border
040479 CD 24 0D 04       0564 	call fn_move_down
04047D CD 6E 0C 04       0565 	call fn_draw_pixel_with_border
040481 CD 56 13 04       0566 	call fn_slowdown
040485 C9                0567 	ret
040486                   0568 
040486                   0569 ; move pixel left
040486                   0570 dsl_left:
040486 21 39 14 04       0571 	ld hl,xpix
04048A 7E                0572 	ld a,(hl)
04048B FE 00             0573 	cp 0
04048D C8                0574 	ret z
04048E                   0575 
04048E 21 9D FF FF       0576 	ld hl,KEY_SPACE
040492 CD DB 13 04       0577 	call fn_inkey
040496 FE 01             0578 	cp 1
040498 CC 0E 04 04       0579 	call z,dsl_set_pen
04049C                   0580 
04049C CD 82 0C 04       0581 	call fn_draw_pixel_without_border
0404A0 CD 2A 0D 04       0582 	call fn_move_left
0404A4 CD 6E 0C 04       0583 	call fn_draw_pixel_with_border
0404A8 CD 56 13 04       0584 	call fn_slowdown
0404AC C9                0585 	ret
0404AD                   0586 
0404AD                   0587 ; move pixel right
0404AD                   0588 dsl_right:
0404AD 21 3E 14 04       0589 	ld hl,spr_size
0404B1 56                0590 	ld d,(hl)
0404B2 15                0591 	dec d
0404B3                   0592 
0404B3 21 39 14 04       0593 	ld hl,xpix
0404B7 7E                0594 	ld a,(hl)
0404B8 BA                0595 	cp d
0404B9 C8                0596 	ret z
0404BA                   0597 
0404BA 21 9D FF FF       0598 	ld hl,KEY_SPACE
0404BE CD DB 13 04       0599 	call fn_inkey
0404C2 FE 01             0600 	cp 1
0404C4 CC 0E 04 04       0601 	call z,dsl_set_pen
0404C8                   0602 
0404C8 CD 82 0C 04       0603 	call fn_draw_pixel_without_border
0404CC CD 30 0D 04       0604 	call fn_move_right
0404D0 CD 6E 0C 04       0605 	call fn_draw_pixel_with_border
0404D4 CD 56 13 04       0606 	call fn_slowdown
0404D8 C9                0607 	ret
0404D9                   0608 
0404D9                   0609 ; load a sprite
0404D9                   0610 dsl_load_sprite:
0404D9 21 A9 FF FF       0611 	ld hl,KEY_L
0404DD CD DB 13 04       0612 	call fn_inkey
0404E1 FE 00             0613 	cp 0
0404E3 20 F4             0614 	jr nz,dsl_load_sprite
0404E5                   0615 
0404E5 CD 82 0C 04       0616 	call fn_draw_pixel_without_border
0404E9 CD F8 0E 04       0617 	call fn_load_sprite
0404ED CD CD 12 04       0618 	call fn_refresh_sprite
0404F1 CD 6E 0C 04       0619 	call fn_draw_pixel_with_border
0404F5 CD 0D 13 04       0620 	call fn_change_frame
0404F9 C9                0621 	ret
0404FA                   0622 
0404FA                   0623 ; save a sprite
0404FA                   0624 dsl_save_sprite:
0404FA 21 AE FF FF       0625 	ld hl,KEY_S
0404FE CD DB 13 04       0626 	call fn_inkey
040502 FE 00             0627 	cp 0
040504 20 F4             0628 	jr nz,dsl_save_sprite
040506                   0629 
040506 CD 82 0C 04       0630 	call fn_draw_pixel_without_border
04050A CD 1D 10 04       0631 	call fn_save_sprite
04050E CD CD 12 04       0632 	call fn_refresh_sprite
040512 C9                0633 	ret
040513                   0634 
040513                   0635 dsl_export_sprite:
040513 21 DD FF FF       0636 	ld hl,KEY_E
040517 CD DB 13 04       0637 	call fn_inkey
04051B FE 00             0638 	cp 0
04051D 20 F4             0639 	jr nz,dsl_export_sprite
04051F                   0640 
04051F CD 82 0C 04       0641 	call fn_draw_pixel_without_border
040523 CD 18 11 04       0642 	call fn_export_sprite
040527 CD CD 12 04       0643 	call fn_refresh_sprite
04052B C9                0644 	ret
04052C                   0645 
04052C                   0646 
04052C                   0647 ; add a frame to the animation
04052C                   0648 dsl_add_frame:
04052C 21 AA FF FF       0649 	ld hl,KEY_N
040530 CD DB 13 04       0650 	call fn_inkey
040534 FE 00             0651 	cp 0
040536 20 F4             0652 	jr nz,dsl_add_frame
040538                   0653 
040538                   0654 	; frames limit reached ? exit
040538 21 16 15 04       0655 	ld hl,frames_count
04053C 7E                0656 	ld a,(hl)
04053D FE 08             0657 	cp MAX_FRAMES
04053F C8                0658 	ret z
040540                   0659 
040540                   0660 	; get the number of frames to copy
040540 21 16 15 04       0661 	ld hl,frames_count
040544 7E                0662 	ld a,(hl)
040545 21 15 15 04       0663 	ld hl,current_frame
040549 46                0664 	ld b,(hl)
04054A 90                0665 	sub b
04054B 3D                0666 	dec a
04054C                   0667 
04054C                   0668 	; get sprsize² (length of a sprite, in bytes)
04054C 21 3E 14 04       0669 	ld hl,spr_size
040550 11 00 00 00       0670 	ld de,$000000
040554 5E                0671 	ld e,(hl)
040555 56                0672 	ld d,(hl)
040556 ED 5C             0673 	mlt de ; DE = sprsize²
040558                   0674 
040558                   0675 	; prepare for the case we goto af_zap...
040558 21 1E 15 04       0676 	ld hl,sprite_buffer
04055C                   0677 
04055C F5                0678 	push af
04055D E5                0679 	push hl
04055E 21 15 15 04       0680 	ld hl,current_frame
040562 7E                0681 	ld a,(hl)
040563 3C                0682 	inc a
040564 47                0683 	ld b,a
040565 E1                0684 	pop hl
040566 F1                0685 	pop af
040567                   0686 
040567                   0687 af_loop0:
040567 19                0688 	add hl,de ; for if current frame = 0 (prepare to zap!)
040568 10 FD             0689 	djnz af_loop0
04056A                   0690 
04056A E5                0691 	push hl ; store HL = sprite buffer + sprsize²
04056B FE 00             0692 	cp 0
04056D CA 95 05 04       0693 	jp z,af_zap ; zap the copy, if the 'current frame' is at the last frame
040571 E1                0694 	pop hl ; HL unused in this case
040572                   0695 
040572 21 00 00 00       0696 	ld hl,$000000 ; HL is 0 to store the result
040576 47                0697 	ld b,a ; B = frames to copy
040577                   0698 
040577                   0699 ; multiply number of frames to copy by sprsize²
040577                   0700 af_loop1:
040577 19                0701 	add hl,de ; HL = length (in bytes) to copy (a few frames)
040578 10 FD             0702 	djnz af_loop1
04057A                   0703 
04057A E5                0704 	push hl
04057B C1                0705 	pop bc ; BC = HL = length (in bytes) to copy (a few frames)
04057C                   0706 
04057C 21 15 15 04       0707 	ld hl,current_frame
040580 7E                0708 	ld a,(hl)
040581 3C                0709 	inc a
040582 21 1E 15 04       0710 	ld hl,sprite_buffer
040586                   0711 
040586 C5                0712 	push bc
040587 47                0713 	ld b,a
040588                   0714 
040588                   0715 af_loop2:
040588 19                0716 	add hl,de ; HL = sprite buffer + length to copy
040589 10 FD             0717 	djnz af_loop2
04058B                   0718 
04058B C1                0719 	pop bc
04058C                   0720 
04058C E5                0721 	push hl ; HL = sprite_buffer + (current frame * sprsize²)
04058D                   0722 
04058D 09                0723 	add hl,bc
04058E 2B                0724 	dec hl ; HL = end address to copy to end target address
04058F                   0725 
04058F E5                0726 	push hl
040590 19                0727 	add hl,de
040591 EB                0728 	ex de,hl ; DE = end target address
040592 E1                0729 	pop hl
040593                   0730 
040593 ED B8             0731 	lddr
040595                   0732 
040595                   0733 af_zap:
040595                   0734 	; multiply number of frames to copy by sprsize²
040595 21 3E 14 04       0735 	ld hl,spr_size
040599 01 00 00 00       0736 	ld bc,$000000
04059D 4E                0737 	ld c,(hl)
04059E 46                0738 	ld b,(hl)
04059F ED 4C             0739 	mlt bc ; BC = sprsize²
0405A1                   0740 
0405A1 E1                0741 	pop hl ; HL = sprite_buffer + (current frame * sprsize²)
0405A2                   0742 
0405A2                   0743 ; fill frame with 0 color
0405A2                   0744 af_loop3:
0405A2 AF                0745 	xor a
0405A3 77                0746 	ld (hl),a
0405A4 23                0747 	inc hl
0405A5 0B                0748 	dec bc
0405A6 78                0749 	ld a,b
0405A7 B1                0750 	or c
0405A8 FE 00             0751 	cp 0
0405AA 20 F6             0752 	jr nz,af_loop3
0405AC                   0753 
0405AC                   0754 	; increment the frames count and the current frame values
0405AC 21 16 15 04       0755 	ld hl,frames_count
0405B0 34                0756 	inc (hl)
0405B1 21 15 15 04       0757 	ld hl,current_frame
0405B5 34                0758 	inc (hl)
0405B6                   0759 
0405B6 CD 0D 13 04       0760 	call fn_change_frame
0405BA CD 32 13 04       0761 	call fn_change_frames_count
0405BE CD CD 12 04       0762 	call fn_refresh_sprite
0405C2 C9                0763 	ret
0405C3                   0764 
0405C3                   0765 ; add a copy of the current frame to the animation
0405C3                   0766 dsl_add_and_copy_frame: ; TODO! debug me!
0405C3 21 AD FF FF       0767 	ld hl,KEY_C
0405C7 CD DB 13 04       0768 	call fn_inkey
0405CB FE 00             0769 	cp 0
0405CD 20 F4             0770 	jr nz,dsl_add_and_copy_frame
0405CF                   0771 
0405CF                   0772 	; frames limit reached ? exit
0405CF 21 16 15 04       0773 	ld hl,frames_count
0405D3 7E                0774 	ld a,(hl)
0405D4 FE 08             0775 	cp MAX_FRAMES
0405D6 C8                0776 	ret z
0405D7                   0777 
0405D7                   0778 	; get the number of frames to copy
0405D7 21 16 15 04       0779 	ld hl,frames_count
0405DB 7E                0780 	ld a,(hl)
0405DC 21 15 15 04       0781 	ld hl,current_frame
0405E0 46                0782 	ld b,(hl)
0405E1 90                0783 	sub b
0405E2                   0784 
0405E2                   0785 	; get sprsize² (length of a sprite, in bytes)
0405E2 21 3E 14 04       0786 	ld hl,spr_size
0405E6 11 00 00 00       0787 	ld de,$000000
0405EA 5E                0788 	ld e,(hl)
0405EB 56                0789 	ld d,(hl)
0405EC ED 5C             0790 	mlt de ; DE = sprsize²
0405EE                   0791 
0405EE 21 00 00 00       0792 	ld hl,$000000 ; HL is 0 to store the result
0405F2 47                0793 	ld b,a ; B = frames to copy
0405F3                   0794 
0405F3                   0795 ; multiply number of frames to copy by sprsize²
0405F3                   0796 aacf_loop1:
0405F3 19                0797 	add hl,de ; HL = length (in bytes) to copy (a few frames)
0405F4 10 FD             0798 	djnz aacf_loop1
0405F6                   0799 
0405F6 E5                0800 	push hl
0405F7 C1                0801 	pop bc ; BC = HL = length (in bytes) to copy (a few frames)
0405F8                   0802 
0405F8 21 15 15 04       0803 	ld hl,current_frame
0405FC 7E                0804 	ld a,(hl)
0405FD 21 1E 15 04       0805 	ld hl,sprite_buffer
040601 FE 00             0806 	cp 0
040603 28 06             0807 	jr z,aacf_loop_end2
040605                   0808 
040605 C5                0809 	push bc
040606 47                0810 	ld b,a
040607                   0811 
040607                   0812 aacf_loop2:
040607 19                0813 	add hl,de ; HL = sprite buffer + length to copy
040608 10 FD             0814 	djnz aacf_loop2
04060A                   0815 
04060A C1                0816 	pop bc
04060B                   0817 
04060B                   0818 aacf_loop_end2:
04060B 09                0819 	add hl,bc
04060C 2B                0820 	dec hl ; HL = end address to copy to end target address
04060D                   0821 
04060D E5                0822 	push hl
04060E 19                0823 	add hl,de
04060F EB                0824 	ex de,hl ; DE = end target address
040610 E1                0825 	pop hl
040611                   0826 
040611 ED B8             0827 	lddr
040613                   0828 
040613                   0829 	; increment the frames count and the current frame values
040613 21 16 15 04       0830 	ld hl,frames_count
040617 34                0831 	inc (hl)
040618 21 15 15 04       0832 	ld hl,current_frame
04061C 34                0833 	inc (hl)
04061D                   0834 
04061D CD 0D 13 04       0835 	call fn_change_frame
040621 CD 32 13 04       0836 	call fn_change_frames_count
040625 CD CD 12 04       0837 	call fn_refresh_sprite
040629 C9                0838 	ret
04062A                   0839 
04062A                   0840 ; delete last frame from animation
04062A                   0841 dsl_delete_frame:
04062A 21 D0 FF FF       0842 	ld hl,KEY_BACKSPACE
04062E CD DB 13 04       0843 	call fn_inkey
040632 FE 00             0844 	cp 0
040634 20 F4             0845 	jr nz,dsl_delete_frame
040636                   0846 
040636                   0847 	; delete current selected frame
040636 21 3E 14 04       0848 	ld hl,spr_size
04063A 01 00 00 00       0849 	ld bc,$000000
04063E 4E                0850 	ld c,(hl)
04063F 46                0851 	ld b,(hl)
040640 ED 4C             0852 	mlt bc ; BC = sprsize²
040642 21 15 15 04       0853 	ld hl,current_frame
040646 7E                0854 	ld a,(hl) ; A = current frame
040647 21 1E 15 04       0855 	ld hl,sprite_buffer ; HL = sprite buffer
04064B C5                0856 	push bc
04064C FE 00             0857 	cp 0
04064E 28 06             0858 	jr z,df_loop2
040650                   0859 
040650                   0860 df_loop1:
040650 09                0861 	add hl,bc ; HL = sprite buffer + (current frame * sprsize²)
040651 3D                0862 	dec a
040652 FE 00             0863 	cp 0
040654 20 FA             0864 	jr nz,df_loop1
040656                   0865 
040656                   0866 ; clear the current frame
040656                   0867 df_loop2:
040656 AF                0868 	xor a
040657 77                0869 	ld (hl),a
040658 23                0870 	inc hl
040659 0B                0871 	dec bc
04065A 78                0872 	ld a,b
04065B B1                0873 	or c
04065C FE 00             0874 	cp 0
04065E 20 F6             0875 	jr nz,df_loop2
040660                   0876 
040660                   0877 	; current frame + 1 = frames count ?
040660 E5                0878 	push hl
040661 21 15 15 04       0879 	ld hl,current_frame
040665 5E                0880 	ld e,(hl)
040666 1C                0881 	inc e
040667 21 16 15 04       0882 	ld hl,frames_count
04066B 7E                0883 	ld a,(hl)
04066C BB                0884 	cp e
04066D E1                0885 	pop hl
04066E C1                0886 	pop bc
04066F CA E8 06 04       0887 	jp z,df_exit
040673                   0888 
040673 11 16 15 04       0889 	ld de,frames_count
040677 1A                0890 	ld a,(de) ; A = frames count
040678 E5                0891 	push hl
040679 21 15 15 04       0892 	ld hl,current_frame
04067D 5E                0893 	ld e,(hl) ; E = current frame
04067E E1                0894 	pop hl
04067F 93                0895 	sub e
040680 3D                0896 	dec a ; A = number of frames to copy back
040681                   0897 
040681 EB                0898 	ex de,hl ; DE = sprite buffer + ((current frame + 1) * sprsize²)
040682 21 00 00 00       0899 	ld hl,$000000
040686 FE 00             0900 	cp 0 ; 0 frames to copy ?
040688 28 06             0901 	jr z,df_exit_loop3
04068A                   0902 
04068A                   0903 df_loop3:
04068A 09                0904 	add hl,bc ; HL = length of a frame (sprsize²) * frames count
04068B 3D                0905 	dec a
04068C FE 00             0906 	cp 0
04068E 20 FA             0907 	jr nz,df_loop3
040690                   0908 
040690                   0909 df_exit_loop3:
040690 E5                0910 	push hl
040691 C1                0911 	pop bc ; BC = total length of area to copy
040692 D5                0912 	push de
040693 E1                0913 	pop hl ; HL = DE = start of area to copy
040694                   0914 
040694 C5                0915 	push bc
040695 D5                0916 	push de
040696 E5                0917 	push hl
040697 21 3E 14 04       0918 	ld hl,spr_size
04069B 11 00 00 00       0919 	ld de,$000000
04069F 5E                0920 	ld e,(hl)
0406A0 56                0921 	ld d,(hl)
0406A1 ED 5C             0922 	mlt de ; DE = one sprite frame length
0406A3 E1                0923 	pop hl
0406A4 B7                0924 	or a
0406A5 ED 52             0925 	sbc hl,de ; HL = target area to copy
0406A7 D1                0926 	pop de
0406A8 EB                0927 	ex de,hl ; DE = target, HL = start
0406A9 C1                0928 	pop bc
0406AA ED B0             0929 	ldir
0406AC                   0930 
0406AC 21 3E 14 04       0931 	ld hl,spr_size
0406B0 01 00 00 00       0932 	ld bc,$000000
0406B4 4E                0933 	ld c,(hl)
0406B5 46                0934 	ld b,(hl)
0406B6 ED 4C             0935 	mlt bc ; DE = one sprite frame length
0406B8                   0936 
0406B8                   0937 	; delete last frame data
0406B8 21 16 15 04       0938 	ld hl,frames_count
0406BC 7E                0939 	ld a,(hl) ; A =frames count
0406BD 3D                0940 	dec a ; A = last frame
0406BE 21 1E 15 04       0941 	ld hl,sprite_buffer ; HL = sprite buffer
0406C2 FE 00             0942 	cp 0
0406C4 28 06             0943 	jr z,df_loop5
0406C6                   0944 
0406C6                   0945 df_loop4:
0406C6 09                0946 	add hl,bc ; HL = sprite buffer + (last frame * sprsize²)
0406C7 3D                0947 	dec a
0406C8 FE 00             0948 	cp 0
0406CA 20 FA             0949 	jr nz,df_loop4
0406CC                   0950 
0406CC                   0951 ; clear the current frame
0406CC                   0952 df_loop5:
0406CC AF                0953 	xor a
0406CD 77                0954 	ld (hl),a
0406CE 23                0955 	inc hl
0406CF 0B                0956 	dec bc
0406D0 78                0957 	ld a,b
0406D1 B1                0958 	or c
0406D2 FE 00             0959 	cp 0
0406D4 20 F6             0960 	jr nz,df_loop5
0406D6                   0961 
0406D6                   0962 	; decrement frames count
0406D6 21 16 15 04       0963 	ld hl,frames_count
0406DA 35                0964 	dec (hl)
0406DB                   0965 
0406DB CD 0D 13 04       0966 	call fn_change_frame
0406DF CD 32 13 04       0967 	call fn_change_frames_count
0406E3 CD CD 12 04       0968 	call fn_refresh_sprite
0406E7 C9                0969 	ret
0406E8                   0970 
0406E8                   0971 df_exit:
0406E8 21 16 15 04       0972 	ld hl,frames_count
0406EC 7E                0973 	ld a,(hl)
0406ED FE 01             0974 	cp 1
0406EF 28 06             0975 	jr z,df_exit_end
0406F1 35                0976 	dec (hl)
0406F2 21 15 15 04       0977 	ld hl,current_frame
0406F6 35                0978 	dec (hl)
0406F7                   0979 
0406F7                   0980 df_exit_end:
0406F7 CD 0D 13 04       0981 	call fn_change_frame
0406FB CD 32 13 04       0982 	call fn_change_frames_count
0406FF CD CD 12 04       0983 	call fn_refresh_sprite
040703 C9                0984 	ret
040704                   0985 
040704                   0986 ; goto previous frame
040704                   0987 dsl_previous_frame:
040704 21 B1 FF FF       0988 	ld hl,KEY_PGDOWN
040708 CD DB 13 04       0989 	call fn_inkey
04070C FE 00             0990 	cp 0
04070E 20 F4             0991 	jr nz,dsl_previous_frame
040710                   0992 
040710 21 15 15 04       0993 	ld hl,current_frame
040714 7E                0994 	ld a,(hl)
040715 FE 00             0995 	cp 0
040717 C8                0996 	ret z
040718                   0997 
040718 3D                0998 	dec a
040719 77                0999 	ld (hl),a
04071A CD 0D 13 04       1000 	call fn_change_frame
04071E CD CD 12 04       1001 	call fn_refresh_sprite
040722 C9                1002 	ret
040723                   1003 
040723                   1004 ; goto next frame
040723                   1005 dsl_next_frame:
040723 21 C0 FF FF       1006 	ld hl,KEY_PGUP
040727 CD DB 13 04       1007 	call fn_inkey
04072B FE 00             1008 	cp 0
04072D 20 F4             1009 	jr nz,dsl_next_frame
04072F                   1010 
04072F 21 15 15 04       1011 	ld hl,current_frame
040733 7E                1012 	ld a,(hl)
040734 3C                1013 	inc a
040735 21 16 15 04       1014 	ld hl,frames_count
040739 BE                1015 	cp (hl)
04073A C8                1016 	ret z
04073B                   1017 
04073B 21 15 15 04       1018 	ld hl,current_frame
04073F 77                1019 	ld (hl),a
040740 CD 0D 13 04       1020 	call fn_change_frame
040744 CD CD 12 04       1021 	call fn_refresh_sprite
040748 C9                1022 	ret
040749                   1023 
040749                   1024 ; rotate a frame 90° clockwise
040749                   1025 dsl_rotate_frame:
040749 21 CC FF FF       1026 	ld hl,KEY_R
04074D CD DB 13 04       1027 	call fn_inkey
040751 FE 00             1028 	cp 0
040753 20 F4             1029 	jr nz,dsl_rotate_frame
040755                   1030 
040755                   1031 	; find HL as start of the first frame (buffer)
040755 21 3E 14 04       1032 	ld hl,spr_size
040759 01 00 00 00       1033 	ld bc,$000000
04075D 11 00 00 00       1034 	ld de,$000000
040761 5E                1035 	ld e,(hl)
040762 56                1036 	ld d,(hl)
040763 4B                1037 	ld c,e
040764 ED 5C             1038 	mlt de ; DE = sprite length in bytes
040766 21 15 15 04       1039 	ld hl,current_frame
04076A 7E                1040 	ld a,(hl) ; A = current frame
04076B 21 1E 15 04       1041 	ld hl,sprite_buffer
04076F FE 00             1042 	cp 0
040771 28 04             1043 	jr z,rf_noloop1
040773 47                1044 	ld b,a
040774                   1045 
040774                   1046 rf_loop1:
040774 19                1047 	add hl,de ; HL = sprite_buffer + (current frame * sprsize²)
040775 10 FD             1048 	djnz rf_loop1
040777                   1049 
040777                   1050 rf_noloop1:
040777 C5                1051 	push bc
040778 E5                1052 	push hl
040779                   1053 
040779                   1054 	; copy current frame to swap sprite buffer
040779 11 1E 35 04       1055 	ld de,swap_sprite_buffer
04077D 41                1056 	ld b,c
04077E ED 4C             1057 	mlt bc
040780 ED B0             1058 	ldir
040782                   1059 
040782 FD E1             1060 	pop iy ; IY: destination
040784 C1                1061 	pop bc
040785                   1062 
040785 79                1063 	ld a,c
040786 01 00 00 00       1064 	ld bc,$000000
04078A 4F                1065 	ld c,a ; BC = sprite size
04078B                   1066 
04078B                   1067 	; turn and copy swap sprite buffer frame to sprite buffer
04078B DD 21 1E 35 04    1068 	ld ix,swap_sprite_buffer ; IX: source
040790 11 00 00 00       1069 	ld de,0 ; x
040794 21 00 00 00       1070 	ld hl,0 ; y
040798                   1071 
040798                   1072 rf_loop2:
040798 DD E5             1073 	push ix
04079A FD E5             1074 	push iy
04079C                   1075 
04079C D5                1076 	push de
04079D E5                1077 	push hl
04079E                   1078 
04079E                   1079 	; add x
04079E DD 19             1080 	add ix,de
0407A0                   1081 
0407A0                   1082 	; add y * width
0407A0 7C                1083 	ld a,h
0407A1 B5                1084 	or l
0407A2 FE 00             1085 	cp 0
0407A4 28 09             1086 	jr z,rf_done1
0407A6                   1087 rf_loop3:
0407A6 DD 09             1088 	add ix,bc
0407A8 2B                1089 	dec hl
0407A9 7C                1090 	ld a,h
0407AA B5                1091 	or l
0407AB FE 00             1092 	cp 0
0407AD 20 F7             1093 	jr nz,rf_loop3
0407AF                   1094 
0407AF                   1095 rf_done1:
0407AF                   1096 	; found the pixel value
0407AF DD 7E 00          1097 	ld a,(ix+0)
0407B2                   1098 
0407B2 E1                1099 	pop hl
0407B3 D1                1100 	pop de
0407B4 D5                1101 	push de
0407B5 E5                1102 	push hl
0407B6                   1103 
0407B6                   1104 	; add y
0407B6 EB                1105 	ex de,hl
0407B7 FD 09             1106 	add iy,bc
0407B9 B7                1107 	or a
0407BA E5                1108 	push hl
0407BB FD E5             1109 	push iy
0407BD E1                1110 	pop hl
0407BE ED 52             1111 	sbc hl,de
0407C0 E5                1112 	push hl
0407C1 FD E1             1113 	pop iy
0407C3 FD 2B             1114 	dec iy
0407C5 E1                1115 	pop hl
0407C6 EB                1116 	ex de,hl
0407C7                   1117 
0407C7                   1118 	; add x * width
0407C7 F5                1119 	push af
0407C8 7A                1120 	ld a,d
0407C9 B3                1121 	or e
0407CA FE 00             1122 	cp 0
0407CC 28 09             1123 	jr z,rf_done2
0407CE                   1124 rf_loop5:
0407CE FD 09             1125 	add iy,bc
0407D0 1B                1126 	dec de
0407D1 7A                1127 	ld a,d
0407D2 B3                1128 	or e
0407D3 FE 00             1129 	cp 0
0407D5 20 F7             1130 	jr nz,rf_loop5
0407D7                   1131 
0407D7                   1132 rf_done2:
0407D7 F1                1133 	pop af
0407D8                   1134 
0407D8                   1135 	; store the pixel value
0407D8 FD 77 00          1136 	ld (iy+0),a
0407DB                   1137 
0407DB E1                1138 	pop hl
0407DC D1                1139 	pop de
0407DD                   1140 
0407DD FD E1             1141 	pop iy
0407DF DD E1             1142 	pop ix
0407E1                   1143 
0407E1 13                1144 	inc de
0407E2 EB                1145 	ex de,hl
0407E3 B7                1146 	or a
0407E4 ED 42             1147 	sbc hl,bc
0407E6 09                1148 	add hl,bc
0407E7 EB                1149 	ex de,hl
0407E8 DA 98 07 04       1150 	jp c,rf_loop2
0407EC                   1151 
0407EC 11 00 00 00       1152 	ld de,0
0407F0 23                1153 	inc hl
0407F1 B7                1154 	or a
0407F2 ED 42             1155 	sbc hl,bc
0407F4 09                1156 	add hl,bc
0407F5 DA 98 07 04       1157 	jp c,rf_loop2
0407F9                   1158 
0407F9 CD CD 12 04       1159 	call fn_refresh_sprite
0407FD C9                1160 	ret
0407FE                   1161 
0407FE                   1162 ; flip frame horizontally
0407FE                   1163 dsl_flip_frame:
0407FE 21 BC FF FF       1164 	ld hl,KEY_F
040802 CD DB 13 04       1165 	call fn_inkey
040806 FE 00             1166 	cp 0
040808 20 F4             1167 	jr nz,dsl_flip_frame
04080A                   1168 
04080A 21 3E 14 04       1169 	ld hl,spr_size
04080E 11 00 00 00       1170 	ld de,$000000
040812 5E                1171 	ld e,(hl)
040813 56                1172 	ld d,(hl)
040814 4B                1173 	ld c,e
040815 ED 5C             1174 	mlt de ; DE = sprite length in bytes
040817 21 15 15 04       1175 	ld hl,current_frame
04081B 7E                1176 	ld a,(hl) ; A = current frame
04081C 21 1E 15 04       1177 	ld hl,sprite_buffer
040820 FE 00             1178 	cp 0
040822 28 04             1179 	jr z,ff_noloop1
040824 47                1180 	ld b,a
040825                   1181 
040825                   1182 ff_loop1:
040825 19                1183 	add hl,de ; HL = sprite_buffer + (current frame * sprsize²)
040826 10 FD             1184 	djnz ff_loop1
040828                   1185 
040828                   1186 ff_noloop1:
040828 41                1187 	ld b,c ; B = sprite height
040829 11 00 00 00       1188 	ld de,$000000
04082D 59                1189 	ld e,c ; DE = sprite width
04082E 79                1190 	ld a,c ; A = sprite width
04082F CB 3F             1191 	srl a ; A = sprite height / 2
040831                   1192 
040831 E5                1193 	push hl
040832 DD E1             1194 	pop ix ; IX = frame address
040834 19                1195 	add hl,de ; HL = frame address + sprite width - 1
040835 2B                1196 	dec hl
040836 E5                1197 	push hl
040837 FD E1             1198 	pop iy ; IY = IX + sprite width - 1
040839                   1199 
040839                   1200 ff_loop2:
040839 F5                1201 	push af
04083A D5                1202 	push de
04083B DD E5             1203 	push ix
04083D FD E5             1204 	push iy
04083F                   1205 ff_loop3:
04083F DD 5E 00          1206 	ld e,(ix+0)
040842 FD 56 00          1207 	ld d,(iy+0)
040845 DD 72 00          1208 	ld (ix+0),d
040848 FD 73 00          1209 	ld (iy+0),e
04084B DD 23             1210 	inc ix
04084D FD 2B             1211 	dec iy
04084F 3D                1212 	dec a
040850 FE 00             1213 	cp 0
040852 20 EB             1214 	jr nz,ff_loop3
040854 FD E1             1215 	pop iy
040856 DD E1             1216 	pop ix
040858 D1                1217 	pop de
040859 F1                1218 	pop af
04085A DD 19             1219 	add ix,de
04085C FD 19             1220 	add iy,de
04085E 10 D9             1221 	djnz ff_loop2
040860                   1222 
040860 CD CD 12 04       1223 	call fn_refresh_sprite
040864 C9                1224 	ret
040865                   1225 
040865                   1226 ; mirror frame vertically
040865                   1227 dsl_mirror_frame:
040865 21 9A FF FF       1228 	ld hl,KEY_M
040869 CD DB 13 04       1229 	call fn_inkey
04086D FE 00             1230 	cp 0
04086F 20 F4             1231 	jr nz,dsl_mirror_frame
040871                   1232 
040871 21 3E 14 04       1233 	ld hl,spr_size
040875 01 00 00 00       1234 	ld bc,$000000
040879 11 00 00 00       1235 	ld de,$000000
04087D 5E                1236 	ld e,(hl)
04087E 56                1237 	ld d,(hl)
04087F 4B                1238 	ld c,e
040880 ED 5C             1239 	mlt de ; DE = sprite length in bytes
040882 21 15 15 04       1240 	ld hl,current_frame
040886 7E                1241 	ld a,(hl) ; A = current frame
040887 21 1E 15 04       1242 	ld hl,sprite_buffer
04088B FE 00             1243 	cp 0
04088D 28 04             1244 	jr z,mf_noloop1
04088F 47                1245 	ld b,a
040890                   1246 
040890                   1247 mf_loop1:
040890 19                1248 	add hl,de ; HL = sprite_buffer + (current frame * sprsize²)
040891 10 FD             1249 	djnz mf_loop1
040893                   1250 
040893                   1251 mf_noloop1:
040893 11 00 00 00       1252 	ld de,$000000
040897 59                1253 	ld e,c ; E = sprite height
040898 79                1254 	ld a,c ; A = sprite width
040899 41                1255 	ld b,c ; B = sprite height
04089A CB 38             1256 	srl b ; divide B by 2, so B = sprite height / 2
04089C                   1257 
04089C E5                1258 	push hl
04089D DD E1             1259 	pop ix ; IX = frame address
04089F 51                1260 	ld d,c
0408A0 15                1261 	dec d
0408A1 ED 5C             1262 	mlt de ; DE = sprite length - sprite width
0408A3 19                1263 	add hl,de ; HL = frame address + sprite length - sprite width
0408A4 E5                1264 	push hl
0408A5 FD E1             1265 	pop iy ; IY = IX + sprite length - sprite width
0408A7 21 00 00 00       1266 	ld hl,$000000
0408AB 69                1267 	ld l,c ; HL = sprite width
0408AC                   1268 
0408AC                   1269 mf_loop2:
0408AC F5                1270 	push af
0408AD D5                1271 	push de
0408AE DD E5             1272 	push ix
0408B0 FD E5             1273 	push iy
0408B2                   1274 mf_loop3:
0408B2 DD 5E 00          1275 	ld e,(ix+0)
0408B5 FD 56 00          1276 	ld d,(iy+0)
0408B8 DD 72 00          1277 	ld (ix+0),d
0408BB FD 73 00          1278 	ld (iy+0),e
0408BE DD 23             1279 	inc ix
0408C0 FD 23             1280 	inc iy
0408C2 3D                1281 	dec a
0408C3 FE 00             1282 	cp 0
0408C5 20 EB             1283 	jr nz,mf_loop3
0408C7 FD E1             1284 	pop iy
0408C9 DD E1             1285 	pop ix
0408CB D1                1286 	pop de
0408CC F1                1287 	pop af
0408CD EB                1288 	ex de,hl
0408CE DD 19             1289 	add ix,de
0408D0 EB                1290 	ex de,hl
0408D1 E5                1291 	push hl
0408D2 FD E5             1292 	push iy
0408D4 E1                1293 	pop hl
0408D5 D1                1294 	pop de
0408D6 B7                1295 	or a
0408D7 ED 52             1296 	sbc hl,de
0408D9 E5                1297 	push hl
0408DA D5                1298 	push de
0408DB E1                1299 	pop hl
0408DC FD E1             1300 	pop iy
0408DE 10 CC             1301 	djnz mf_loop2
0408E0                   1302 
0408E0 CD CD 12 04       1303 	call fn_refresh_sprite
0408E4 C9                1304 	ret
0408E5                   1305 
0408E5                   1306 dsl_flood_fill:
0408E5 21 B6 FF FF       1307 	ld hl,KEY_RETURN
0408E9 CD DB 13 04       1308 	call fn_inkey
0408ED FE 00             1309 	cp 0
0408EF 20 F4             1310 	jr nz,dsl_flood_fill
0408F1                   1311 
0408F1                   1312 	; hide the cursor
0408F1 CD 82 0C 04       1313 	call fn_draw_pixel_without_border
0408F5                   1314 
0408F5                   1315 	; memorize pixel coordinates
0408F5 3A 39 14 04       1316 	ld a,(xpix)
0408F9 32 3B 14 04       1317 	ld (memxpix),a
0408FD 3A 3A 14 04       1318 	ld a,(ypix)
040901 32 3C 14 04       1319 	ld (memypix),a
040905                   1320 
040905                   1321 	; fill all recursively
040905 3A 39 14 04       1322 	ld a,(xpix)
040909 5F                1323 	ld e,a
04090A 3A 3A 14 04       1324 	ld a,(ypix)
04090E 57                1325 	ld d,a
04090F CD 30 09 04       1326 	call dsl_flood_fill_loop
040913                   1327 
040913                   1328 	; refresh all the sprite
040913 CD CD 12 04       1329 	call fn_refresh_sprite
040917                   1330 
040917                   1331 	; hide the cursor again
040917 CD 82 0C 04       1332 	call fn_draw_pixel_without_border
04091B                   1333 
04091B                   1334 	; restore pixel coordinates
04091B                   1335 	; and cursor
04091B 3A 3B 14 04       1336 	ld a,(memxpix)
04091F 32 39 14 04       1337 	ld (xpix),a
040923 3A 3C 14 04       1338 	ld a,(memypix)
040927 32 3A 14 04       1339 	ld (ypix),a
04092B CD 6E 0C 04       1340 	call fn_draw_pixel_with_border
04092F C9                1341 	ret
040930                   1342 
040930                   1343 dsl_flood_fill_loop:
040930 D5                1344 	push de
040931                   1345 
040931 DD 21 3E 14 04    1346 	ld ix,spr_size
040936                   1347 
040936                   1348 	; out  of the sprite area ?
040936 7B                1349 	ld a,e
040937 DD BE 00          1350 	cp (ix+0)
04093A D2 83 09 04       1351 	jp nc,ffl_exit
04093E                   1352 
04093E                   1353 	; out  of the sprite area ?
04093E 7A                1354 	ld a,d
04093F DD BE 00          1355 	cp (ix+0)
040942 D2 83 09 04       1356 	jp nc,ffl_exit
040946                   1357 
040946                   1358 	; replace current pixel, if it is
040946                   1359 	; inside the sprite area,
040946                   1360 	; and has not the select palette color
040946 7B                1361 	ld a,e
040947 32 39 14 04       1362 	ld (xpix),a
04094B 7A                1363 	ld a,d
04094C 32 3A 14 04       1364 	ld (ypix),a
040950 CD 98 0C 04       1365 	call fn_get_pixel_color
040954 21 3F 14 04       1366 	ld hl,current_pen
040958 BE                1367 	cp (hl)
040959 CA 83 09 04       1368 	jp z,ffl_exit
04095D 7E                1369 	ld a,(hl)
04095E CD DA 0C 04       1370 	call fn_set_pixel_color
040962                   1371 
040962                   1372 	; restore coordinates
040962 3A 39 14 04       1373 	ld a,(xpix)
040966 5F                1374 	ld e,a
040967 3A 3A 14 04       1375 	ld a,(ypix)
04096B 57                1376 	ld d,a
04096C                   1377 
04096C                   1378 	; draw pixel at right
04096C 1C                1379 	inc e
04096D CD 30 09 04       1380 	call dsl_flood_fill_loop
040971 1D                1381 	dec e
040972                   1382 	; draw pixel at left
040972 1D                1383 	dec e
040973 CD 30 09 04       1384 	call dsl_flood_fill_loop
040977 1C                1385 	inc e
040978                   1386 	; draw pixel up
040978 14                1387 	inc d
040979 CD 30 09 04       1388 	call dsl_flood_fill_loop
04097D 15                1389 	dec d
04097E                   1390 	; draw pixel down
04097E 15                1391 	dec d
04097F CD 30 09 04       1392 	call dsl_flood_fill_loop
040983                   1393 
040983                   1394 ffl_exit:
040983 D1                1395 	pop de
040984 C9                1396 	ret
040985                   1397 
040985                   1398 ; change current tool to palette
040985                   1399 dsl_palette_tool:
040985 21 9F FF FF       1400 	ld hl,KEY_TAB
040989 CD DB 13 04       1401 	call fn_inkey
04098D FE 00             1402 	cp 0
04098F 20 F4             1403 	jr nz,dsl_palette_tool
040991                   1404 
040991                   1405 	; hide sprite drawing cursor
040991 CD 82 0C 04       1406 	call fn_draw_pixel_without_border
040995                   1407 
040995                   1408 	; draw selected palette color
040995 21 3F 14 04       1409 	ld hl,current_pen
040999 4E                1410 	ld c,(hl)
04099A CD 36 0D 04       1411 	call fn_draw_palette_with_border
04099E                   1412 
04099E                   1413 ; select palette color
04099E                   1414 dsl_palette_tool_loop:
04099E 21 E6 FF FF       1415 	ld hl,KEY_LEFT
0409A2 CD DB 13 04       1416 	call fn_inkey
0409A6 FE 01             1417 	cp 1
0409A8 CC 67 0A 04       1418 	call z,dsl_dec_pen
0409AC                   1419 
0409AC 21 86 FF FF       1420 	ld hl,KEY_RIGHT
0409B0 CD DB 13 04       1421 	call fn_inkey
0409B4 FE 01             1422 	cp 1
0409B6 CC 92 0A 04       1423 	call z,dsl_inc_pen
0409BA                   1424 
0409BA 21 9F FF FF       1425 	ld hl,KEY_TAB
0409BE CD DB 13 04       1426 	call fn_inkey
0409C2 FE 01             1427 	cp 1
0409C4 CA 4A 0A 04       1428 	jp z,dsl_draw_sprite_tool
0409C8                   1429 
0409C8 21 A9 FF FF       1430 	ld hl,KEY_L
0409CC CD DB 13 04       1431 	call fn_inkey
0409D0 FE 01             1432 	cp 1
0409D2 CC F6 09 04       1433 	call z,dslp_load_sprite
0409D6                   1434 
0409D6 21 AE FF FF       1435 	ld hl,KEY_S
0409DA CD DB 13 04       1436 	call fn_inkey
0409DE FE 01             1437 	cp 1
0409E0 CC 24 0A 04       1438 	call z,dslp_save_sprite
0409E4                   1439 
0409E4 21 8F FF FF       1440 	ld hl,KEY_ESCAPE
0409E8 CD DB 13 04       1441 	call fn_inkey
0409EC FE 01             1442 	cp 1
0409EE CA BD 0A 04       1443 	jp z,exit_program
0409F2                   1444 
0409F2 C3 9E 09 04       1445 	jp dsl_palette_tool_loop
0409F6                   1446 
0409F6                   1447 dslp_load_sprite:
0409F6 21 A9 FF FF       1448 	ld hl,KEY_L
0409FA CD DB 13 04       1449 	call fn_inkey
0409FE FE 00             1450 	cp 0
040A00 20 F4             1451 	jr nz,dslp_load_sprite
040A02                   1452 
040A02 21 3F 14 04       1453 	ld hl,current_pen
040A06 4E                1454 	ld c,(hl)
040A07 CD 9B 0D 04       1455 	call fn_draw_palette_without_border
040A0B CD F8 0E 04       1456 	call fn_load_sprite
040A0F 21 3F 14 04       1457 	ld hl,current_pen
040A13 4E                1458 	ld c,(hl)
040A14 CD CD 12 04       1459 	call fn_refresh_sprite
040A18 CD 36 0D 04       1460 	call fn_draw_palette_with_border
040A1C CD 0D 13 04       1461 	call fn_change_frame
040A20 C3 9E 09 04       1462 	jp dsl_palette_tool_loop
040A24                   1463 
040A24                   1464 dslp_save_sprite:
040A24 21 AE FF FF       1465 	ld hl,KEY_S
040A28 CD DB 13 04       1466 	call fn_inkey
040A2C FE 00             1467 	cp 0
040A2E 20 F4             1468 	jr nz,dslp_save_sprite
040A30                   1469 
040A30 21 3F 14 04       1470 	ld hl,current_pen
040A34 4E                1471 	ld c,(hl)
040A35 CD 9B 0D 04       1472 	call fn_draw_palette_without_border
040A39 CD 1D 10 04       1473 	call fn_save_sprite
040A3D 21 3F 14 04       1474 	ld hl,current_pen
040A41 4E                1475 	ld c,(hl)
040A42 CD 36 0D 04       1476 	call fn_draw_palette_with_border
040A46 C3 9E 09 04       1477 	jp dsl_palette_tool_loop
040A4A                   1478 
040A4A                   1479 dsl_draw_sprite_tool:
040A4A 21 9F FF FF       1480 	ld hl,KEY_TAB
040A4E CD DB 13 04       1481 	call fn_inkey
040A52 FE 00             1482 	cp 0
040A54 20 F4             1483 	jr nz,dsl_draw_sprite_tool
040A56                   1484 
040A56                   1485 	; unselect palette color
040A56 21 3F 14 04       1486 	ld hl,current_pen
040A5A 4E                1487 	ld c,(hl)
040A5B CD 9B 0D 04       1488 	call fn_draw_palette_without_border
040A5F                   1489 
040A5F                   1490 	; draw the pixel with a border
040A5F CD 6E 0C 04       1491 	call fn_draw_pixel_with_border
040A63                   1492 
040A63 C3 F2 02 04       1493 	jp draw_sprite_loop
040A67                   1494 
040A67                   1495 dsl_dec_pen:
040A67 21 3F 14 04       1496 	ld hl,current_pen
040A6B 7E                1497 	ld a,(hl)
040A6C FE 00             1498 	cp COLOR_MIN
040A6E CA 9E 09 04       1499 	jp z,dsl_palette_tool_loop
040A72                   1500 
040A72 F5                1501 	push af
040A73 E5                1502 	push hl
040A74                   1503 
040A74                   1504 	; unselect palette color
040A74 21 3F 14 04       1505 	ld hl,current_pen
040A78 4E                1506 	ld c,(hl)
040A79 CD 9B 0D 04       1507 	call fn_draw_palette_without_border
040A7D                   1508 
040A7D E1                1509 	pop hl
040A7E F1                1510 	pop af
040A7F                   1511 
040A7F                   1512 	; dec the pen
040A7F 3D                1513 	dec a
040A80 77                1514 	ld (hl),a
040A81                   1515 
040A81                   1516 	; select palette color
040A81 21 3F 14 04       1517 	ld hl,current_pen
040A85 4E                1518 	ld c,(hl)
040A86 CD 36 0D 04       1519 	call fn_draw_palette_with_border
040A8A CD 56 13 04       1520 	call fn_slowdown
040A8E C3 9E 09 04       1521 	jp dsl_palette_tool_loop
040A92                   1522 
040A92                   1523 dsl_inc_pen:
040A92 21 3F 14 04       1524 	ld hl,current_pen
040A96 7E                1525 	ld a,(hl)
040A97 FE 3F             1526 	cp COLOR_MAX
040A99 CA 9E 09 04       1527 	jp z,dsl_palette_tool_loop
040A9D                   1528 
040A9D F5                1529 	push af
040A9E E5                1530 	push hl
040A9F                   1531 
040A9F                   1532 	; unselect palette color
040A9F 21 3F 14 04       1533 	ld hl,current_pen
040AA3 4E                1534 	ld c,(hl)
040AA4 CD 9B 0D 04       1535 	call fn_draw_palette_without_border
040AA8                   1536 
040AA8 E1                1537 	pop hl
040AA9 F1                1538 	pop af
040AAA                   1539 
040AAA                   1540 	; inc the pen
040AAA 3C                1541 	inc a
040AAB 77                1542 	ld (hl),a
040AAC                   1543 
040AAC                   1544 	; select palette color
040AAC 21 3F 14 04       1545 	ld hl,current_pen
040AB0 4E                1546 	ld c,(hl)
040AB1 CD 36 0D 04       1547 	call fn_draw_palette_with_border
040AB5 CD 56 13 04       1548 	call fn_slowdown
040AB9 C3 9E 09 04       1549 	jp dsl_palette_tool_loop
040ABD                   1550 
040ABD                   1551 ; exit program
040ABD                   1552 exit_program:
040ABD                   1553 	; reset to mode 1
040ABD                   1554 	vdu 22
040ABD 3E 16             1554 		LD	A, function
040ABF 49 D7             1554 		RST.LIS	10h
040AC1                   1555 	vdu 1
040AC1 3E 01             1555 		LD	A, function
040AC3 49 D7             1555 		RST.LIS	10h
040AC5                   1556 
040AC5                   1557 	; position the texte cursor at home
040AC5                   1558 	vdu 30
040AC5 3E 1E             1558 		LD	A, function
040AC7 49 D7             1558 		RST.LIS	10h
040AC9                   1559 
040AC9                   1560 	; show cursor
040AC9                   1561 	vdu 23
040AC9 3E 17             1561 		LD	A, function
040ACB 49 D7             1561 		RST.LIS	10h
040ACD                   1562 	vdu 1
040ACD 3E 01             1562 		LD	A, function
040ACF 49 D7             1562 		RST.LIS	10h
040AD1                   1563 	vdu 1
040AD1 3E 01             1563 		LD	A, function
040AD3 49 D7             1563 		RST.LIS	10h
040AD5                   1564 
040AD5 FD E1             1565 	pop iy
040AD7 DD E1             1566 	pop ix
040AD9 D1                1567 	pop de
040ADA C1                1568 	pop bc
040ADB F1                1569 	pop af
040ADC 21 00 00 00       1570 	ld hl,0
040AE0                   1571 
040AE0 C9                1572 	ret
040AE1                   1573 ;======================================================================
040AE1                   1574 
040AE1                   1575 ; draw a rectangle
040AE1                   1576 fn_rect:
040AE1                   1577 	vdu 25
040AE1 3E 19             1577 		LD	A, function
040AE3 49 D7             1577 		RST.LIS	10h
040AE5                   1578 	vdu 4
040AE5 3E 04             1578 		LD	A, function
040AE7 49 D7             1578 		RST.LIS	10h
040AE9 DD 21 29 14 04    1579 	ld ix,x1
040AEE DD 7E 00          1580 	ld a,(ix + 0)
040AF1                   1581 	vdu_a
040AF1 49 D7             1581 		RST.LIS	10h
040AF3 DD 7E 01          1582 	ld a,(ix + 1)
040AF6                   1583 	vdu_a
040AF6 49 D7             1583 		RST.LIS	10h
040AF8 FD 21 2B 14 04    1584 	ld iy,y1
040AFD FD 7E 00          1585 	ld a,(iy + 0)
040B00                   1586 	vdu_a
040B00 49 D7             1586 		RST.LIS	10h
040B02 FD 7E 01          1587 	ld a,(iy + 1)
040B05                   1588 	vdu_a
040B05 49 D7             1588 		RST.LIS	10h
040B07                   1589 
040B07                   1590 	vdu 25
040B07 3E 19             1590 		LD	A, function
040B09 49 D7             1590 		RST.LIS	10h
040B0B                   1591 	vdu 5
040B0B 3E 05             1591 		LD	A, function
040B0D 49 D7             1591 		RST.LIS	10h
040B0F DD 21 2D 14 04    1592 	ld ix,x2
040B14 DD 7E 00          1593 	ld a,(ix + 0)
040B17                   1594 	vdu_a
040B17 49 D7             1594 		RST.LIS	10h
040B19 DD 7E 01          1595 	ld a,(ix + 1)
040B1C                   1596 	vdu_a
040B1C 49 D7             1596 		RST.LIS	10h
040B1E FD 21 2B 14 04    1597 	ld iy,y1
040B23 FD 7E 00          1598 	ld a,(iy + 0)
040B26                   1599 	vdu_a
040B26 49 D7             1599 		RST.LIS	10h
040B28 FD 7E 01          1600 	ld a,(iy + 1)
040B2B                   1601 	vdu_a
040B2B 49 D7             1601 		RST.LIS	10h
040B2D                   1602 
040B2D                   1603 	vdu 25
040B2D 3E 19             1603 		LD	A, function
040B2F 49 D7             1603 		RST.LIS	10h
040B31                   1604 	vdu 5
040B31 3E 05             1604 		LD	A, function
040B33 49 D7             1604 		RST.LIS	10h
040B35 DD 21 2D 14 04    1605 	ld ix,x2
040B3A DD 7E 00          1606 	ld a,(ix + 0)
040B3D                   1607 	vdu_a
040B3D 49 D7             1607 		RST.LIS	10h
040B3F DD 7E 01          1608 	ld a,(ix + 1)
040B42                   1609 	vdu_a
040B42 49 D7             1609 		RST.LIS	10h
040B44 FD 21 2F 14 04    1610 	ld iy,y2
040B49 FD 7E 00          1611 	ld a,(iy + 0)
040B4C                   1612 	vdu_a
040B4C 49 D7             1612 		RST.LIS	10h
040B4E FD 7E 01          1613 	ld a,(iy + 1)
040B51                   1614 	vdu_a
040B51 49 D7             1614 		RST.LIS	10h
040B53                   1615 
040B53                   1616 	vdu 25
040B53 3E 19             1616 		LD	A, function
040B55 49 D7             1616 		RST.LIS	10h
040B57                   1617 	vdu 5
040B57 3E 05             1617 		LD	A, function
040B59 49 D7             1617 		RST.LIS	10h
040B5B DD 21 29 14 04    1618 	ld ix,x1
040B60 DD 7E 00          1619 	ld a,(ix + 0)
040B63                   1620 	vdu_a
040B63 49 D7             1620 		RST.LIS	10h
040B65 DD 7E 01          1621 	ld a,(ix + 1)
040B68                   1622 	vdu_a
040B68 49 D7             1622 		RST.LIS	10h
040B6A FD 21 2F 14 04    1623 	ld iy,y2
040B6F FD 7E 00          1624 	ld a,(iy + 0)
040B72                   1625 	vdu_a
040B72 49 D7             1625 		RST.LIS	10h
040B74 FD 7E 01          1626 	ld a,(iy + 1)
040B77                   1627 	vdu_a
040B77 49 D7             1627 		RST.LIS	10h
040B79                   1628 
040B79                   1629 	vdu 25
040B79 3E 19             1629 		LD	A, function
040B7B 49 D7             1629 		RST.LIS	10h
040B7D                   1630 	vdu 5
040B7D 3E 05             1630 		LD	A, function
040B7F 49 D7             1630 		RST.LIS	10h
040B81 DD 21 29 14 04    1631 	ld ix,x1
040B86 DD 7E 00          1632 	ld a,(ix + 0)
040B89                   1633 	vdu_a
040B89 49 D7             1633 		RST.LIS	10h
040B8B DD 7E 01          1634 	ld a,(ix + 1)
040B8E                   1635 	vdu_a
040B8E 49 D7             1635 		RST.LIS	10h
040B90 FD 21 2B 14 04    1636 	ld iy,y1
040B95 FD 7E 00          1637 	ld a,(iy + 0)
040B98                   1638 	vdu_a
040B98 49 D7             1638 		RST.LIS	10h
040B9A FD 7E 01          1639 	ld a,(iy + 1)
040B9D                   1640 	vdu_a
040B9D 49 D7             1640 		RST.LIS	10h
040B9F                   1641 
040B9F C9                1642 	ret
040BA0                   1643 
040BA0                   1644 ; draw a filled rectangle
040BA0                   1645 fn_rectf:
040BA0 DD 21 29 14 04    1646 	ld ix,x1
040BA5 FD 21 2B 14 04    1647 	ld iy,y1
040BAA                   1648 
040BAA                   1649 	vdu 25
040BAA 3E 19             1649 		LD	A, function
040BAC 49 D7             1649 		RST.LIS	10h
040BAE                   1650 	vdu 4
040BAE 3E 04             1650 		LD	A, function
040BB0 49 D7             1650 		RST.LIS	10h
040BB2 DD 7E 00          1651 	ld a,(ix+0)
040BB5                   1652 	vdu_a
040BB5 49 D7             1652 		RST.LIS	10h
040BB7 DD 7E 01          1653 	ld a,(ix+1)
040BBA                   1654 	vdu_a
040BBA 49 D7             1654 		RST.LIS	10h
040BBC FD 7E 00          1655 	ld a,(iy+0)
040BBF                   1656 	vdu_a
040BBF 49 D7             1656 		RST.LIS	10h
040BC1 FD 7E 01          1657 	ld a,(iy+1)
040BC4                   1658 	vdu_a
040BC4 49 D7             1658 		RST.LIS	10h
040BC6                   1659 
040BC6 DD 21 2D 14 04    1660 	ld ix,x2
040BCB FD 21 2F 14 04    1661 	ld iy,y2
040BD0                   1662 
040BD0                   1663 	vdu 25
040BD0 3E 19             1663 		LD	A, function
040BD2 49 D7             1663 		RST.LIS	10h
040BD4                   1664 	vdu 101
040BD4 3E 65             1664 		LD	A, function
040BD6 49 D7             1664 		RST.LIS	10h
040BD8 DD 7E 00          1665 	ld a,(ix+0)
040BDB                   1666 	vdu_a
040BDB 49 D7             1666 		RST.LIS	10h
040BDD DD 7E 01          1667 	ld a,(ix+1)
040BE0                   1668 	vdu_a
040BE0 49 D7             1668 		RST.LIS	10h
040BE2 FD 7E 00          1669 	ld a,(iy+0)
040BE5                   1670 	vdu_a
040BE5 49 D7             1670 		RST.LIS	10h
040BE7 FD 7E 01          1671 	ld a,(iy+1)
040BEA                   1672 	vdu_a
040BEA 49 D7             1672 		RST.LIS	10h
040BEC                   1673 
040BEC C9                1674 	ret
040BED                   1675 
040BED                   1676 fn_calc_pixel_coords:
040BED 11 00 00 00       1677 	ld de,$000000 ; reset deu
040BF1                   1678 
040BF1                   1679 	; calculate coordinates x of the resized pixel
040BF1 21 39 14 04       1680 	ld hl,xpix
040BF5 5E                1681 	ld e,(hl) ; E = xpix
040BF6 21 3D 14 04       1682 	ld hl,pixel_width
040BFA 56                1683 	ld d,(hl) ; D = pixel_width
040BFB D5                1684 	push de
040BFC E1                1685 	pop hl ; HL = DE
040BFD ED 6C             1686 	mlt hl ; HL = xpix * pixel_width
040BFF DD 21 31 14 04    1687 	ld ix,xs1
040C04 DD 5E 00          1688 	ld e,(ix+0)
040C07 DD 56 01          1689 	ld d,(ix+1)
040C0A 13                1690 	inc de ; DE = xs1 + 1
040C0B 19                1691 	add hl,de ; HL = (xpix * pixel_width) + xs1 + 1
040C0C FD 21 29 14 04    1692 	ld iy,x1
040C11 FD 75 00          1693 	ld (iy+0),l
040C14 FD 74 01          1694 	ld (iy+1),h ; x1 = (xpix * pixel_width) + xs1 + 1
040C17 E5                1695 	push hl
040C18 21 3D 14 04       1696 	ld hl,pixel_width
040C1C 16 00             1697 	ld d,0
040C1E 5E                1698 	ld e,(hl)
040C1F E1                1699 	pop hl
040C20 19                1700 	add hl,de
040C21 2B                1701 	dec hl
040C22 FD 21 2D 14 04    1702 	ld iy,x2
040C27 FD 75 00          1703 	ld (iy+0),l
040C2A FD 74 01          1704 	ld (iy+1),h ; x2 = x1 + pixel_width - 1
040C2D                   1705 
040C2D 11 00 00 00       1706 	ld de,$000000 ; reset deu
040C31                   1707 
040C31                   1708 	; calculate coordinates y of the resized pixel
040C31 21 3A 14 04       1709 	ld hl,ypix
040C35 5E                1710 	ld e,(hl) ; E = ypix
040C36 21 3D 14 04       1711 	ld hl,pixel_width
040C3A 56                1712 	ld d,(hl) ; D = pixel_width
040C3B D5                1713 	push de
040C3C E1                1714 	pop hl ; HL = DE
040C3D ED 6C             1715 	mlt hl ; HL = ypix * pixel_width
040C3F DD 21 33 14 04    1716 	ld ix,ys1
040C44 DD 5E 00          1717 	ld e,(ix+0)
040C47 DD 56 01          1718 	ld d,(ix+1) ; ys1 = ypix * pixel_width
040C4A 13                1719 	inc de ; DE = ys1 + 1
040C4B 19                1720 	add hl,de ; HL = (ypix * pixel_width) + ys1 + 1
040C4C FD 21 2B 14 04    1721 	ld iy,y1
040C51 FD 75 00          1722 	ld (iy+0),l
040C54 FD 74 01          1723 	ld (iy+1),h ; y1 = (ypix * pixel_width) + ys1 + 1
040C57 E5                1724 	push hl
040C58 21 3D 14 04       1725 	ld hl,pixel_width
040C5C 16 00             1726 	ld d,0
040C5E 5E                1727 	ld e,(hl)
040C5F E1                1728 	pop hl
040C60 19                1729 	add hl,de
040C61 2B                1730 	dec hl
040C62 FD 21 2F 14 04    1731 	ld iy,y2
040C67 FD 75 00          1732 	ld (iy+0),l
040C6A FD 74 01          1733 	ld (iy+1),h ; y2 = y1 + pixel_width - 1
040C6D                   1734 
040C6D C9                1735 	ret
040C6E                   1736 
040C6E                   1737 ; draw the resized pixel border, with its color
040C6E                   1738 fn_draw_pixel_with_border:
040C6E CD 82 0C 04       1739 	call fn_draw_pixel_without_border
040C72                   1740 
040C72                   1741 	; set graphics pen
040C72                   1742 	vdu 18
040C72 3E 12             1742 		LD	A, function
040C74 49 D7             1742 		RST.LIS	10h
040C76                   1743 	vdu 0
040C76 3E 00             1743 		LD	A, function
040C78 49 D7             1743 		RST.LIS	10h
040C7A                   1744 	vdu COLOR_GREY ; grey pen
040C7A 3E 07             1744 		LD	A, function
040C7C 49 D7             1744 		RST.LIS	10h
040C7E                   1745 
040C7E                   1746 	; draw the sprite's border rectangle
040C7E C3 E1 0A 04       1747 	jp fn_rect
040C82                   1748 
040C82                   1749 ; draw the resized pixel color
040C82                   1750 fn_draw_pixel_without_border:
040C82 CD ED 0B 04       1751 	call fn_calc_pixel_coords
040C86                   1752 
040C86                   1753 	; set graphics pen
040C86                   1754 	vdu 18
040C86 3E 12             1754 		LD	A, function
040C88 49 D7             1754 		RST.LIS	10h
040C8A                   1755 	vdu 0
040C8A 3E 00             1755 		LD	A, function
040C8C 49 D7             1755 		RST.LIS	10h
040C8E CD 98 0C 04       1756 	call fn_get_pixel_color
040C92                   1757 	vdu_a
040C92 49 D7             1757 		RST.LIS	10h
040C94                   1758 
040C94                   1759 	; draw the sprite's color rectangle
040C94 C3 A0 0B 04       1760 	jp fn_rectf
040C98                   1761 
040C98                   1762 ; get pixel color value in the sprite buffer
040C98                   1763 ; returns A: pixel color (0-63)
040C98                   1764 fn_get_pixel_color:
040C98 11 00 00 00       1765 	ld de,$000000 ; reset deu
040C9C                   1766 
040C9C                   1767 	; calculate the offset to add to the address
040C9C 21 3A 14 04       1768 	ld hl,ypix
040CA0 5E                1769 	ld e,(hl) ; E = ypix
040CA1 21 3E 14 04       1770 	ld hl,spr_size
040CA5 56                1771 	ld d,(hl) ; D = sprsize
040CA6 D5                1772 	push de
040CA7 E1                1773 	pop hl
040CA8 ED 6C             1774 	mlt hl ; HL = ypix * sprsize
040CAA E5                1775 	push hl
040CAB 21 39 14 04       1776 	ld hl,xpix
040CAF 5E                1777 	ld e,(hl)
040CB0 16 00             1778 	ld d,0
040CB2 E1                1779 	pop hl
040CB3 19                1780 	add hl,de ; HL = (ypix * sprsize) + xpix
040CB4                   1781 
040CB4 11 15 15 04       1782 	ld de,current_frame
040CB8 1A                1783 	ld a,(de)
040CB9 FE 00             1784 	cp 0
040CBB 28 16             1785 	jr z,gpc_end_loop
040CBD                   1786 
040CBD 47                1787 	ld b,a
040CBE E5                1788 	push hl
040CBF 11 00 00 00       1789 	ld de,$000000
040CC3 21 3E 14 04       1790 	ld hl,spr_size
040CC7 5E                1791 	ld e,(hl)
040CC8 56                1792 	ld d,(hl)
040CC9 D5                1793 	push de
040CCA E1                1794 	pop hl
040CCB ED 6C             1795 	mlt hl
040CCD E5                1796 	push hl
040CCE D1                1797 	pop de ; DE = sprsize²
040CCF E1                1798 	pop hl
040CD0                   1799 
040CD0                   1800 gpc_loop:
040CD0 19                1801 	add hl,de
040CD1 10 FD             1802 	djnz gpc_loop
040CD3                   1803 
040CD3                   1804 gpc_end_loop:
040CD3                   1805 	; add the offset to the address
040CD3 11 1E 15 04       1806 	ld de,sprite_buffer
040CD7 19                1807 	add hl,de ; HL = sprite_buffer + ((ypix * sprsize) + xpix)
040CD8                   1808 
040CD8                   1809 	; get pixel color value
040CD8 7E                1810 	ld a,(hl)
040CD9                   1811 
040CD9 C9                1812 	ret
040CDA                   1813 
040CDA                   1814 ; get pixel color value in the sprite buffer
040CDA                   1815 ; A: pixel color (0-63)
040CDA                   1816 fn_set_pixel_color:
040CDA 11 00 00 00       1817 	ld de,$000000 ; reset deu
040CDE                   1818 
040CDE                   1819 	; calculate the offset to add to the address
040CDE 21 3A 14 04       1820 	ld hl,ypix
040CE2 5E                1821 	ld e,(hl) ; E = ypix
040CE3 21 3E 14 04       1822 	ld hl,spr_size
040CE7 56                1823 	ld d,(hl) ; D = sprsize
040CE8 D5                1824 	push de
040CE9 E1                1825 	pop hl
040CEA ED 6C             1826 	mlt hl ; HL = ypix * sprsize
040CEC E5                1827 	push hl
040CED 21 39 14 04       1828 	ld hl,xpix
040CF1 5E                1829 	ld e,(hl)
040CF2 16 00             1830 	ld d,0
040CF4 E1                1831 	pop hl
040CF5 19                1832 	add hl,de ; HL = (ypix * sprsize) + xpix
040CF6 F5                1833 	push af
040CF7                   1834 
040CF7 11 15 15 04       1835 	ld de,current_frame
040CFB 1A                1836 	ld a,(de)
040CFC FE 00             1837 	cp 0
040CFE 28 16             1838 	jr z,spc_end_loop
040D00                   1839 
040D00 47                1840 	ld b,a
040D01 E5                1841 	push hl
040D02 11 00 00 00       1842 	ld de,$000000
040D06 21 3E 14 04       1843 	ld hl,spr_size
040D0A 5E                1844 	ld e,(hl)
040D0B 56                1845 	ld d,(hl)
040D0C D5                1846 	push de
040D0D E1                1847 	pop hl
040D0E ED 6C             1848 	mlt hl
040D10 E5                1849 	push hl
040D11 D1                1850 	pop de ; DE = sprsize²
040D12 E1                1851 	pop hl
040D13                   1852 
040D13                   1853 spc_loop:
040D13 19                1854 	add hl,de
040D14 10 FD             1855 	djnz spc_loop
040D16                   1856 
040D16                   1857 spc_end_loop:
040D16                   1858 
040D16                   1859 	; add the offset to the address
040D16 11 1E 15 04       1860 	ld de,sprite_buffer
040D1A 19                1861 	add hl,de ; HL = sprite_buffer + ((ypix * sprsize) + xpix)
040D1B                   1862 
040D1B                   1863 	; set pixel color value
040D1B F1                1864 	pop af
040D1C 77                1865 	ld (hl),a
040D1D                   1866 
040D1D C9                1867 	ret
040D1E                   1868 
040D1E                   1869 fn_move_up:
040D1E 21 3A 14 04       1870 	ld hl,ypix
040D22 35                1871 	dec (hl)
040D23 C9                1872 	ret
040D24                   1873 
040D24                   1874 fn_move_down:
040D24 21 3A 14 04       1875 	ld hl,ypix
040D28 34                1876 	inc (hl)
040D29 C9                1877 	ret
040D2A                   1878 
040D2A                   1879 fn_move_left:
040D2A 21 39 14 04       1880 	ld hl,xpix
040D2E 35                1881 	dec (hl)
040D2F C9                1882 	ret
040D30                   1883 
040D30                   1884 fn_move_right:
040D30 21 39 14 04       1885 	ld hl,xpix
040D34 34                1886 	inc (hl)
040D35 C9                1887 	ret
040D36                   1888 
040D36                   1889 ; draw palette color whit border and selection
040D36                   1890 ; C = color number (0-63)
040D36                   1891 fn_draw_palette_with_border:
040D36 C5                1892 	push bc
040D37                   1893 
040D37                   1894 	; choose palette color
040D37                   1895 	vdu 18
040D37 3E 12             1895 		LD	A, function
040D39 49 D7             1895 		RST.LIS	10h
040D3B                   1896 	vdu 0
040D3B 3E 00             1896 		LD	A, function
040D3D 49 D7             1896 		RST.LIS	10h
040D3F C1                1897 	pop bc
040D40 C5                1898 	push bc
040D41 79                1899 	ld a,c
040D42                   1900 	vdu_a
040D42 49 D7             1900 		RST.LIS	10h
040D44                   1901 
040D44                   1902 	; store coordinates for a palette square
040D44 DD 21 29 14 04    1903 	ld ix,x1
040D49 E1                1904 	pop hl
040D4A E5                1905 	push hl
040D4B 26 05             1906 	ld h,5
040D4D ED 6C             1907 	mlt hl
040D4F E5                1908 	push hl
040D50 DD 75 00          1909 	ld (ix+0),l
040D53 DD 74 01          1910 	ld (ix+1),h
040D56                   1911 
040D56 DD 21 2B 14 04    1912 	ld ix,y1
040D5B 21 00 00 00       1913 	ld hl,0
040D5F DD 75 00          1914 	ld (ix+0),l
040D62 DD 74 01          1915 	ld (ix+1),h
040D65                   1916 
040D65 DD 21 2D 14 04    1917 	ld ix,x2
040D6A E1                1918 	pop hl
040D6B 11 04 00 00       1919 	ld de,4
040D6F 19                1920 	add hl,de
040D70 DD 75 00          1921 	ld (ix+0),l
040D73 DD 74 01          1922 	ld (ix+1),h
040D76                   1923 
040D76 DD 21 2F 14 04    1924 	ld ix,y2
040D7B 21 0A 00 00       1925 	ld hl,10
040D7F DD 75 00          1926 	ld (ix+0),l
040D82 DD 74 01          1927 	ld (ix+1),h
040D85                   1928 
040D85                   1929 	; draw the palette filled square
040D85 CD A0 0B 04       1930 	call fn_rectf
040D89                   1931 
040D89                   1932 	; choose grey color
040D89                   1933 	vdu 18
040D89 3E 12             1933 		LD	A, function
040D8B 49 D7             1933 		RST.LIS	10h
040D8D                   1934 	vdu 0
040D8D 3E 00             1934 		LD	A, function
040D8F 49 D7             1934 		RST.LIS	10h
040D91 3E 07             1935 	ld a,COLOR_GREY
040D93                   1936 	vdu_a
040D93 49 D7             1936 		RST.LIS	10h
040D95                   1937 
040D95                   1938 	; draw the palette square border
040D95 CD E1 0A 04       1939 	call fn_rect
040D99                   1940 
040D99                   1941 	; next color ?
040D99 C1                1942 	pop bc
040D9A                   1943 
040D9A C9                1944 	ret
040D9B                   1945 
040D9B                   1946 ; draw palette color whitout border and selection
040D9B                   1947 ; C = color number (0-63)
040D9B                   1948 fn_draw_palette_without_border:
040D9B C5                1949 	push bc
040D9C                   1950 
040D9C                   1951 	; choose palette color
040D9C                   1952 	vdu 18
040D9C 3E 12             1952 		LD	A, function
040D9E 49 D7             1952 		RST.LIS	10h
040DA0                   1953 	vdu 0
040DA0 3E 00             1953 		LD	A, function
040DA2 49 D7             1953 		RST.LIS	10h
040DA4 C1                1954 	pop bc
040DA5 C5                1955 	push bc
040DA6 79                1956 	ld a,c
040DA7                   1957 	vdu_a
040DA7 49 D7             1957 		RST.LIS	10h
040DA9                   1958 
040DA9                   1959 	; store coordinates for a palette square
040DA9 DD 21 29 14 04    1960 	ld ix,x1
040DAE E1                1961 	pop hl
040DAF E5                1962 	push hl
040DB0 26 05             1963 	ld h,5
040DB2 ED 6C             1964 	mlt hl
040DB4 E5                1965 	push hl
040DB5 DD 75 00          1966 	ld (ix+0),l
040DB8 DD 74 01          1967 	ld (ix+1),h
040DBB                   1968 
040DBB DD 21 2B 14 04    1969 	ld ix,y1
040DC0 21 00 00 00       1970 	ld hl,0
040DC4 DD 75 00          1971 	ld (ix+0),l
040DC7 DD 74 01          1972 	ld (ix+1),h
040DCA                   1973 
040DCA DD 21 2D 14 04    1974 	ld ix,x2
040DCF E1                1975 	pop hl
040DD0 11 04 00 00       1976 	ld de,4
040DD4 19                1977 	add hl,de
040DD5 DD 75 00          1978 	ld (ix+0),l
040DD8 DD 74 01          1979 	ld (ix+1),h
040DDB                   1980 
040DDB DD 21 2F 14 04    1981 	ld ix,y2
040DE0 21 0A 00 00       1982 	ld hl,10
040DE4 DD 75 00          1983 	ld (ix+0),l
040DE7 DD 74 01          1984 	ld (ix+1),h
040DEA                   1985 
040DEA                   1986 	; draw the palette filled square
040DEA CD A0 0B 04       1987 	call fn_rectf
040DEE                   1988 
040DEE C1                1989 	pop bc
040DEF                   1990 
040DEF C9                1991 	ret
040DF0                   1992 
040DF0                   1993 ; get an ascii key value
040DF0                   1994 fn_input_key:
040DF0 C5                1995 	push bc
040DF1                   1996 	moscall mos_getkey
040DF1 3E 00             1996 		LD	A, function
040DF3 49 CF             1996 		RST.LIS	08h
040DF5 C1                1997 	pop bc
040DF6 C9                1998 	ret
040DF7                   1999 
040DF7                   2000 ; input a text of 8 chars
040DF7                   2001 fn_input_text8:
040DF7                   2002 	; locate x,y
040DF7                   2003 	vdu 31
040DF7 3E 1F             2003 		LD	A, function
040DF9 49 D7             2003 		RST.LIS	10h
040DFB                   2004 	vdu FILENAME_X
040DFB 3E 07             2004 		LD	A, function
040DFD 49 D7             2004 		RST.LIS	10h
040DFF                   2005 	vdu FILENAME_Y
040DFF 3E 18             2005 		LD	A, function
040E01 49 D7             2005 		RST.LIS	10h
040E03                   2006 
040E03                   2007 	; print text
040E03 21 AB 14 04       2008 	ld hl,filename_label
040E07 01 00 00 00       2009 	ld bc,0
040E0B AF                2010 	xor a
040E0C 49 DF             2011 	rst.lis $18
040E0E                   2012 
040E0E                   2013 	; show cursor
040E0E                   2014 	vdu 23
040E0E 3E 17             2014 		LD	A, function
040E10 49 D7             2014 		RST.LIS	10h
040E12                   2015 	vdu 1
040E12 3E 01             2015 		LD	A, function
040E14 49 D7             2015 		RST.LIS	10h
040E16                   2016 	vdu 1
040E16 3E 01             2016 		LD	A, function
040E18 49 D7             2016 		RST.LIS	10h
040E1A                   2017 
040E1A 0E 00             2018 	ld c,0
040E1C                   2019 
040E1C                   2020 it8_loop:
040E1C                   2021 	; get ascii key
040E1C CD F0 0D 04       2022 	call fn_input_key
040E20 B7                2023 	or a
040E21 CA 1C 0E 04       2024 	jp z,it8_loop
040E25                   2025 
040E25 FE 2E             2026 	cp '.'
040E27 CA 71 0E 04       2027 	jp z,it8l_add_char
040E2B                   2028 
040E2B FE 2D             2029 	cp '-'
040E2D CA 71 0E 04       2030 	jp z,it8l_add_char
040E31                   2031 
040E31 FE 5F             2032 	cp '_'
040E33 CA 71 0E 04       2033 	jp z,it8l_add_char
040E37                   2034 
040E37 FE 7F             2035 	cp 127
040E39 CA A5 0E 04       2036 	jp z,it8l_backspace
040E3D                   2037 
040E3D FE 0D             2038 	cp 13
040E3F CA D4 0E 04       2039 	jp z,it8l_return
040E43                   2040 
040E43 FE 30             2041 	cp '0'
040E45 DA 1C 0E 04       2042 	jp c,it8_loop
040E49                   2043 
040E49 16 39             2044 	ld d,'9'
040E4B 14                2045 	inc d
040E4C BA                2046 	cp d
040E4D DA 71 0E 04       2047 	jp c,it8l_add_char
040E51                   2048 
040E51 FE 41             2049 	cp 'A'
040E53 DA 1C 0E 04       2050 	jp c,it8_loop
040E57                   2051 
040E57 16 5A             2052 	ld d,'Z'
040E59 14                2053 	inc d
040E5A BA                2054 	cp d
040E5B DA 71 0E 04       2055 	jp c,it8l_add_char
040E5F                   2056 
040E5F FE 61             2057 	cp 'a'
040E61 DA 1C 0E 04       2058 	jp c,it8_loop
040E65                   2059 
040E65 16 7A             2060 	ld d,'z'
040E67 14                2061 	inc d
040E68 BA                2062 	cp d
040E69 DA 71 0E 04       2063 	jp c,it8l_add_char
040E6D                   2064 
040E6D C3 1C 0E 04       2065 	jp it8_loop
040E71                   2066 
040E71                   2067 it8l_add_char:
040E71 F5                2068 	push af
040E72 79                2069 	ld a,c
040E73 FE 0C             2070 	cp 12
040E75 38 05             2071 	jr c,it8l_poke_char
040E77 F1                2072 	pop af
040E78 C3 1C 0E 04       2073 	jp it8_loop
040E7C                   2074 
040E7C                   2075 it8l_poke_char:
040E7C F1                2076 	pop af
040E7D 21 B5 14 04       2077 	ld hl,filename
040E81 06 00             2078 	ld b,0
040E83 09                2079 	add hl,bc
040E84 77                2080 	ld (hl),a
040E85 0C                2081 	inc c
040E86 F5                2082 	push af
040E87 C5                2083 	push bc
040E88                   2084 
040E88                   2085 	; locate x,y
040E88                   2086 	vdu 31
040E88 3E 1F             2086 		LD	A, function
040E8A 49 D7             2086 		RST.LIS	10h
040E8C                   2087 	vdu FILENAME_X+10
040E8C 3E 11             2087 		LD	A, function
040E8E 49 D7             2087 		RST.LIS	10h
040E90                   2088 	vdu FILENAME_Y
040E90 3E 18             2088 		LD	A, function
040E92 49 D7             2088 		RST.LIS	10h
040E94                   2089 
040E94                   2090 	; print text
040E94 21 B5 14 04       2091 	ld hl,filename
040E98 01 00 00 00       2092 	ld bc,0
040E9C AF                2093 	xor a
040E9D 49 DF             2094 	rst.lis $18
040E9F                   2095 
040E9F C1                2096 	pop bc
040EA0 F1                2097 	pop af
040EA1                   2098 
040EA1 C3 1C 0E 04       2099 	jp it8_loop
040EA5                   2100 
040EA5                   2101 it8l_backspace:
040EA5 79                2102 	ld a,c
040EA6 FE 00             2103 	cp 0
040EA8 CA 1C 0E 04       2104 	jp z,it8_loop
040EAC                   2105 
040EAC                   2106 	; delete a character of the filename
040EAC 21 B5 14 04       2107 	ld hl,filename
040EB0 06 00             2108 	ld b,0
040EB2 09                2109 	add hl,bc
040EB3 AF                2110 	xor a
040EB4 77                2111 	ld (hl),a
040EB5 0D                2112 	dec c
040EB6 C5                2113 	push bc
040EB7                   2114 
040EB7                   2115 	; locate x,y
040EB7                   2116 	vdu 31
040EB7 3E 1F             2116 		LD	A, function
040EB9 49 D7             2116 		RST.LIS	10h
040EBB 3E 11             2117 	ld a,FILENAME_X+10
040EBD 81                2118 	add a,c
040EBE                   2119 	vdu_a
040EBE 49 D7             2119 		RST.LIS	10h
040EC0                   2120 	vdu FILENAME_Y
040EC0 3E 18             2120 		LD	A, function
040EC2 49 D7             2120 		RST.LIS	10h
040EC4                   2121 
040EC4                   2122 	; print text
040EC4 21 CD 14 04       2123 	ld hl,spacechar
040EC8 01 00 00 00       2124 	ld bc,0
040ECC AF                2125 	xor a
040ECD 49 DF             2126 	rst.lis $18
040ECF                   2127 
040ECF C1                2128 	pop bc
040ED0 C3 1C 0E 04       2129 	jp it8_loop
040ED4                   2130 
040ED4                   2131 it8l_return:
040ED4                   2132 	; locate x,y
040ED4                   2133 	vdu 31
040ED4 3E 1F             2133 		LD	A, function
040ED6 49 D7             2133 		RST.LIS	10h
040ED8                   2134 	vdu FILENAME_X
040ED8 3E 07             2134 		LD	A, function
040EDA 49 D7             2134 		RST.LIS	10h
040EDC                   2135 	vdu FILENAME_Y
040EDC 3E 18             2135 		LD	A, function
040EDE 49 D7             2135 		RST.LIS	10h
040EE0                   2136 
040EE0                   2137 	; print text
040EE0 21 CF 14 04       2138 	ld hl,void_filename
040EE4 01 00 00 00       2139 	ld bc,0
040EE8 AF                2140 	xor a
040EE9 49 DF             2141 	rst.lis $18
040EEB                   2142 
040EEB                   2143 	; hide cursor
040EEB                   2144 	vdu 23
040EEB 3E 17             2144 		LD	A, function
040EED 49 D7             2144 		RST.LIS	10h
040EEF                   2145 	vdu 1
040EEF 3E 01             2145 		LD	A, function
040EF1 49 D7             2145 		RST.LIS	10h
040EF3                   2146 	vdu 0
040EF3 3E 00             2146 		LD	A, function
040EF5 49 D7             2146 		RST.LIS	10h
040EF7                   2147 
040EF7 C9                2148 	ret
040EF8                   2149 
040EF8                   2150 ; load a sprite, giving its name
040EF8                   2151 fn_load_sprite:
040EF8                   2152 	; clear filename
040EF8 21 B5 14 04       2153 	ld hl,filename
040EFC 06 0C             2154 	ld b,12
040EFE AF                2155 	xor a
040EFF                   2156 
040EFF                   2157 ls_clear_filename:
040EFF 77                2158 	ld (hl),a
040F00 23                2159 	inc hl
040F01 10 FC             2160 	djnz ls_clear_filename
040F03                   2161 
040F03                   2162 	; get filename
040F03 CD F7 0D 04       2163 	call fn_input_text8
040F07                   2164 
040F07                   2165 	; set path to home
040F07 21 C2 14 04       2166 	ld hl,sprite_path
040F0B                   2167 	moscall mos_cd
040F0B 3E 03             2167 		LD	A, function
040F0D 49 CF             2167 		RST.LIS	08h
040F0F                   2168 
040F0F                   2169 	; exit on error
040F0F FE 00             2170 	cp 0
040F11 C2 DC 0F 04       2171 	jp nz,ls_folder_error
040F15                   2172 
040F15                   2173 	; open the file for read
040F15 21 B5 14 04       2174 	ld hl,filename
040F19 0E 01             2175 	ld c,fa_open_existing|fa_read
040F1B                   2176 	moscall mos_fopen
040F1B 3E 0A             2176 		LD	A, function
040F1D 49 CF             2176 		RST.LIS	08h
040F1F                   2177 
040F1F                   2178 	; exit on error
040F1F FE 00             2179 	cp 0
040F21 CA 0A 10 04       2180 	jp z,ls_file_error
040F25                   2181 
040F25                   2182 	; filehandle -> C
040F25 4F                2183 	ld c,a
040F26                   2184 
040F26                   2185 	; get colors count
040F26                   2186 	moscall mos_fgetc
040F26 3E 0C             2186 		LD	A, function
040F28 49 CF             2186 		RST.LIS	08h
040F2A DA B7 0F 04       2187 	jp c,ls_close_error
040F2E                   2188 
040F2E FE 40             2189 	cp MAX_COLORS
040F30 C2 B7 0F 04       2190 	jp nz,ls_close_error
040F34                   2191 
040F34                   2192 	; store colors count
040F34 21 14 15 04       2193 	ld hl,colors_count
040F38 77                2194 	ld (hl),a
040F39                   2195 
040F39                   2196 	; get frames count
040F39                   2197 	moscall mos_fgetc
040F39 3E 0C             2197 		LD	A, function
040F3B 49 CF             2197 		RST.LIS	08h
040F3D DA B7 0F 04       2198 	jp c,ls_close_error
040F41                   2199 
040F41                   2200 	; store frames count
040F41 21 16 15 04       2201 	ld hl,frames_count
040F45 77                2202 	ld (hl),a
040F46 21 15 15 04       2203 	ld hl,current_frame
040F4A 3D                2204 	dec a
040F4B 77                2205 	ld (hl),a
040F4C                   2206 
040F4C                   2207 	; get sprite size
040F4C                   2208 	moscall mos_fgetc
040F4C 3E 0C             2208 		LD	A, function
040F4E 49 CF             2208 		RST.LIS	08h
040F50 DA B7 0F 04       2209 	jp c,ls_close_error
040F54                   2210 
040F54                   2211 	; store sprite size
040F54 21 3E 14 04       2212 	ld hl,spr_size
040F58 77                2213 	ld (hl),a
040F59                   2214 
040F59                   2215 	; set 4x4 pixel width
040F59 FE 04             2216 	cp SPR44
040F5B 20 09             2217 	jr nz,ls_next1
040F5D                   2218 
040F5D 21 3D 14 04       2219 	ld hl,pixel_width
040F61 06 20             2220 	ld b,SPR44_width
040F63 70                2221 	ld (hl),b
040F64 18 21             2222 	jr ls_next4
040F66                   2223 
040F66                   2224 ls_next1:
040F66                   2225 	; set 8x8 pixel width
040F66 FE 08             2226 	cp SPR88
040F68 20 09             2227 	jr nz,ls_next2
040F6A                   2228 
040F6A 21 3D 14 04       2229 	ld hl,pixel_width
040F6E 06 10             2230 	ld b,SPR88_width
040F70 70                2231 	ld (hl),b
040F71 18 14             2232 	jr ls_next4
040F73                   2233 
040F73                   2234 ls_next2:
040F73                   2235 
040F73                   2236 	; set 16x16 pixel width
040F73 FE 10             2237 	cp SPR1616
040F75 20 09             2238 	jr nz,ls_next3
040F77                   2239 
040F77 21 3D 14 04       2240 	ld hl,pixel_width
040F7B 06 08             2241 	ld b,SPR1616_width
040F7D 70                2242 	ld (hl),b
040F7E 18 07             2243 	jr ls_next4
040F80                   2244 
040F80                   2245 ls_next3:
040F80                   2246 
040F80 21 3D 14 04       2247 	ld hl,pixel_width
040F84 06 04             2248 	ld b,SPR3232_width
040F86 70                2249 	ld (hl),b
040F87                   2250 
040F87                   2251 ls_next4:
040F87                   2252 
040F87 6F                2253 	ld l,a
040F88 67                2254 	ld h,a
040F89 ED 6C             2255 	mlt hl ; HL = sprite length
040F8B E5                2256 	push hl
040F8C                   2257 
040F8C                   2258 	; get frames count
040F8C 21 15 15 04       2259 	ld hl,current_frame
040F90 46                2260 	ld b,(hl)
040F91                   2261 
040F91 E1                2262 	pop hl
040F92                   2263 
040F92 78                2264 	ld a,b
040F93 FE 00             2265 	cp 0
040F95 28 07             2266 	jr z,ls_read_data
040F97                   2267 
040F97                   2268 	; de = size²
040F97 11 00 04 00       2269 	ld de,ONE_FRAME_BUFFER_SIZE
040F9B                   2270 ls_add_length:
040F9B 19                2271 	add hl,de
040F9C 10 FD             2272 	djnz ls_add_length
040F9E                   2273 
040F9E                   2274 ls_read_data:
040F9E E5                2275 	push hl
040F9F E5                2276 	push hl
040FA0 D1                2277 	pop de
040FA1 7B                2278 	ld a,e
040FA2 21 1E 15 04       2279 	ld hl,sprite_buffer
040FA6                   2280 	moscall mos_fread
040FA6 3E 1A             2280 		LD	A, function
040FA8 49 CF             2280 		RST.LIS	08h
040FAA E1                2281 	pop hl
040FAB 7C                2282 	ld a,h
040FAC BA                2283 	cp d
040FAD 20 08             2284 	jr nz,ls_close_error
040FAF 7D                2285 	ld a,l
040FB0 BB                2286 	cp e
040FB1 20 04             2287 	jr nz,ls_close_error
040FB3 C3 E4 0F 04       2288 	jp ls_close
040FB7                   2289 
040FB7                   2290 ls_close_error:
040FB7 C5                2291 	push bc
040FB8                   2292 
040FB8                   2293 	; read error
040FB8 CD 5F 12 04       2294 	call fn_print_file_error
040FBC                   2295 
040FBC C1                2296 	pop bc
040FBD                   2297 
040FBD                   2298 	; close the file
040FBD                   2299 	moscall mos_fclose
040FBD 3E 0B             2299 		LD	A, function
040FBF 49 CF             2299 		RST.LIS	08h
040FC1                   2300 
040FC1                   2301 	; set path to home
040FC1 21 CA 14 04       2302 	ld hl,back_path
040FC5                   2303 	moscall mos_cd
040FC5 3E 03             2303 		LD	A, function
040FC7 49 CF             2303 		RST.LIS	08h
040FC9                   2304 
040FC9                   2305 	; exit on error
040FC9 FE 00             2306 	cp 0
040FCB C2 DC 0F 04       2307 	jp nz,ls_folder_error
040FCF                   2308 
040FCF                   2309 
040FCF                   2310 	; reset current frame and coordinates of the drawing pixel
040FCF 21 39 14 04       2311 	ld hl,xpix
040FD3 AF                2312 	xor a
040FD4 77                2313 	ld (hl),a
040FD5 21 3A 14 04       2314 	ld hl,ypix
040FD9 77                2315 	ld (hl),a
040FDA 18 25             2316 	jr ls_exit
040FDC                   2317 
040FDC                   2318 ls_folder_error:
040FDC                   2319 	; write error
040FDC CD 96 12 04       2320 	call fn_print_folder_error
040FE0 C3 01 10 04       2321 	jp ls_exit
040FE4                   2322 
040FE4                   2323 ls_close:
040FE4                   2324 	; close the file
040FE4                   2325 	moscall mos_fclose
040FE4 3E 0B             2325 		LD	A, function
040FE6 49 CF             2325 		RST.LIS	08h
040FE8                   2326 
040FE8                   2327 	; set path to home
040FE8 21 CA 14 04       2328 	ld hl,back_path
040FEC                   2329 	moscall mos_cd
040FEC 3E 03             2329 		LD	A, function
040FEE 49 CF             2329 		RST.LIS	08h
040FF0                   2330 
040FF0                   2331 	; exit on error
040FF0 FE 00             2332 	cp 0
040FF2 C2 DC 0F 04       2333 	jp nz,ls_folder_error
040FF6                   2334 
040FF6                   2335 	; reset current frame and coordinates of the drawing pixel
040FF6 21 39 14 04       2336 	ld hl,xpix
040FFA AF                2337 	xor a
040FFB 77                2338 	ld (hl),a
040FFC 21 3A 14 04       2339 	ld hl,ypix
041000 77                2340 	ld (hl),a
041001                   2341 
041001                   2342 ls_exit:
041001 CD 77 13 04       2343 	call fn_show_spr_descr
041005 CD 32 13 04       2344 	call fn_change_frames_count
041009 C9                2345 	ret
04100A                   2346 
04100A                   2347 ls_file_error:
04100A CD 5F 12 04       2348 	call fn_print_file_error
04100E                   2349 
04100E                   2350 	; set path to home
04100E 21 CA 14 04       2351 	ld hl,back_path
041012                   2352 	moscall mos_cd
041012 3E 03             2352 		LD	A, function
041014 49 CF             2352 		RST.LIS	08h
041016                   2353 
041016                   2354 	; exit on error
041016 FE 00             2355 	cp 0
041018 C2 DC 0F 04       2356 	jp nz,ls_folder_error
04101C                   2357 
04101C C9                2358 	ret
04101D                   2359 
04101D                   2360 ; save a sprite, giving its name
04101D                   2361 fn_save_sprite:
04101D                   2362 	; clear filename
04101D 21 B5 14 04       2363 	ld hl,filename
041021 06 0C             2364 	ld b,12
041023 AF                2365 	xor a
041024                   2366 
041024                   2367 ss_clear_filename:
041024 77                2368 	ld (hl),a
041025 23                2369 	inc hl
041026 10 FC             2370 	djnz ss_clear_filename
041028                   2371 
041028                   2372 	; get filename
041028 CD F7 0D 04       2373 	call fn_input_text8
04102C                   2374 
04102C                   2375 	; set path to sprite path
04102C 21 C2 14 04       2376 	ld hl,sprite_path
041030                   2377 	moscall mos_cd
041030 3E 03             2377 		LD	A, function
041032 49 CF             2377 		RST.LIS	08h
041034                   2378 
041034                   2379 	; create it on error
041034 FE 00             2380 	cp 0
041036 F5                2381 	push af
041037 C4 0C 14 04       2382 	call nz,fn_create_sprite_folder
04103B F1                2383 	pop af
04103C 28 08             2384 	jr z,ss_next
04103E                   2385 
04103E                   2386 	; set path to sprite path
04103E 21 C2 14 04       2387 	ld hl,sprite_path
041042                   2388 	moscall mos_cd
041042 3E 03             2388 		LD	A, function
041044 49 CF             2388 		RST.LIS	08h
041046                   2389 
041046                   2390 ss_next:
041046                   2391 
041046                   2392 	; exit on error
041046 FE 00             2393 	cp 0
041048 C2 D4 10 04       2394 	jp nz,ss_folder_error
04104C                   2395 
04104C                   2396 	; open the file for write
04104C 21 B5 14 04       2397 	ld hl,filename
041050 0E 0A             2398 	ld c,fa_create_always|fa_write
041052                   2399 	moscall mos_fopen
041052 3E 0A             2399 		LD	A, function
041054 49 CF             2399 		RST.LIS	08h
041056                   2400 
041056                   2401 	; exit on error
041056 FE 00             2402 	cp 0
041058 CA 05 11 04       2403 	jp z,ss_file_error
04105C                   2404 
04105C                   2405 	; filehandle -> C
04105C 4F                2406 	ld c,a
04105D                   2407 
04105D                   2408 	; store colors count in the file
04105D 06 40             2409 	ld b,MAX_COLORS
04105F                   2410 	moscall mos_fputc
04105F 3E 0D             2410 		LD	A, function
041061 49 CF             2410 		RST.LIS	08h
041063                   2411 
041063                   2412 	; store frames count in the file
041063 21 16 15 04       2413 	ld hl,frames_count
041067 46                2414 	ld b,(hl)
041068                   2415 	moscall mos_fputc
041068 3E 0D             2415 		LD	A, function
04106A 49 CF             2415 		RST.LIS	08h
04106C                   2416 
04106C                   2417 	; store sprite size in the file
04106C 21 3E 14 04       2418 	ld hl,spr_size
041070 46                2419 	ld b,(hl)
041071                   2420 	moscall mos_fputc
041071 3E 0D             2420 		LD	A, function
041073 49 CF             2420 		RST.LIS	08h
041075                   2421 
041075                   2422 	; de = size²
041075 68                2423 	ld l,b
041076 60                2424 	ld h,b
041077 ED 6C             2425 	mlt hl ; HL = sprite length
041079 E5                2426 	push hl
04107A                   2427 
04107A                   2428 	; get frames count
04107A 21 15 15 04       2429 	ld hl,current_frame
04107E 46                2430 	ld b,(hl)
04107F                   2431 
04107F E1                2432 	pop hl
041080                   2433 
041080 78                2434 	ld a,b
041081 FE 00             2435 	cp 0
041083 28 07             2436 	jr z,ss_write_data
041085                   2437 
041085 11 00 04 00       2438 	ld de,ONE_FRAME_BUFFER_SIZE
041089                   2439 ss_add_length:
041089 19                2440 	add hl,de
04108A 10 FD             2441 	djnz ss_add_length
04108C                   2442 
04108C                   2443 ss_write_data:
04108C E5                2444 	push hl
04108D E5                2445 	push hl
04108E D1                2446 	pop de
04108F 21 1E 15 04       2447 	ld hl,sprite_buffer
041093                   2448 	moscall mos_fwrite
041093 3E 1B             2448 		LD	A, function
041095 49 CF             2448 		RST.LIS	08h
041097 E1                2449 	pop hl
041098 7C                2450 	ld a,h
041099 BA                2451 	cp d
04109A 20 08             2452 	jr nz,ss_close_error
04109C 7D                2453 	ld a,l
04109D BB                2454 	cp e
04109E 20 04             2455 	jr nz,ss_close_error
0410A0 C3 DC 10 04       2456 	jp ss_close
0410A4                   2457 
0410A4                   2458 ss_close_error:
0410A4 C5                2459 	push bc
0410A5                   2460 
0410A5                   2461 	; write error
0410A5 CD 5F 12 04       2462 	call fn_print_file_error
0410A9                   2463 
0410A9 C1                2464 	pop bc
0410AA                   2465 
0410AA                   2466 	; close the file
0410AA                   2467 	moscall mos_fclose
0410AA 3E 0B             2467 		LD	A, function
0410AC 49 CF             2467 		RST.LIS	08h
0410AE                   2468 
0410AE                   2469 	; set path to home
0410AE 21 CA 14 04       2470 	ld hl,back_path
0410B2                   2471 	moscall mos_cd
0410B2 3E 03             2471 		LD	A, function
0410B4 49 CF             2471 		RST.LIS	08h
0410B6                   2472 
0410B6                   2473 	; exit on error
0410B6 FE 00             2474 	cp 0
0410B8 C2 D4 10 04       2475 	jp nz,ss_folder_error
0410BC                   2476 
0410BC                   2477 	; reset current frame and coordinates of the drawing pixel
0410BC 21 16 15 04       2478 	ld hl,frames_count
0410C0 7E                2479 	ld a,(hl)
0410C1 3D                2480 	dec a
0410C2 21 15 15 04       2481 	ld hl,current_frame
0410C6 77                2482 	ld (hl),a
0410C7 21 39 14 04       2483 	ld hl,xpix
0410CB AF                2484 	xor a
0410CC 77                2485 	ld (hl),a
0410CD 21 3A 14 04       2486 	ld hl,ypix
0410D1 77                2487 	ld (hl),a
0410D2 18 30             2488 	jr ss_exit
0410D4                   2489 
0410D4                   2490 ss_folder_error:
0410D4                   2491 	; write error
0410D4 CD 96 12 04       2492 	call fn_print_folder_error
0410D8 C3 04 11 04       2493 	jp ss_exit
0410DC                   2494 
0410DC                   2495 ss_close:
0410DC                   2496 	; close the file
0410DC                   2497 	moscall mos_fclose
0410DC 3E 0B             2497 		LD	A, function
0410DE 49 CF             2497 		RST.LIS	08h
0410E0                   2498 
0410E0                   2499 	; set path to home
0410E0 21 CA 14 04       2500 	ld hl,back_path
0410E4                   2501 	moscall mos_cd
0410E4 3E 03             2501 		LD	A, function
0410E6 49 CF             2501 		RST.LIS	08h
0410E8                   2502 
0410E8                   2503 	; exit on error
0410E8 FE 00             2504 	cp 0
0410EA C2 D4 10 04       2505 	jp nz,ss_folder_error
0410EE                   2506 
0410EE                   2507 	; reset current frame and coordinates of the drawing pixel
0410EE 21 16 15 04       2508 	ld hl,frames_count
0410F2 7E                2509 	ld a,(hl)
0410F3 3D                2510 	dec a
0410F4 21 15 15 04       2511 	ld hl,current_frame
0410F8 77                2512 	ld (hl),a
0410F9 21 39 14 04       2513 	ld hl,xpix
0410FD AF                2514 	xor a
0410FE 77                2515 	ld (hl),a
0410FF 21 3A 14 04       2516 	ld hl,ypix
041103 77                2517 	ld (hl),a
041104                   2518 
041104                   2519 ss_exit:
041104 C9                2520 	ret
041105                   2521 
041105                   2522 ss_file_error:
041105 CD 5F 12 04       2523 	call fn_print_file_error
041109                   2524 
041109                   2525 	; set path to home
041109 21 CA 14 04       2526 	ld hl,back_path
04110D                   2527 	moscall mos_cd
04110D 3E 03             2527 		LD	A, function
04110F 49 CF             2527 		RST.LIS	08h
041111                   2528 
041111                   2529 	; exit on error
041111 FE 00             2530 	cp 0
041113 C2 D4 10 04       2531 	jp nz,ss_folder_error
041117 C9                2532 	ret
041118                   2533 
041118                   2534 ; export sprite data in assembly language, giving its name
041118                   2535 fn_export_sprite:
041118                   2536 	; clear filename
041118 21 B5 14 04       2537 	ld hl,filename
04111C 06 0C             2538 	ld b,12
04111E AF                2539 	xor a
04111F                   2540 
04111F                   2541 es_clear_filename:
04111F 77                2542 	ld (hl),a
041120 23                2543 	inc hl
041121 10 FC             2544 	djnz es_clear_filename
041123                   2545 
041123                   2546 	; get filename
041123 CD F7 0D 04       2547 	call fn_input_text8
041127                   2548 
041127                   2549 	; set path to sprite path
041127 21 C2 14 04       2550 	ld hl,sprite_path
04112B                   2551 	moscall mos_cd
04112B 3E 03             2551 		LD	A, function
04112D 49 CF             2551 		RST.LIS	08h
04112F                   2552 
04112F                   2553 	; create it on error
04112F FE 00             2554 	cp 0
041131 F5                2555 	push af
041132 C4 0C 14 04       2556 	call nz,fn_create_sprite_folder
041136 F1                2557 	pop af
041137 28 0E             2558 	jr z,es_next
041139                   2559 
041139                   2560 	; set path to sprite path
041139 21 C2 14 04       2561 	ld hl,sprite_path
04113D                   2562 	moscall mos_cd
04113D 3E 03             2562 		LD	A, function
04113F 49 CF             2562 		RST.LIS	08h
041141                   2563 
041141                   2564 	; exit on error
041141 FE 00             2565 	cp 0
041143 C2 43 12 04       2566 	jp nz,es_folder_error
041147                   2567 
041147                   2568 es_next:
041147                   2569 	; open the file for write
041147 21 B5 14 04       2570 	ld hl,filename
04114B 0E 0A             2571 	ld c,fa_create_always|fa_write
04114D                   2572 	moscall mos_fopen
04114D 3E 0A             2572 		LD	A, function
04114F 49 CF             2572 		RST.LIS	08h
041151                   2573 
041151                   2574 	; exit on error
041151 FE 00             2575 	cp 0
041153 CA 4C 12 04       2576 	jp z,es_file_error
041157                   2577 
041157                   2578 	; filehandle -> C
041157 4F                2579 	ld c,a
041158                   2580 
041158                   2581 
041158                   2582 	; L = first frame
041158 3E 00             2583 	ld a,0
04115A 21 1E 15 04       2584 	ld hl,sprite_buffer
04115E 11 00 00 00       2585 	ld de,$000000
041162                   2586 
041162                   2587 es_frames_repeat:
041162 F5                2588 	push af
041163 E5                2589 	push hl
041164                   2590 
041164 F5                2591 	push af
041165                   2592 
041165                   2593 	; start to write...
041165 1E 00             2594 	ld e,0 ; rows
041167                   2595 
041167 06 3B             2596 	ld b,';'
041169                   2597 	moscall mos_fputc
041169 3E 0D             2597 		LD	A, function
04116B 49 CF             2597 		RST.LIS	08h
04116D                   2598 
04116D 06 20             2599 	ld b,' '
04116F                   2600 	moscall mos_fputc
04116F 3E 0D             2600 		LD	A, function
041171 49 CF             2600 		RST.LIS	08h
041173                   2601 
041173 06 46             2602 	ld b,'F'
041175                   2603 	moscall mos_fputc
041175 3E 0D             2603 		LD	A, function
041177 49 CF             2603 		RST.LIS	08h
041179                   2604 
041179 06 72             2605 	ld b,'r'
04117B                   2606 	moscall mos_fputc
04117B 3E 0D             2606 		LD	A, function
04117D 49 CF             2606 		RST.LIS	08h
04117F                   2607 
04117F 06 6D             2608 	ld b,'m'
041181                   2609 	moscall mos_fputc
041181 3E 0D             2609 		LD	A, function
041183 49 CF             2609 		RST.LIS	08h
041185                   2610 
041185 06 20             2611 	ld b,' '
041187                   2612 	moscall mos_fputc
041187 3E 0D             2612 		LD	A, function
041189 49 CF             2612 		RST.LIS	08h
04118B                   2613 
04118B F1                2614 	pop af
04118C C6 30             2615 	add a,'0'
04118E 47                2616 	ld b,a
04118F                   2617 	moscall mos_fputc
04118F 3E 0D             2617 		LD	A, function
041191 49 CF             2617 		RST.LIS	08h
041193                   2618 
041193 06 0D             2619 	ld b,13
041195                   2620 	moscall mos_fputc
041195 3E 0D             2620 		LD	A, function
041197 49 CF             2620 		RST.LIS	08h
041199                   2621 
041199 06 0A             2622 	ld b,10
04119B                   2623 	moscall mos_fputc
04119B 3E 0D             2623 		LD	A, function
04119D 49 CF             2623 		RST.LIS	08h
04119F                   2624 
04119F                   2625 es_repeat:
04119F                   2626 
04119F 06 44             2627 	ld b,'D'
0411A1                   2628 	moscall mos_fputc
0411A1 3E 0D             2628 		LD	A, function
0411A3 49 CF             2628 		RST.LIS	08h
0411A5                   2629 
0411A5 06 42             2630 	ld b,'B'
0411A7                   2631 	moscall mos_fputc
0411A7 3E 0D             2631 		LD	A, function
0411A9 49 CF             2631 		RST.LIS	08h
0411AB                   2632 
0411AB 06 20             2633 	ld b,' '
0411AD                   2634 	moscall mos_fputc
0411AD 3E 0D             2634 		LD	A, function
0411AF 49 CF             2634 		RST.LIS	08h
0411B1                   2635 
0411B1 16 00             2636 	ld d,0 ; columns
0411B3                   2637 
0411B3                   2638 es_repeat_line:
0411B3 D5                2639 	push de
0411B4                   2640 
0411B4 7E                2641 	ld a,(hl)
0411B5 23                2642 	inc hl
0411B6                   2643 
0411B6                   2644 	; convert A to BCD
0411B6 CD 1C 14 04       2645 	call fn_hex2bcd
0411BA                   2646 
0411BA                   2647 	; write two numbers (chars)
0411BA 5F                2648 	ld e,a
0411BB E6 F0             2649 	and $f0
0411BD 0F                2650 	rrca
0411BE 0F                2651 	rrca
0411BF 0F                2652 	rrca
0411C0 0F                2653 	rrca
0411C1 C6 30             2654 	add '0'
0411C3                   2655 
0411C3 47                2656 	ld b,a
0411C4                   2657 	moscall mos_fputc
0411C4 3E 0D             2657 		LD	A, function
0411C6 49 CF             2657 		RST.LIS	08h
0411C8                   2658 
0411C8 7B                2659 	ld a,e
0411C9 E6 0F             2660 	and $0f
0411CB C6 30             2661 	add '0'
0411CD                   2662 
0411CD 47                2663 	ld b,a
0411CE                   2664 	moscall mos_fputc
0411CE 3E 0D             2664 		LD	A, function
0411D0 49 CF             2664 		RST.LIS	08h
0411D2                   2665 
0411D2 D1                2666 	pop de
0411D3 14                2667 	inc d
0411D4 3A 3E 14 04       2668 	ld a,(spr_size)
0411D8 BA                2669 	cp d
0411D9 F5                2670 	push af
0411DA C4 15 14 04       2671 	call nz,fn_comma
0411DE F1                2672 	pop af
0411DF C2 B3 11 04       2673 	jp nz,es_repeat_line
0411E3                   2674 
0411E3 06 0D             2675 	ld b,13 ; CR
0411E5                   2676 	moscall mos_fputc
0411E5 3E 0D             2676 		LD	A, function
0411E7 49 CF             2676 		RST.LIS	08h
0411E9                   2677 
0411E9 06 0A             2678 	ld b,10 ; LF
0411EB                   2679 	moscall mos_fputc
0411EB 3E 0D             2679 		LD	A, function
0411ED 49 CF             2679 		RST.LIS	08h
0411EF                   2680 
0411EF 1C                2681 	inc e
0411F0 3A 3E 14 04       2682 	ld a,(spr_size)
0411F4 BB                2683 	cp e
0411F5 C2 9F 11 04       2684 	jp nz,es_repeat
0411F9                   2685 
0411F9 06 0D             2686 	ld b,13 ; CR
0411FB                   2687 	moscall mos_fputc
0411FB 3E 0D             2687 		LD	A, function
0411FD 49 CF             2687 		RST.LIS	08h
0411FF                   2688 
0411FF 06 0A             2689 	ld b,10 ; LF
041201                   2690 	moscall mos_fputc
041201 3E 0D             2690 		LD	A, function
041203 49 CF             2690 		RST.LIS	08h
041205                   2691 
041205 E1                2692 	pop hl
041206 D5                2693 	push de
041207 ED 5C             2694 	mlt de
041209 19                2695 	add hl,de
04120A D1                2696 	pop de
04120B F1                2697 	pop af
04120C 3C                2698 	inc a
04120D DD 21 16 15 04    2699 	ld ix,frames_count
041212 DD BE 00          2700 	cp (ix+0)
041215 C2 62 11 04       2701 	jp nz,es_frames_repeat
041219                   2702 
041219                   2703 	; close the file
041219                   2704 	moscall mos_fclose
041219 3E 0B             2704 		LD	A, function
04121B 49 CF             2704 		RST.LIS	08h
04121D                   2705 
04121D                   2706 	; set path to home
04121D 21 CA 14 04       2707 	ld hl,back_path
041221                   2708 	moscall mos_cd
041221 3E 03             2708 		LD	A, function
041223 49 CF             2708 		RST.LIS	08h
041225                   2709 
041225                   2710 	; exit on error
041225 FE 00             2711 	cp 0
041227 C2 43 12 04       2712 	jp nz,es_folder_error
04122B                   2713 
04122B                   2714 	; reset current frame and coordinates of the drawing pixel
04122B 21 16 15 04       2715 	ld hl,frames_count
04122F 7E                2716 	ld a,(hl)
041230 3D                2717 	dec a
041231 21 15 15 04       2718 	ld hl,current_frame
041235 77                2719 	ld (hl),a
041236 21 39 14 04       2720 	ld hl,xpix
04123A AF                2721 	xor a
04123B 77                2722 	ld (hl),a
04123C 21 3A 14 04       2723 	ld hl,ypix
041240 77                2724 	ld (hl),a
041241 18 08             2725 	jr es_exit
041243                   2726 
041243                   2727 es_folder_error:
041243                   2728 	; write error
041243 CD 96 12 04       2729 	call fn_print_folder_error
041247 C3 4B 12 04       2730 	jp es_exit
04124B                   2731 
04124B                   2732 es_exit:
04124B C9                2733 	ret
04124C                   2734 
04124C                   2735 es_file_error:
04124C CD 5F 12 04       2736 	call fn_print_file_error
041250                   2737 
041250                   2738 	; set path to home
041250 21 CA 14 04       2739 	ld hl,back_path
041254                   2740 	moscall mos_cd
041254 3E 03             2740 		LD	A, function
041256 49 CF             2740 		RST.LIS	08h
041258                   2741 
041258                   2742 	; exit on error
041258 FE 00             2743 	cp 0
04125A C2 43 12 04       2744 	jp nz,es_folder_error
04125E C9                2745 	ret
04125F                   2746 
04125F                   2747 ; print 'file error'
04125F                   2748 fn_print_file_error:
04125F                   2749 	vdu 7
04125F 3E 07             2749 		LD	A, function
041261 49 D7             2749 		RST.LIS	10h
041263                   2750 
041263                   2751 	; locate x,y
041263                   2752 	vdu 31
041263 3E 1F             2752 		LD	A, function
041265 49 D7             2752 		RST.LIS	10h
041267                   2753 	vdu FILENAME_X
041267 3E 07             2753 		LD	A, function
041269 49 D7             2753 		RST.LIS	10h
04126B                   2754 	vdu FILENAME_Y
04126B 3E 18             2754 		LD	A, function
04126D 49 D7             2754 		RST.LIS	10h
04126F                   2755 
04126F                   2756 	; print text
04126F 21 E6 14 04       2757 	ld hl,file_error
041273 01 00 00 00       2758 	ld bc,0
041277 AF                2759 	xor a
041278 49 DF             2760 	rst.lis $18
04127A                   2761 
04127A CD F0 0D 04       2762 	call fn_input_key
04127E                   2763 
04127E                   2764 	; locate x,y
04127E                   2765 	vdu 31
04127E 3E 1F             2765 		LD	A, function
041280 49 D7             2765 		RST.LIS	10h
041282                   2766 	vdu FILENAME_X
041282 3E 07             2766 		LD	A, function
041284 49 D7             2766 		RST.LIS	10h
041286                   2767 	vdu FILENAME_Y
041286 3E 18             2767 		LD	A, function
041288 49 D7             2767 		RST.LIS	10h
04128A                   2768 
04128A                   2769 	; print text
04128A 21 CF 14 04       2770 	ld hl,void_filename
04128E 01 00 00 00       2771 	ld bc,0
041292 AF                2772 	xor a
041293 49 DF             2773 	rst.lis $18
041295                   2774 
041295 C9                2775 	ret
041296                   2776 
041296                   2777 ; print 'folder error'
041296                   2778 fn_print_folder_error:
041296                   2779 	vdu 7
041296 3E 07             2779 		LD	A, function
041298 49 D7             2779 		RST.LIS	10h
04129A                   2780 
04129A                   2781 	; locate x,y
04129A                   2782 	vdu 31
04129A 3E 1F             2782 		LD	A, function
04129C 49 D7             2782 		RST.LIS	10h
04129E                   2783 	vdu FILENAME_X
04129E 3E 07             2783 		LD	A, function
0412A0 49 D7             2783 		RST.LIS	10h
0412A2                   2784 	vdu FILENAME_Y
0412A2 3E 18             2784 		LD	A, function
0412A4 49 D7             2784 		RST.LIS	10h
0412A6                   2785 
0412A6                   2786 	; print text
0412A6 21 FD 14 04       2787 	ld hl,folder_error
0412AA 01 00 00 00       2788 	ld bc,0
0412AE AF                2789 	xor a
0412AF 49 DF             2790 	rst.lis $18
0412B1                   2791 
0412B1 CD F0 0D 04       2792 	call fn_input_key
0412B5                   2793 
0412B5                   2794 	; locate x,y
0412B5                   2795 	vdu 31
0412B5 3E 1F             2795 		LD	A, function
0412B7 49 D7             2795 		RST.LIS	10h
0412B9                   2796 	vdu FILENAME_X
0412B9 3E 07             2796 		LD	A, function
0412BB 49 D7             2796 		RST.LIS	10h
0412BD                   2797 	vdu FILENAME_Y
0412BD 3E 18             2797 		LD	A, function
0412BF 49 D7             2797 		RST.LIS	10h
0412C1                   2798 
0412C1                   2799 	; print text
0412C1 21 CF 14 04       2800 	ld hl,void_filename
0412C5 01 00 00 00       2801 	ld bc,0
0412C9 AF                2802 	xor a
0412CA 49 DF             2803 	rst.lis $18
0412CC                   2804 
0412CC C9                2805 	ret
0412CD                   2806 
0412CD                   2807 ; refresh all the current sprite frame
0412CD                   2808 fn_refresh_sprite:
0412CD 06 00             2809 	ld b,0 ; B -> x cordinate
0412CF 0E 00             2810 	ld c,0 ; C -> y cordinate
0412D1                   2811 
0412D1                   2812 rs_loop:
0412D1 C5                2813 	push bc
0412D2                   2814 
0412D2 21 39 14 04       2815 	ld hl,xpix
0412D6 70                2816 	ld (hl),b
0412D7 21 3A 14 04       2817 	ld hl,ypix
0412DB 71                2818 	ld (hl),c
0412DC CD 82 0C 04       2819 	call fn_draw_pixel_without_border
0412E0                   2820 
0412E0 C1                2821 	pop bc
0412E1                   2822 
0412E1 04                2823 	inc b
0412E2 21 3E 14 04       2824 	ld hl,spr_size
0412E6 7E                2825 	ld a,(hl)
0412E7 B8                2826 	cp b
0412E8 28 04             2827 	jr z,rs_next_line
0412EA C3 D1 12 04       2828 	jp rs_loop
0412EE                   2829 
0412EE                   2830 rs_next_line:
0412EE 06 00             2831 	ld b,0
0412F0 0C                2832 	inc c
0412F1 21 3E 14 04       2833 	ld hl,spr_size
0412F5 7E                2834 	ld a,(hl)
0412F6 B9                2835 	cp c
0412F7 28 04             2836 	jr z,rs_end
0412F9 C3 D1 12 04       2837 	jp rs_loop
0412FD                   2838 
0412FD                   2839 rs_end:
0412FD AF                2840 	xor a
0412FE 21 39 14 04       2841 	ld hl,xpix
041302 77                2842 	ld (hl),a
041303 21 3A 14 04       2843 	ld hl,ypix
041307 77                2844 	ld (hl),a
041308 CD 6E 0C 04       2845 	call fn_draw_pixel_with_border
04130C                   2846 
04130C C9                2847 	ret
04130D                   2848 
04130D                   2849 fn_change_frame:
04130D 21 15 15 04       2850 	ld hl,current_frame
041311 7E                2851 	ld a,(hl)
041312 3C                2852 	inc a
041313 C6 30             2853 	add a,48
041315 21 17 15 04       2854 	ld hl,current_frame_ascii
041319 77                2855 	ld (hl),a
04131A                   2856 
04131A                   2857 	; locate 21,3
04131A                   2858 	vdu 31
04131A 3E 1F             2858 		LD	A, function
04131C 49 D7             2858 		RST.LIS	10h
04131E                   2859 	vdu 21
04131E 3E 15             2859 		LD	A, function
041320 49 D7             2859 		RST.LIS	10h
041322                   2860 	vdu 3
041322 3E 03             2860 		LD	A, function
041324 49 D7             2860 		RST.LIS	10h
041326                   2861 
041326                   2862 	; print text
041326 21 17 15 04       2863 	ld hl,current_frame_ascii
04132A 01 00 00 00       2864 	ld bc,0
04132E AF                2865 	xor a
04132F 49 DF             2866 	rst.lis $18
041331                   2867 
041331 C9                2868 	ret
041332                   2869 
041332                   2870 fn_change_frames_count:
041332 21 16 15 04       2871 	ld hl,frames_count
041336 7E                2872 	ld a,(hl)
041337 C6 30             2873 	add a,48
041339 21 19 15 04       2874 	ld hl,frames_count_ascii
04133D 77                2875 	ld (hl),a
04133E                   2876 
04133E                   2877 	; locate 23,3
04133E                   2878 	vdu 31
04133E 3E 1F             2878 		LD	A, function
041340 49 D7             2878 		RST.LIS	10h
041342                   2879 	vdu 23
041342 3E 17             2879 		LD	A, function
041344 49 D7             2879 		RST.LIS	10h
041346                   2880 	vdu 3
041346 3E 03             2880 		LD	A, function
041348 49 D7             2880 		RST.LIS	10h
04134A                   2881 
04134A                   2882 	; print text
04134A 21 19 15 04       2883 	ld hl,frames_count_ascii
04134E 01 00 00 00       2884 	ld bc,0
041352 AF                2885 	xor a
041353 49 DF             2886 	rst.lis $18
041355                   2887 
041355 C9                2888 	ret
041356                   2889 
041356                   2890 ; slowdown (wait delay)
041356                   2891 fn_slowdown:
041356 DD 21 1B 15 04    2892 	ld ix,keydata
04135B DD 7E 02          2893 	ld a,(ix+2)
04135E E6 02             2894 	and 2
041360 FE 02             2895 	cp 2 ; shift key to disable delay
041362 C8                2896 	ret z
041363                   2897 
041363                   2898 	moscall mos_sysvars
041363 3E 08             2898 		LD	A, function
041365 49 CF             2898 		RST.LIS	08h
041367 DD 4E 00          2899 	ld c,(ix+sysvar_time)
04136A                   2900 
04136A                   2901 sd_loop:
04136A                   2902 	moscall mos_sysvars
04136A 3E 08             2902 		LD	A, function
04136C 49 CF             2902 		RST.LIS	08h
04136E DD 7E 00          2903 	ld a,(ix+sysvar_time)
041371 91                2904 	sub c
041372 FE 14             2905 	cp SLOWDOWN_DELAY
041374 20 F4             2906 	jr nz,sd_loop
041376 C9                2907 	ret
041377                   2908 
041377                   2909 fn_show_spr_descr:
041377                   2910 	; locate 15,3
041377                   2911 	vdu 31
041377 3E 1F             2911 		LD	A, function
041379 49 D7             2911 		RST.LIS	10h
04137B                   2912 	vdu 15
04137B 3E 0F             2912 		LD	A, function
04137D 49 D7             2912 		RST.LIS	10h
04137F                   2913 	vdu 3
04137F 3E 03             2913 		LD	A, function
041381 49 D7             2913 		RST.LIS	10h
041383                   2914 
041383                   2915 	; print text
041383 21 89 14 04       2916 	ld hl,spr_descr
041387 01 00 00 00       2917 	ld bc,0
04138B AF                2918 	xor a
04138C 49 DF             2919 	rst.lis $18
04138E                   2920 
04138E                   2921 	; locate 15,5
04138E                   2922 	vdu 31
04138E 3E 1F             2922 		LD	A, function
041390 49 D7             2922 		RST.LIS	10h
041392                   2923 	vdu 15
041392 3E 0F             2923 		LD	A, function
041394 49 D7             2923 		RST.LIS	10h
041396                   2924 	vdu 5
041396 3E 05             2924 		LD	A, function
041398 49 D7             2924 		RST.LIS	10h
04139A                   2925 
04139A                   2926 	; check for sprite size...
04139A 21 3E 14 04       2927 	ld hl,spr_size
04139E 7E                2928 	ld a,(hl)
04139F                   2929 
04139F FE 04             2930 	cp 4
0413A1 20 0C             2931 	jr nz,ssd_8x8
0413A3                   2932 
0413A3                   2933 	; print text 4x4
0413A3 21 93 14 04       2934 	ld hl,spr_descr1
0413A7 01 00 00 00       2935 	ld bc,0
0413AB AF                2936 	xor a
0413AC 49 DF             2937 	rst.lis $18
0413AE C9                2938 	ret
0413AF                   2939 
0413AF                   2940 ssd_8x8:
0413AF FE 08             2941 	cp 8
0413B1 20 0C             2942 	jr nz,ssd_16x16
0413B3                   2943 
0413B3                   2944 	; print text 8x8
0413B3 21 99 14 04       2945 	ld hl,spr_descr2
0413B7 01 00 00 00       2946 	ld bc,0
0413BB AF                2947 	xor a
0413BC 49 DF             2948 	rst.lis $18
0413BE C9                2949 	ret
0413BF                   2950 
0413BF                   2951 ssd_16x16:
0413BF FE 10             2952 	cp 16
0413C1 20 0C             2953 	jr nz,ssd_32x32
0413C3                   2954 
0413C3                   2955 	; print text 16x16
0413C3 21 9F 14 04       2956 	ld hl,spr_descr3
0413C7 01 00 00 00       2957 	ld bc,0
0413CB AF                2958 	xor a
0413CC 49 DF             2959 	rst.lis $18
0413CE C9                2960 	ret
0413CF                   2961 
0413CF                   2962 ssd_32x32:
0413CF                   2963 	; print text 32x32
0413CF 21 A5 14 04       2964 	ld hl,spr_descr4
0413D3 01 00 00 00       2965 	ld bc,0
0413D7 AF                2966 	xor a
0413D8 49 DF             2967 	rst.lis $18
0413DA                   2968 
0413DA C9                2969 	ret
0413DB                   2970 
0413DB                   2971 ; input: HL = negative key to check
0413DB                   2972 fn_inkey:
0413DB                   2973 	moscall mos_getkbmap
0413DB 3E 1E             2973 		LD	A, function
0413DD 49 CF             2973 		RST.LIS	08h
0413DF 23                2974 	INC	HL
0413E0 7D                2975 	LD	A, L
0413E1 ED 44             2976 	NEG
0413E3 4F                2977 	LD	C, A
0413E4 3E 01             2978 	LD	A, 1
0413E6 FA 0A 14 04       2979 	JP	M,i_false ; < -128 ?
0413EA                   2980 
0413EA 21 45 00 04       2981 	LD	HL,BITLOOKUP
0413EE 11 00 00 00       2982 	LD	DE,0
0413F2 79                2983 	LD	A,C
0413F3 E6 07             2984 	AND	00000111b
0413F5 5F                2985 	LD	E,A
0413F6 19                2986 	ADD	HL,DE
0413F7 46                2987 	LD	B,(HL)
0413F8                   2988 
0413F8 79                2989 	LD	A,C
0413F9 E6 78             2990 	AND	01111000b
0413FB 0F                2991 	RRCA
0413FC 0F                2992 	RRCA
0413FD 0F                2993 	RRCA
0413FE 5F                2994 	LD	E, A
0413FF DD 19             2995 	ADD	IX,DE
041401 DD 7E 00          2996 	LD	A,(IX+0)
041404 A0                2997 	AND	B
041405 28 03             2998 	JR Z,i_false
041407 3E 01             2999 	LD A,1
041409 C9                3000 	RET
04140A                   3001 i_false:
04140A AF                3002 	XOR A
04140B C9                3003 	RET
04140C                   3004 
04140C                   3005 fn_create_sprite_folder:
04140C 21 C2 14 04       3006 	ld hl,sprite_path
041410                   3007 	moscall mos_mkdir
041410 3E 07             3007 		LD	A, function
041412 49 CF             3007 		RST.LIS	08h
041414 C9                3008 	ret
041415                   3009 
041415                   3010 fn_comma:
041415 06 2C             3011 	ld b,','
041417                   3012 	moscall mos_fputc
041417 3E 0D             3012 		LD	A, function
041419 49 CF             3012 		RST.LIS	08h
04141B C9                3013 	ret
04141C                   3014 
04141C                   3015 ; Hex to BCD
04141C                   3016 ; converts a hex number (eg. $10) to its BCD representation (eg. $16).
04141C                   3017 ; Input: a = hex number
04141C                   3018 ; Output: a = BCD number
04141C                   3019 ; Clobbers: b,c
04141C                   3020 fn_hex2bcd:
04141C C5                3021 		push bc
04141D 4F                3022 		ld c,a  ; Original (hex) number
04141E 06 08             3023 		ld b,8  ; How many bits
041420 AF                3024 		xor a   ; Output (BCD) number, starts at 0
041421 CB 21             3025 htb:	sla c   ; shift c into carry
041423 8F                3026 		adc a,a
041424 27                3027 		daa     ; Decimal adjust a, so shift = BCD x2 plus carry
041425 10 FA             3028 		djnz htb  ; Repeat for 8 bits
041427 C1                3029 		pop bc
041428 C9                3030 		ret
041429                   3031 
041429                   3032 ;======================================================================
041429                   3033 
041429                   3034 ; coordinates for rectangles
041429                   3035 x1:
041429 00 00             3036 	dw $0000
04142B                   3037 y1:
04142B 00 00             3038 	dw $0000
04142D                   3039 x2:
04142D 00 00             3040 	dw $0000
04142F                   3041 y2:
04142F 00 00             3042 	dw $0000
041431                   3043 
041431                   3044 ; coordinates of the edited sprite
041431                   3045 xs1:
041431 5F 00             3046 	dw 95
041433                   3047 ys1:
041433 37 00             3048 	dw 55
041435                   3049 xs2:
041435 E0 00             3050 	dw 224
041437                   3051 ys2:
041437 B8 00             3052 	dw 184
041439                   3053 
041439                   3054 ; coordinates of active pixels to draw
041439                   3055 xpix:
041439 00                3056 	db 0
04143A                   3057 ypix:
04143A 00                3058 	db 0
04143B                   3059 
04143B                   3060 ; memorized coordinates of active pixels to draw
04143B                   3061 memxpix:
04143B 00                3062 	db 0
04143C                   3063 memypix:
04143C 00                3064 	db 0
04143D                   3065 
04143D                   3066 ; width of a pixel in the sprite
04143D                   3067 pixel_width:
04143D 00                3068 	db 0
04143E                   3069 
04143E                   3070 ; sprite size, in resized pixels
04143E                   3071 spr_size:
04143E 00                3072 	db 0
04143F                   3073 
04143F                   3074 ; pen color (0-63)
04143F                   3075 current_pen:
04143F 00                3076 	db 0
041440                   3077 
041440                   3078 ; texts for 1st menu
041440                   3079 title:
041440 53 50 52 2D 45 44 3080 	db "SPR-EDIT",0
       49 54 00          
041449                   3081 
041449                   3082 menu1:
041449 46 31 2E 20 34 78 3083 	db "F1. 4x4 Sprite",0
       34 20 53 70 72 69 
       74 65 00          
041458                   3084 menu2:
041458 46 32 2E 20 38 78 3085 	db "F2. 8x8 Sprite",0
       38 20 53 70 72 69 
       74 65 00          
041467                   3086 menu3:
041467 46 33 2E 20 31 36 3087 	db "F3. 16x16 Sprite",0
       78 31 36 20 53 70 
       72 69 74 65 00    
041478                   3088 menu4:
041478 46 34 2E 20 33 32 3089 	db "F4. 32x32 Sprite",0
       78 33 32 20 53 70 
       72 69 74 65 00    
041489                   3090 
041489                   3091 ; descriptions of sprites
041489                   3092 spr_descr:
041489 46 72 61 6D 65 3A 3093 	db "Frame:1/1",0
       31 2F 31 00       
041493                   3094 spr_descr1:
041493 34 78 34 20 20 00 3095 	db "4x4  ",0
041499                   3096 spr_descr2:
041499 38 78 38 20 20 00 3097 	db "8x8  ",0
04149F                   3098 spr_descr3:
04149F 31 36 78 31 36 00 3099 	db "16x16",0
0414A5                   3100 spr_descr4:
0414A5 33 32 78 33 32 00 3101 	db "32x32",0
0414AB                   3102 
0414AB                   3103 ; label before filename
0414AB                   3104 filename_label:
0414AB 46 69 6C 65 6E 61 3105 	db "Filename:",0
       6D 65 3A 00       
0414B5                   3106 
0414B5                   3107 ; filename without extension
0414B5                   3108 filename:
0414B5 00 00 00 00 00 00 3109 	ds 13,0
       00 00 00 00 00 00 
       00                
0414C2                   3110 
0414C2                   3111 sprite_path:
0414C2 73 70 72 69 74 65 3112 	db "sprites",0
       73 00             
0414CA                   3113 
0414CA                   3114 back_path:
0414CA 2E 2E 00          3115 	db "..",0
0414CD                   3116 
0414CD                   3117 ; single space char to print
0414CD                   3118 spacechar:
0414CD 20 00             3119 	db " ",0
0414CF                   3120 
0414CF                   3121 ; spaces to remove filename label
0414CF                   3122 void_filename:
0414CF 20 20 20 20 20 20 3123 	db "                      ",0
       20 20 20 20 20 20 
       20 20 20 20 20 20 
       20 20 20 20 00    
0414E6                   3124 
0414E6                   3125 ; file error message
0414E6                   3126 file_error:
0414E6 46 69 6C 65 20 65 3127 	db "File error !          ",0
       72 72 6F 72 20 21 
       20 20 20 20 20 20 
       20 20 20 20 00    
0414FD                   3128 
0414FD                   3129 ; folder error message
0414FD                   3130 folder_error:
0414FD 46 6F 6C 64 65 72 3131 	db "Folder error !        ",0
       20 65 72 72 6F 72 
       20 21 20 20 20 20 
       20 20 20 20 00    
041514                   3132 
041514                   3133 ; number of colors
041514                   3134 colors_count:
041514 00                3135 	db 0
041515                   3136 
041515                   3137 ; current frame
041515                   3138 current_frame:
041515 00                3139 	db 0
041516                   3140 
041516                   3141 ; frames count
041516                   3142 frames_count:
041516 00                3143 	db 0
041517                   3144 
041517                   3145 current_frame_ascii:
041517 30 00             3146 	db '0',0
041519                   3147 
041519                   3148 frames_count_ascii:
041519 30 00             3149 	db '0',0
04151B                   3150 
04151B                   3151 ; keycode, keydown & keymods are stored here
04151B                   3152 keydata:
04151B 00 00 00          3153 	db 0,0,0
04151E                   3154 
04151E                   3155 ; buffer for the current sprite
04151E                   3156 sprite_buffer:
04151E 00 00 00 00 00 00 3157 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
04151E 00 00 00 00 00 00 3157 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
04151E 00 00 00 00 00 00 3157 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
04151E 00 00 00 00 00 00 3157 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
04151E 00 00 00 00 00 00 3157 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
04151E 00 00 00 00 00 00 3157 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00             
04351E                   3158 
04351E                   3159 ; buffer to perform some operations
04351E                   3160 swap_sprite_buffer:
04351E 00 00 00 00 00 00 3161 	ds ONE_FRAME_BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00       
04391E                   3162 
04391E                   3163 asm_line:
04391E 44 42 20          3164 	DB "DB "
043921                   3165 
043921                   3166 asm_line_length:
043921 03                3167 	DB 3
043922                   3168 
043922                   3169 rgb_palette:
043922 00 00 00          3170 	db $00,$00,$00
043925 AA 00 00          3171 	db $AA,$00,$00
043928 00 AA 00          3172 	db $00,$AA,$00
04392B AA AA 00          3173 	db $AA,$AA,$00
04392E 00 00 AA          3174 	db $00,$00,$AA
043931 AA 00 AA          3175 	db $AA,$00,$AA
043934 00 AA AA          3176 	db $00,$AA,$AA
043937 AA AA AA          3177 	db $AA,$AA,$AA
04393A                   3178 
04393A 55 55 55          3179 	db $55,$55,$55
04393D FF 00 00          3180 	db $FF,$00,$00
043940 00 FF 00          3181 	db $00,$FF,$00
043943 FF FF 00          3182 	db $FF,$FF,$00
043946 00 00 FF          3183 	db $00,$00,$FF
043949 FF 00 FF          3184 	db $FF,$00,$FF
04394C 00 FF FF          3185 	db $00,$FF,$FF
04394F FF FF FF          3186 	db $FF,$FF,$FF
043952                   3187 
043952 00 00 55          3188 	db $00,$00,$55
043955 00 55 00          3189 	db $00,$55,$00
043958 00 55 55          3190 	db $00,$55,$55
04395B 00 55 AA          3191 	db $00,$55,$AA
04395E 00 55 FF          3192 	db $00,$55,$FF
043961 00 AA 55          3193 	db $00,$AA,$55
043964 00 AA FF          3194 	db $00,$AA,$FF
043967 00 FF 55          3195 	db $00,$FF,$55
04396A                   3196 
04396A 00 FF AA          3197 	db $00,$FF,$AA
04396D 55 00 00          3198 	db $55,$00,$00
043970 55 00 55          3199 	db $55,$00,$55
043973 55 00 AA          3200 	db $55,$00,$AA
043976 55 00 FF          3201 	db $55,$00,$FF
043979 55 55 00          3202 	db $55,$55,$00
04397C 55 55 AA          3203 	db $55,$55,$AA
04397F 55 55 FF          3204 	db $55,$55,$FF
043982                   3205 
043982 55 AA 00          3206 	db $55,$AA,$00
043985 55 AA 55          3207 	db $55,$AA,$55
043988 55 AA AA          3208 	db $55,$AA,$AA
04398B 55 AA FF          3209 	db $55,$AA,$FF
04398E 55 FF 00          3210 	db $55,$FF,$00
043991 55 FF 55          3211 	db $55,$FF,$55
043994 55 FF AA          3212 	db $55,$FF,$AA
043997 55 FF FF          3213 	db $55,$FF,$FF
04399A                   3214 
04399A AA 00 55          3215 	db $AA,$00,$55
04399D AA 00 FF          3216 	db $AA,$00,$FF
0439A0 AA 55 00          3217 	db $AA,$55,$00
0439A3 AA 55 55          3218 	db $AA,$55,$55
0439A6 AA 55 AA          3219 	db $AA,$55,$AA
0439A9 AA 55 FF          3220 	db $AA,$55,$FF
0439AC AA AA 55          3221 	db $AA,$AA,$55
0439AF AA AA FF          3222 	db $AA,$AA,$FF
0439B2                   3223 
0439B2 AA FF 00          3224 	db $AA,$FF,$00
0439B5 AA FF 55          3225 	db $AA,$FF,$55
0439B8 AA FF AA          3226 	db $AA,$FF,$AA
0439BB AA FF FF          3227 	db $AA,$FF,$FF
0439BE FF 00 55          3228 	db $FF,$00,$55
0439C1 FF 00 AA          3229 	db $FF,$00,$AA
0439C4 FF 55 00          3230 	db $FF,$55,$00
0439C7 FF 55 55          3231 	db $FF,$55,$55
0439CA                   3232 
0439CA FF 55 AA          3233 	db $FF,$55,$AA
0439CD FF 55 FF          3234 	db $FF,$55,$FF
0439D0 FF AA 00          3235 	db $FF,$AA,$00
0439D3 FF AA 55          3236 	db $FF,$AA,$55
0439D6 FF AA AA          3237 	db $FF,$AA,$AA
0439D9 FF AA FF          3238 	db $FF,$AA,$FF
0439DC FF FF 55          3239 	db $FF,$FF,$55
0439DF FF FF AA          3240 	db $FF,$FF,$AA
0439E2                   3241 
0439E2                   3242 ; sprite structure:
0439E2                   3243 ; =================
0439E2                   3244 ; colors_count  :   byte
0439E2                   3245 ; frames count	:	byte
0439E2                   3246 ; spr size		:	byte
0439E2                   3247 ; data			:   width x height bytes of colors
0439E2                   3248 
0439E2                   3249 
0439E2                   3250 ; TODO:
0439E2                   3251 ;---------
0439E2                   3252 ; add/remove frames must be done correctly
0439E2                   3253 ; read animations with 'p' key
0439E2                   3254 ; create a help text file with keyboard shorcuts list
0439E2                   3255 ; solve the 'copy frame' bug
0439E2                   3256 ; solve the bug of frames in fn_load/save sprite
