PC     Output            Line Source
040000                   0001 ; spredit.asm
040000                   0002 ;
040000                   0003 ; by B.Vignoli
040000                   0004 ; MIT 2023
040000                   0005 ;
040000                   0006 
040000                   0007 .assume adl=1
040000                   0008 .org $040000
040000                   0009 
040000 C3 4D 00 04       0010 	jp start
040004                   0011 
040004                   0012 ; MOS header
040004 FF FF FF FF FF FF 0013 .align 64
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
       FF FF FF FF FF FF 
040040 4D 4F 53 00 01    0014 .db "MOS",0,1
040045                   0015 
040045                   0016 	include "mos_api.inc"
040045                   0001 ;
040045                   0002 ; Title:	AGON MOS - API for user projects
040045                   0003 ; Author:	Dean Belfield
040045                   0004 ; Created:	03/08/2022
040045                   0005 ; Last Updated:	10/08/2023
040045                   0006 ;
040045                   0007 ; Modinfo:
040045                   0008 ; 05/08/2022:	Added mos_feof
040045                   0009 ; 09/08/2022:	Added system variables: cursorX, cursorY
040045                   0010 ; 18/08/2022:	Added system variables: scrchar, scrpixel, audioChannel, audioSuccess, vpd_pflags
040045                   0011 ; 05/09/2022:	Added mos_ren, vdp_pflag_mode
040045                   0012 ; 24/09/2022:	Added mos_getError, mos_mkdir
040045                   0013 ; 13/10/2022:	Added mos_oscli
040045                   0014 ; 23/02/2023:	Added more sysvars, fixed typo in sysvar_audioSuccess, offsets for sysvar_scrCols, sysvar_scrRows
040045                   0015 ; 04/03/2023:	Added sysvar_scrpixelIndex
040045                   0016 ; 08/03/2023:	Renamed sysvar_keycode to sysvar_keyascii, added sysvar_vkeycode
040045                   0017 ; 15/03/2023:	Added mos_copy, mos_getrtc, mos_setrtc, rtc, vdp_pflag_rtc
040045                   0018 ; 21/03/2023:	Added mos_setintvector, sysvars for keyboard status, vdu codes for vdp
040045                   0019 ; 22/03/2023:	The VDP commands are now indexed from 0x80
040045                   0020 ; 29/03/2023:	Added mos_uopen, mos_uclose, mos_ugetc, mos_uputc
040045                   0021 ; 13/04/2023:	Added FatFS file structures (FFOBJID, FIL, DIR, FILINFO)
040045                   0022 ; 15/04/2023:	Added mos_getfil, mos_fread, mos_fwrite and mos_flseek
040045                   0023 ; 19/05/2023:	Added sysvar_scrMode
040045                   0024 ; 05/06/2023:	Added sysvar_rtcEnable
040045                   0025 ; 03/08/2023:	Added mos_setkbvector
040045                   0026 ; 10/08/2023:	Added mos_getkbmap
040045                   0027 
040045                   0028 ; VDP control (VDU 23, 0, n)
040045                   0029 ;
040045                   0030 vdp_gp:			EQU 	80h
040045                   0031 vdp_keycode:		EQU 	81h
040045                   0032 vdp_cursor:		EQU	82h
040045                   0033 vdp_scrchar:		EQU	83h
040045                   0034 vdp_scrpixel:		EQU	84h
040045                   0035 vdp_audio:		EQU	85h
040045                   0036 vdp_mode:		EQU	86h
040045                   0037 vdp_rtc:		EQU	87h
040045                   0038 vdp_keystate:		EQU	88h
040045                   0039 vdp_logicalcoords:	EQU	C0h
040045                   0040 vdp_terminalmode:	EQU	FFh
040045                   0041 
040045                   0042 ; MOS high level functions
040045                   0043 ;
040045                   0044 mos_getkey:		EQU	00h
040045                   0045 mos_load:		EQU	01h
040045                   0046 mos_save:		EQU	02h
040045                   0047 mos_cd:			EQU	03h
040045                   0048 mos_dir:		EQU	04h
040045                   0049 mos_del:		EQU	05h
040045                   0050 mos_ren:		EQU	06h
040045                   0051 mos_mkdir:		EQU	07h
040045                   0052 mos_sysvars:		EQU	08h
040045                   0053 mos_editline:		EQU	09h
040045                   0054 mos_fopen:		EQU	0Ah
040045                   0055 mos_fclose:		EQU	0Bh
040045                   0056 mos_fgetc:		EQU	0Ch
040045                   0057 mos_fputc:		EQU	0Dh
040045                   0058 mos_feof:		EQU	0Eh
040045                   0059 mos_getError:		EQU	0Fh
040045                   0060 mos_oscli:		EQU	10h
040045                   0061 mos_copy:		EQU	11h
040045                   0062 mos_getrtc:		EQU	12h
040045                   0063 mos_setrtc:		EQU	13h
040045                   0064 mos_setintvector:	EQU	14h
040045                   0065 mos_uopen:		EQU	15h
040045                   0066 mos_uclose:		EQU	16h
040045                   0067 mos_ugetc:		EQU	17h
040045                   0068 mos_uputc:		EQU 	18h
040045                   0069 mos_getfil:		EQU	19h
040045                   0070 mos_fread:		EQU	1Ah
040045                   0071 mos_fwrite:		EQU	1Bh
040045                   0072 mos_flseek:		EQU	1Ch
040045                   0073 mos_setkbvector:	EQU	1Dh
040045                   0074 mos_getkbmap:		EQU	1Eh
040045                   0075 
040045                   0076 ; FatFS file access functions
040045                   0077 ;
040045                   0078 ffs_fopen:		EQU	80h
040045                   0079 ffs_fclose:		EQU	81h
040045                   0080 ffs_fread:		EQU	82h
040045                   0081 ffs_fwrite:		EQU	83h
040045                   0082 ffs_flseek:		EQU	84h
040045                   0083 ffs_ftruncate:		EQU	85h
040045                   0084 ffs_fsync:		EQU	86h
040045                   0085 ffs_fforward:		EQU	87h
040045                   0086 ffs_fexpand:		EQU	88h
040045                   0087 ffs_fgets:		EQU	89h
040045                   0088 ffs_fputc:		EQU	8Ah
040045                   0089 ffs_fputs:		EQU	8Bh
040045                   0090 ffs_fprintf:		EQU	8Ch
040045                   0091 ffs_ftell:		EQU	8Dh
040045                   0092 ffs_feof:		EQU	8Eh
040045                   0093 ffs_fsize:		EQU	8Fh
040045                   0094 ffs_ferror:		EQU	90h
040045                   0095 
040045                   0096 ; FatFS directory access functions
040045                   0097 ;
040045                   0098 ffs_dopen:		EQU	91h
040045                   0099 ffs_dclose:		EQU	92h
040045                   0100 ffs_dread:		EQU	93h
040045                   0101 ffs_dfindfirst:		EQU	94h
040045                   0102 ffs_dfindnext:		EQU	95h
040045                   0103 
040045                   0104 ; FatFS file and directory management functions
040045                   0105 ;
040045                   0106 ffs_stat:		EQU	96h
040045                   0107 ffs_unlink:		EQU	97h
040045                   0108 ffs_rename:		EQU	98h
040045                   0109 ffs_chmod:		EQU	99h
040045                   0110 ffs_utime:		EQU	9Ah
040045                   0111 ffs_mkdir:		EQU	9Bh
040045                   0112 ffs_chdir:		EQU	9Ch
040045                   0113 ffs_chdrive:		EQU	9Dh
040045                   0114 ffs_getcwd:		EQU	9Eh
040045                   0115 
040045                   0116 ; FatFS volume management and system configuration functions
040045                   0117 ;
040045                   0118 ffs_mount:		EQU	9Fh
040045                   0119 ffs_mkfs:		EQU	A0h
040045                   0120 ffs_fdisk:		EQU	A1h
040045                   0121 ffs_getfree:		EQU	A2h
040045                   0122 ffs_getlabel:		EQU	A3h
040045                   0123 ffs_setlabel:		EQU	A4h
040045                   0124 ffs_setcp:		EQU	A5h
040045                   0125 
040045                   0126 ; File access modes
040045                   0127 ;
040045                   0128 fa_read:		EQU	01h
040045                   0129 fa_write:		EQU	02h
040045                   0130 fa_open_existing:	EQU	00h
040045                   0131 fa_create_new:		EQU	04h
040045                   0132 fa_create_always:	EQU	08h
040045                   0133 fa_open_always:		EQU	10h
040045                   0134 fa_open_append:		EQU	30h
040045                   0135 
040045                   0136 ; System variable indexes for api_sysvars
040045                   0137 ; Index into _sysvars in globals.asm
040045                   0138 ;
040045                   0139 sysvar_time:		EQU	00h	; 4: Clock timer in centiseconds (incremented by 2 every VBLANK)
040045                   0140 sysvar_vpd_pflags:	EQU	04h	; 1: Flags to indicate completion of VDP commands
040045                   0141 sysvar_keyascii:	EQU	05h	; 1: ASCII keycode, or 0 if no key is pressed
040045                   0142 sysvar_keymods:		EQU	06h	; 1: Keycode modifiers
040045                   0143 sysvar_cursorX:		EQU	07h	; 1: Cursor X position
040045                   0144 sysvar_cursorY:		EQU	08h	; 1: Cursor Y position
040045                   0145 sysvar_scrchar:		EQU	09h	; 1: Character read from screen
040045                   0146 sysvar_scrpixel:	EQU	0Ah	; 3: Pixel data read from screen (R,B,G)
040045                   0147 sysvar_audioChannel:	EQU	0Dh	; 1: Audio channel
040045                   0148 sysvar_audioSuccess:	EQU	0Eh	; 1: Audio channel note queued (0 = no, 1 = yes)
040045                   0149 sysvar_scrWidth:	EQU	0Fh	; 2: Screen width in pixels
040045                   0150 sysvar_scrHeight:	EQU	11h	; 2: Screen height in pixels
040045                   0151 sysvar_scrCols:		EQU	13h	; 1: Screen columns in characters
040045                   0152 sysvar_scrRows:		EQU	14h	; 1: Screen rows in characters
040045                   0153 sysvar_scrColours:	EQU	15h	; 1: Number of colours displayed
040045                   0154 sysvar_scrpixelIndex:	EQU	16h	; 1: Index of pixel data read from screen
040045                   0155 sysvar_vkeycode:	EQU	17h	; 1: Virtual key code from FabGL
040045                   0156 sysvar_vkeydown:	EQU	18h	; 1: Virtual key state from FabGL (0=up, 1=down)
040045                   0157 sysvar_vkeycount:	EQU	19h	; 1: Incremented every time a key packet is received
040045                   0158 sysvar_rtc:		EQU	1Ah	; 6: Real time clock data
040045                   0159 sysvar_spare:		EQU	20h	; 2: Spare, previously used by rtc
040045                   0160 sysvar_keydelay:	EQU	22h	; 2: Keyboard repeat delay
040045                   0161 sysvar_keyrate:		EQU	24h	; 2: Keyboard repeat reat
040045                   0162 sysvar_keyled:		EQU	26h	; 1: Keyboard LED status
040045                   0163 sysvar_scrMode:		EQU	27h	; 1: Screen mode
040045                   0164 sysvar_rtcEnable:	EQU	28h	; 1: RTC enable flag (0: disabled, 1: use ESP32 RTC)
040045                   0165 
040045                   0166 ; Flags for the VPD protocol
040045                   0167 ;
040045                   0168 vdp_pflag_cursor:	EQU	00000001b
040045                   0169 vdp_pflag_scrchar:	EQU	00000010b
040045                   0170 vdp_pflag_point:	EQU	00000100b
040045                   0171 vdp_pflag_audio:	EQU	00001000b
040045                   0172 vdp_pflag_mode:		EQU	00010000b
040045                   0173 vdp_pflag_rtc:		EQU	00100000b
040045                   0174 
040045                   0175 ;
040045                   0176 ; Macro for calling the API
040045                   0177 ; Parameters:
040045                   0178 ; - function: One of the function numbers listed above
040045                   0179 ;
040045                   0180 	MACRO moscall function
040045                   0181 		LD	A, function
040045                   0182 		RST.LIS	08h
040045                   0183 	ENDMACRO
040045                   0184 
040045                   0185 	MACRO vdu function
040045                   0186 		LD	A, function
040045                   0187 		RST.LIS	10h
040045                   0188 	ENDMACRO
040045                   0189 
040045                   0190 	MACRO vdu_a
040045                   0191 		RST.LIS	10h
040045                   0192 	ENDMACRO
040045                   0017 
040045                   0018 MAX_COLORS:		 	equ 64
040045                   0019 COLOR_MIN:	 		equ 0
040045                   0020 COLOR_MAX:	 		equ 63
040045                   0021 
040045                   0022 MAX_FRAMES:			equ 8
040045                   0023 
040045                   0024 COLOR_WHITE:		equ 15
040045                   0025 COLOR_GREY:			equ 7
040045                   0026 COLOR_BLACK:		equ 0
040045                   0027 
040045                   0028 TITLE_X: 	equ 17
040045                   0029 TITLE_Y: 	equ 2
040045                   0030 MENU_X: 	equ 13
040045                   0031 MENU1_Y: 	equ 8
040045                   0032 MENU2_Y: 	equ 12
040045                   0033 MENU3_Y: 	equ 16
040045                   0034 MENU4_Y: 	equ 20
040045                   0035 MENU5_Y: 	equ 24
040045                   0036 FILENAME_X: equ 7
040045                   0037 FILENAME_Y: equ 24
040045                   0038 
040045                   0039 SPR44: 		equ 4
040045                   0040 SPR88: 		equ 8
040045                   0041 SPR1616: 	equ 16
040045                   0042 SPR3232: 	equ 32
040045                   0043 
040045                   0044 SPR44_width: 	equ 32
040045                   0045 SPR88_width: 	equ 16
040045                   0046 SPR1616_width: 	equ 8
040045                   0047 SPR3232_width: 	equ 4
040045                   0048 
040045                   0049 BUFFER_SIZE:			equ 8192 ; 8 frames
040045                   0050 ONE_FRAME_BUFFER_SIZE:	equ 1024
040045                   0051 
040045                   0052 SLOWDOWN_DELAY:	equ 20
040045                   0053 
040045                   0054 KEY_SPACE: equ -99
040045                   0055 KEY_UP: equ -58
040045                   0056 KEY_DOWN: equ -42
040045                   0057 KEY_LEFT: equ -26
040045                   0058 KEY_RIGHT: equ -122
040045                   0059 KEY_DELETE: equ -90
040045                   0060 KEY_TAB: equ -97
040045                   0061 KEY_N: equ -86
040045                   0062 KEY_C: equ -83
040045                   0063 KEY_BACKSPACE: equ -48
040045                   0064 KEY_PGUP: equ -64
040045                   0065 KEY_PGDOWN: equ -79
040045                   0066 KEY_L: equ -87
040045                   0067 KEY_S: equ -82
040045                   0068 KEY_E: equ -35
040045                   0069 KEY_R: equ -52
040045                   0070 KEY_F: equ -68
040045                   0071 KEY_M: equ -102
040045                   0072 KEY_ESCAPE: equ -113
040045                   0073 KEY_F1: equ -114
040045                   0074 KEY_F2: equ -115
040045                   0075 KEY_F3: equ -116
040045                   0076 KEY_F4: equ -21
040045                   0077 
040045                   0078 BITLOOKUP:
040045 01 02 04 08       0079 	DB 01h,02h,04h,08h
040049 10 20 40 80       0080 	DB 10h,20h,40h,80h
04004D                   0081 
04004D                   0082 ;======================================================================
04004D                   0083 start:
04004D F5                0084 	push af
04004E C5                0085 	push bc
04004F D5                0086 	push de
040050 DD E5             0087 	push ix
040052 FD E5             0088 	push iy
040054                   0089 
040054                   0090 	; set mode 8 (320x240x64)
040054                   0091 	vdu 22
040054 3E 16             0091 		LD	A, function
040056 49 D7             0091 		RST.LIS	10h
040058                   0092 	vdu 8
040058 3E 08             0092 		LD	A, function
04005A 49 D7             0092 		RST.LIS	10h
04005C                   0093 
04005C                   0094 	; set logical coordinates system
04005C                   0095 	vdu 23
04005C 3E 17             0095 		LD	A, function
04005E 49 D7             0095 		RST.LIS	10h
040060                   0096 	vdu 0
040060 3E 00             0096 		LD	A, function
040062 49 D7             0096 		RST.LIS	10h
040064                   0097 	vdu $c0
040064 3E C0             0097 		LD	A, function
040066 49 D7             0097 		RST.LIS	10h
040068                   0098 	vdu 0
040068 3E 00             0098 		LD	A, function
04006A 49 D7             0098 		RST.LIS	10h
04006C                   0099 
04006C                   0100 	; set text colors
04006C                   0101 	vdu 17
04006C 3E 11             0101 		LD	A, function
04006E 49 D7             0101 		RST.LIS	10h
040070                   0102 	vdu 128 ; black background
040070 3E 80             0102 		LD	A, function
040072 49 D7             0102 		RST.LIS	10h
040074                   0103 
040074                   0104 	vdu 17
040074 3E 11             0104 		LD	A, function
040076 49 D7             0104 		RST.LIS	10h
040078                   0105 	vdu COLOR_WHITE ; white pen
040078 3E 0F             0105 		LD	A, function
04007A 49 D7             0105 		RST.LIS	10h
04007C                   0106 
04007C                   0107 	; set graphics pen
04007C                   0108 	vdu 18
04007C 3E 12             0108 		LD	A, function
04007E 49 D7             0108 		RST.LIS	10h
040080                   0109 	vdu 0
040080 3E 00             0109 		LD	A, function
040082 49 D7             0109 		RST.LIS	10h
040084                   0110 	vdu COLOR_WHITE ; white pen
040084 3E 0F             0110 		LD	A, function
040086 49 D7             0110 		RST.LIS	10h
040088                   0111 
040088                   0112 	; hide cursor
040088                   0113 	vdu 23
040088 3E 17             0113 		LD	A, function
04008A 49 D7             0113 		RST.LIS	10h
04008C                   0114 	vdu 1
04008C 3E 01             0114 		LD	A, function
04008E 49 D7             0114 		RST.LIS	10h
040090                   0115 	vdu 0
040090 3E 00             0115 		LD	A, function
040092 49 D7             0115 		RST.LIS	10h
040094                   0116 
040094                   0117 	; store coordinates
040094 DD 21 D7 12 04    0118 	ld ix,x1
040099 21 00 00 00       0119 	ld hl,0
04009D DD 75 00          0120 	ld (ix+0),l
0400A0 DD 74 01          0121 	ld (ix+1),h
0400A3                   0122 
0400A3 DD 21 D9 12 04    0123 	ld ix,y1
0400A8 21 00 00 00       0124 	ld hl,0
0400AC DD 75 00          0125 	ld (ix+0),l
0400AF DD 74 01          0126 	ld (ix+1),h
0400B2                   0127 
0400B2 DD 21 DB 12 04    0128 	ld ix,x2
0400B7 21 3F 01 00       0129 	ld hl,319
0400BB DD 75 00          0130 	ld (ix+0),l
0400BE DD 74 01          0131 	ld (ix+1),h
0400C1                   0132 
0400C1 DD 21 DD 12 04    0133 	ld ix,y2
0400C6 21 EF 00 00       0134 	ld hl,239
0400CA DD 75 00          0135 	ld (ix+0),l
0400CD DD 74 01          0136 	ld (ix+1),h
0400D0                   0137 
0400D0                   0138 	; draw the border rectangle
0400D0 CD 8F 09 04       0139 	call fn_rect
0400D4                   0140 
0400D4                   0141 	; locate x,y
0400D4                   0142 	vdu 31
0400D4 3E 1F             0142 		LD	A, function
0400D6 49 D7             0142 		RST.LIS	10h
0400D8                   0143 	vdu TITLE_X
0400D8 3E 11             0143 		LD	A, function
0400DA 49 D7             0143 		RST.LIS	10h
0400DC                   0144 	vdu TITLE_Y
0400DC 3E 02             0144 		LD	A, function
0400DE 49 D7             0144 		RST.LIS	10h
0400E0                   0145 
0400E0                   0146 	; print text
0400E0 21 EC 12 04       0147 	ld hl,title
0400E4 01 00 00 00       0148 	ld bc,0
0400E8 AF                0149 	xor a
0400E9 49 DF             0150 	rst.lis $18
0400EB                   0151 
0400EB                   0152 	; locate x,y
0400EB                   0153 	vdu 31
0400EB 3E 1F             0153 		LD	A, function
0400ED 49 D7             0153 		RST.LIS	10h
0400EF                   0154 	vdu MENU_X
0400EF 3E 0D             0154 		LD	A, function
0400F1 49 D7             0154 		RST.LIS	10h
0400F3                   0155 	vdu MENU1_Y
0400F3 3E 08             0155 		LD	A, function
0400F5 49 D7             0155 		RST.LIS	10h
0400F7                   0156 
0400F7                   0157 	; print text
0400F7 21 F5 12 04       0158 	ld hl,menu1
0400FB 01 00 00 00       0159 	ld bc,0
0400FF AF                0160 	xor a
040100 49 DF             0161 	rst.lis $18
040102                   0162 
040102                   0163 	; locate x,y
040102                   0164 	vdu 31
040102 3E 1F             0164 		LD	A, function
040104 49 D7             0164 		RST.LIS	10h
040106                   0165 	vdu MENU_X
040106 3E 0D             0165 		LD	A, function
040108 49 D7             0165 		RST.LIS	10h
04010A                   0166 	vdu MENU2_Y
04010A 3E 0C             0166 		LD	A, function
04010C 49 D7             0166 		RST.LIS	10h
04010E                   0167 
04010E                   0168 	; print text
04010E 21 04 13 04       0169 	ld hl,menu2
040112 01 00 00 00       0170 	ld bc,0
040116 AF                0171 	xor a
040117 49 DF             0172 	rst.lis $18
040119                   0173 
040119                   0174 	; locate x,y
040119                   0175 	vdu 31
040119 3E 1F             0175 		LD	A, function
04011B 49 D7             0175 		RST.LIS	10h
04011D                   0176 	vdu MENU_X
04011D 3E 0D             0176 		LD	A, function
04011F 49 D7             0176 		RST.LIS	10h
040121                   0177 	vdu MENU3_Y
040121 3E 10             0177 		LD	A, function
040123 49 D7             0177 		RST.LIS	10h
040125                   0178 
040125                   0179 	; print text
040125 21 13 13 04       0180 	ld hl,menu3
040129 01 00 00 00       0181 	ld bc,0
04012D AF                0182 	xor a
04012E 49 DF             0183 	rst.lis $18
040130                   0184 
040130                   0185 	; locate x,y
040130                   0186 	vdu 31
040130 3E 1F             0186 		LD	A, function
040132 49 D7             0186 		RST.LIS	10h
040134                   0187 	vdu MENU_X
040134 3E 0D             0187 		LD	A, function
040136 49 D7             0187 		RST.LIS	10h
040138                   0188 	vdu MENU4_Y
040138 3E 14             0188 		LD	A, function
04013A 49 D7             0188 		RST.LIS	10h
04013C                   0189 
04013C                   0190 	; print text
04013C 21 24 13 04       0191 	ld hl,menu4
040140 01 00 00 00       0192 	ld bc,0
040144 AF                0193 	xor a
040145 49 DF             0194 	rst.lis $18
040147                   0195 
040147                   0196 ; menu loop
040147                   0197 menu_loop:
040147 21 8F FF FF       0198 	ld hl,KEY_ESCAPE
04014B CD 89 12 04       0199 	call fn_inkey
04014F FE 01             0200 	CP 1
040151 CA 6B 09 04       0201 	jp z,exit_program
040155                   0202 
040155 21 8E FF FF       0203 	ld hl,KEY_F1
040159 CD 89 12 04       0204 	call fn_inkey
04015D FE 01             0205 	CP 1
04015F CA 91 01 04       0206 	jp z,ml_menu1
040163                   0207 
040163 21 8D FF FF       0208 	ld hl,KEY_F2
040167 CD 89 12 04       0209 	call fn_inkey
04016B FE 01             0210 	CP 1
04016D CA 97 01 04       0211 	jp z,ml_menu2
040171                   0212 
040171 21 8C FF FF       0213 	ld hl,KEY_F3
040175 CD 89 12 04       0214 	call fn_inkey
040179 FE 01             0215 	CP 1
04017B CA 9D 01 04       0216 	jp z,ml_menu3
04017F                   0217 
04017F 21 EB FF FF       0218 	ld hl,KEY_F4
040183 CD 89 12 04       0219 	call fn_inkey
040187 FE 01             0220 	CP 1
040189 CA A3 01 04       0221 	jp z,ml_menu4
04018D                   0222 
04018D C3 47 01 04       0223 	jp menu_loop
040191                   0224 
040191                   0225 ml_menu1:
040191 3E 04             0226 	ld a,SPR44
040193 16 20             0227 	ld d,SPR44_width
040195 18 10             0228 	jr exit_menu_loop
040197                   0229 
040197                   0230 ml_menu2:
040197 3E 08             0231 	ld a,SPR88
040199 16 10             0232 	ld d,SPR88_width
04019B 18 0A             0233 	jr exit_menu_loop
04019D                   0234 
04019D                   0235 ml_menu3:
04019D 3E 10             0236 	ld a,SPR1616
04019F 16 08             0237 	ld d,SPR1616_width
0401A1 18 04             0238 	jr exit_menu_loop
0401A3                   0239 
0401A3                   0240 ml_menu4:
0401A3 3E 20             0241 	ld a,SPR3232
0401A5 16 04             0242 	ld d,SPR3232_width
0401A7                   0243 
0401A7                   0244 exit_menu_loop:
0401A7                   0245 	; store edited sprite size
0401A7 21 EA 12 04       0246 	ld hl,spr_size
0401AB 77                0247 	ld (hl),a
0401AC 21 E9 12 04       0248 	ld hl,pixel_width
0401B0 72                0249 	ld (hl),d
0401B1                   0250 
0401B1                   0251 	; clear the text screen
0401B1                   0252 	vdu 12
0401B1 3E 0C             0252 		LD	A, function
0401B3 49 D7             0252 		RST.LIS	10h
0401B5                   0253 
0401B5                   0254 	; draw the palette
0401B5 0E 00             0255 	ld c,0
0401B7                   0256 
0401B7                   0257 palette_loop:
0401B7 C5                0258 	push bc
0401B8                   0259 
0401B8                   0260 	; choose palette color
0401B8                   0261 	vdu 18
0401B8 3E 12             0261 		LD	A, function
0401BA 49 D7             0261 		RST.LIS	10h
0401BC                   0262 	vdu 0
0401BC 3E 00             0262 		LD	A, function
0401BE 49 D7             0262 		RST.LIS	10h
0401C0 C1                0263 	pop bc
0401C1 C5                0264 	push bc
0401C2 79                0265 	ld a,c
0401C3                   0266 	vdu_a
0401C3 49 D7             0266 		RST.LIS	10h
0401C5                   0267 
0401C5                   0268 	; store coordinates for a palette square
0401C5 DD 21 D7 12 04    0269 	ld ix,x1
0401CA E1                0270 	pop hl
0401CB E5                0271 	push hl
0401CC 26 05             0272 	ld h,5
0401CE ED 6C             0273 	mlt hl
0401D0 E5                0274 	push hl
0401D1 DD 75 00          0275 	ld (ix+0),l
0401D4 DD 74 01          0276 	ld (ix+1),h
0401D7                   0277 
0401D7 DD 21 D9 12 04    0278 	ld ix,y1
0401DC 21 00 00 00       0279 	ld hl,0
0401E0 DD 75 00          0280 	ld (ix+0),l
0401E3 DD 74 01          0281 	ld (ix+1),h
0401E6                   0282 
0401E6 DD 21 DB 12 04    0283 	ld ix,x2
0401EB E1                0284 	pop hl
0401EC 11 04 00 00       0285 	ld de,4
0401F0 19                0286 	add hl,de
0401F1 DD 75 00          0287 	ld (ix+0),l
0401F4 DD 74 01          0288 	ld (ix+1),h
0401F7                   0289 
0401F7 DD 21 DD 12 04    0290 	ld ix,y2
0401FC 21 0A 00 00       0291 	ld hl,10
040200 DD 75 00          0292 	ld (ix+0),l
040203 DD 74 01          0293 	ld (ix+1),h
040206                   0294 
040206                   0295 	; draw the palette filled square
040206 CD 4E 0A 04       0296 	call fn_rectf
04020A                   0297 
04020A                   0298 	; next color ?
04020A C1                0299 	pop bc
04020B 0C                0300 	inc c
04020C 79                0301 	ld a,c
04020D FE 40             0302 	cp MAX_COLORS
04020F C2 B7 01 04       0303 	jp nz,palette_loop
040213                   0304 
040213                   0305 	; store coordinates
040213 DD 21 D7 12 04    0306 	ld ix,x1
040218 21 00 00 00       0307 	ld hl,0
04021C DD 75 00          0308 	ld (ix+0),l
04021F DD 74 01          0309 	ld (ix+1),h
040222                   0310 
040222 DD 21 D9 12 04    0311 	ld ix,y1
040227 21 0B 00 00       0312 	ld hl,11
04022B DD 75 00          0313 	ld (ix+0),l
04022E DD 74 01          0314 	ld (ix+1),h
040231                   0315 
040231 DD 21 DB 12 04    0316 	ld ix,x2
040236 21 3F 01 00       0317 	ld hl,319
04023A DD 75 00          0318 	ld (ix+0),l
04023D DD 74 01          0319 	ld (ix+1),h
040240                   0320 
040240 DD 21 DD 12 04    0321 	ld ix,y2
040245 21 EF 00 00       0322 	ld hl,239
040249 DD 75 00          0323 	ld (ix+0),l
04024C DD 74 01          0324 	ld (ix+1),h
04024F                   0325 
04024F                   0326 	; draw the border rectangle
04024F CD 8F 09 04       0327 	call fn_rect
040253                   0328 
040253                   0329 	; store edited sprite coordinates
040253 DD 21 DF 12 04    0330 	ld ix,xs1
040258 FD 21 D7 12 04    0331 	ld iy,x1
04025D DD 6E 00          0332 	ld l,(ix+0)
040260 DD 66 01          0333 	ld h,(ix+1)
040263 FD 75 00          0334 	ld (iy+0),l
040266 FD 74 01          0335 	ld (iy+1),h
040269                   0336 
040269 DD 21 E1 12 04    0337 	ld ix,ys1
04026E FD 21 D9 12 04    0338 	ld iy,y1
040273 DD 6E 00          0339 	ld l,(ix+0)
040276 DD 66 01          0340 	ld h,(ix+1)
040279 FD 75 00          0341 	ld (iy+0),l
04027C FD 74 01          0342 	ld (iy+1),h
04027F                   0343 
04027F DD 21 E3 12 04    0344 	ld ix,xs2
040284 FD 21 DB 12 04    0345 	ld iy,x2
040289 DD 6E 00          0346 	ld l,(ix+0)
04028C DD 66 01          0347 	ld h,(ix+1)
04028F FD 75 00          0348 	ld (iy+0),l
040292 FD 74 01          0349 	ld (iy+1),h
040295                   0350 
040295 DD 21 E5 12 04    0351 	ld ix,ys2
04029A FD 21 DD 12 04    0352 	ld iy,y2
04029F DD 6E 00          0353 	ld l,(ix+0)
0402A2 DD 66 01          0354 	ld h,(ix+1)
0402A5 FD 75 00          0355 	ld (iy+0),l
0402A8 FD 74 01          0356 	ld (iy+1),h
0402AB                   0357 
0402AB                   0358 	; draw the sprite's border rectangle
0402AB CD 8F 09 04       0359 	call fn_rect
0402AF                   0360 
0402AF                   0361 	; update sprite size descriptions
0402AF CD 25 12 04       0362 	call fn_show_spr_descr
0402B3                   0363 
0402B3                   0364 ; initialize sprite vars
0402B3                   0365 init_sprite_vars:
0402B3                   0366 	; initialize coordinates before drawing the sprite
0402B3 DD 21 E7 12 04    0367 	ld ix,xpix
0402B8 AF                0368 	xor a
0402B9 DD 77 00          0369 	ld (ix+0),a ; xpix = 0
0402BC DD 77 01          0370 	ld (ix+1),a	; ypix = 0
0402BF DD 21 EB 12 04    0371 	ld ix,current_pen
0402C4 3E 0F             0372 	ld a,COLOR_WHITE
0402C6 DD 77 00          0373 	ld (ix+0),a ; current pen -> white
0402C9                   0374 
0402C9                   0375 	; set vars
0402C9 21 C0 13 04       0376 	ld hl,colors_count
0402CD 3E 40             0377 	ld a,MAX_COLORS
0402CF 77                0378 	ld (hl),a
0402D0 21 C1 13 04       0379 	ld hl,current_frame
0402D4 AF                0380 	xor a
0402D5 77                0381 	ld (hl),a
0402D6 3C                0382 	inc a
0402D7 21 C2 13 04       0383 	ld hl,frames_count
0402DB 77                0384 	ld (hl),a
0402DC                   0385 
0402DC                   0386 	; fill buffers with zeros
0402DC 01 00 20 00       0387 	ld bc,BUFFER_SIZE
0402E0 21 CA 13 04       0388 	ld hl,sprite_buffer
0402E4                   0389 
0402E4                   0390 isv_fill_loop:
0402E4 AF                0391 	xor a
0402E5 77                0392 	ld (hl),a
0402E6 0B                0393 	dec bc
0402E7 23                0394 	inc hl
0402E8 78                0395 	ld a,b
0402E9 B1                0396 	or c
0402EA FE 00             0397 	cp 0
0402EC 20 F6             0398 	jr nz,isv_fill_loop
0402EE                   0399 
0402EE                   0400 ; draw the pixel with a border
0402EE CD 1C 0B 04       0401 	call fn_draw_pixel_with_border
0402F2                   0402 
0402F2                   0403 ; draw sprite loop
0402F2                   0404 draw_sprite_loop:
0402F2 21 9D FF FF       0405 	ld hl,KEY_SPACE
0402F6 CD 89 12 04       0406 	call fn_inkey
0402FA FE 01             0407 	cp 1
0402FC CC 00 04 04       0408 	call z,dsl_set_pen
040300                   0409 
040300 21 C6 FF FF       0410 	ld hl,KEY_UP
040304 CD 89 12 04       0411 	call fn_inkey
040308 FE 01             0412 	cp 1
04030A CC 25 04 04       0413 	call z,dsl_up
04030E                   0414 
04030E 21 D6 FF FF       0415 	ld hl,KEY_DOWN
040312 CD 89 12 04       0416 	call fn_inkey
040316 FE 01             0417 	cp 1
040318 CC 4C 04 04       0418 	call z,dsl_down
04031C                   0419 
04031C 21 E6 FF FF       0420 	ld hl,KEY_LEFT
040320 CD 89 12 04       0421 	call fn_inkey
040324 FE 01             0422 	cp 1
040326 CC 78 04 04       0423 	call z,dsl_left
04032A                   0424 
04032A 21 86 FF FF       0425 	ld hl,KEY_RIGHT
04032E CD 89 12 04       0426 	call fn_inkey
040332 FE 01             0427 	cp 1
040334 CC 9F 04 04       0428 	call z,dsl_right
040338                   0429 
040338 21 A6 FF FF       0430 	ld hl,KEY_DELETE
04033C CD 89 12 04       0431 	call fn_inkey
040340 FE 01             0432 	cp 1
040342 CC 14 04 04       0433 	call z,dsl_reset_pen
040346                   0434 
040346 21 9F FF FF       0435 	ld hl,KEY_TAB
04034A CD 89 12 04       0436 	call fn_inkey
04034E FE 01             0437 	cp 1
040350 CA 33 08 04       0438 	jp z,dsl_palette_tool
040354                   0439 
040354 21 AA FF FF       0440 	ld hl,KEY_N
040358 CD 89 12 04       0441 	call fn_inkey
04035C FE 01             0442 	cp 1
04035E CC 1E 05 04       0443 	call z,dsl_add_frame
040362                   0444 
040362 21 AD FF FF       0445 	ld hl,KEY_C
040366 CD 89 12 04       0446 	call fn_inkey
04036A FE 01             0447 	cp 1
04036C CC B5 05 04       0448 	call z,dsl_add_and_copy_frame
040370                   0449 
040370 21 D0 FF FF       0450 	ld hl,KEY_BACKSPACE
040374 CD 89 12 04       0451 	call fn_inkey
040378 FE 01             0452 	cp 1
04037A CC 1C 06 04       0453 	call z,dsl_delete_frame
04037E                   0454 
04037E 21 C0 FF FF       0455 	ld hl,KEY_PGUP
040382 CD 89 12 04       0456 	call fn_inkey
040386 FE 01             0457 	cp 1
040388 CC 15 07 04       0458 	call z,dsl_next_frame
04038C                   0459 
04038C 21 B1 FF FF       0460 	ld hl,KEY_PGDOWN
040390 CD 89 12 04       0461 	call fn_inkey
040394 FE 01             0462 	cp 1
040396 CC F6 06 04       0463 	call z,dsl_previous_frame
04039A                   0464 
04039A 21 A9 FF FF       0465 	ld hl,KEY_L
04039E CD 89 12 04       0466 	call fn_inkey
0403A2 FE 01             0467 	cp 1
0403A4 CC CB 04 04       0468 	call z,dsl_load_sprite
0403A8                   0469 
0403A8 21 AE FF FF       0470 	ld hl,KEY_S
0403AC CD 89 12 04       0471 	call fn_inkey
0403B0 FE 01             0472 	cp 1
0403B2 CC EC 04 04       0473 	call z,dsl_save_sprite
0403B6                   0474 
0403B6 21 DD FF FF       0475 	ld hl,KEY_E
0403BA CD 89 12 04       0476 	call fn_inkey
0403BE FE 01             0477 	cp 1
0403C0 CC 05 05 04       0478 	call z,dsl_export_sprite
0403C4                   0479 
0403C4 21 CC FF FF       0480 	ld hl,KEY_R
0403C8 CD 89 12 04       0481 	call fn_inkey
0403CC FE 01             0482 	cp 1
0403CE CC 3B 07 04       0483 	call z,dsl_rotate_frame
0403D2                   0484 
0403D2 21 BC FF FF       0485 	ld hl,KEY_F
0403D6 CD 89 12 04       0486 	call fn_inkey
0403DA FE 01             0487 	cp 1
0403DC CC 4C 07 04       0488 	call z,dsl_flip_frame
0403E0                   0489 
0403E0 21 9A FF FF       0490 	ld hl,KEY_M
0403E4 CD 89 12 04       0491 	call fn_inkey
0403E8 FE 01             0492 	cp 1
0403EA CC B3 07 04       0493 	call z,dsl_mirror_frame
0403EE                   0494 
0403EE 21 8F FF FF       0495 	ld hl,KEY_ESCAPE
0403F2 CD 89 12 04       0496 	call fn_inkey
0403F6 FE 01             0497 	cp 1
0403F8 CA 6B 09 04       0498 	jp z,exit_program
0403FC                   0499 
0403FC C3 F2 02 04       0500 	jp draw_sprite_loop
040400                   0501 
040400                   0502 ; set the pen of the current pixel
040400                   0503 dsl_set_pen:
040400 CD 46 0B 04       0504 	call fn_get_pixel_color
040404 21 EB 12 04       0505 	ld hl,current_pen
040408 BE                0506 	cp (hl)
040409 C8                0507 	ret z
04040A 7E                0508 	ld a,(hl)
04040B CD 88 0B 04       0509 	call fn_set_pixel_color
04040F CD 1C 0B 04       0510 	call fn_draw_pixel_with_border
040413 C9                0511 	ret
040414                   0512 
040414                   0513 ; reset the pen of the current pixel
040414                   0514 dsl_reset_pen:
040414 CD 46 0B 04       0515 	call fn_get_pixel_color
040418 FE 00             0516 	cp 0
04041A C8                0517 	ret z
04041B AF                0518 	xor a
04041C CD 88 0B 04       0519 	call fn_set_pixel_color
040420 CD 1C 0B 04       0520 	call fn_draw_pixel_with_border
040424 C9                0521 	ret
040425                   0522 
040425                   0523 ; move pixel up
040425                   0524 dsl_up:
040425 21 E8 12 04       0525 	ld hl,ypix
040429 7E                0526 	ld a,(hl)
04042A FE 00             0527 	cp 0
04042C C8                0528 	ret z
04042D                   0529 
04042D 21 9D FF FF       0530 	ld hl,KEY_SPACE
040431 CD 89 12 04       0531 	call fn_inkey
040435 FE 01             0532 	cp 1
040437 CC 00 04 04       0533 	call z,dsl_set_pen
04043B                   0534 
04043B CD 30 0B 04       0535 	call fn_draw_pixel_without_border
04043F CD CC 0B 04       0536 	call fn_move_up
040443 CD 1C 0B 04       0537 	call fn_draw_pixel_with_border
040447 CD 04 12 04       0538 	call fn_slowdown
04044B C9                0539 	ret
04044C                   0540 
04044C                   0541 ; move pixel down
04044C                   0542 dsl_down:
04044C 21 EA 12 04       0543 	ld hl,spr_size
040450 56                0544 	ld d,(hl)
040451 15                0545 	dec d
040452                   0546 
040452 21 E8 12 04       0547 	ld hl,ypix
040456 7E                0548 	ld a,(hl)
040457 BA                0549 	cp d
040458 C8                0550 	ret z
040459                   0551 
040459 21 9D FF FF       0552 	ld hl,KEY_SPACE
04045D CD 89 12 04       0553 	call fn_inkey
040461 FE 01             0554 	cp 1
040463 CC 00 04 04       0555 	call z,dsl_set_pen
040467                   0556 
040467 CD 30 0B 04       0557 	call fn_draw_pixel_without_border
04046B CD D2 0B 04       0558 	call fn_move_down
04046F CD 1C 0B 04       0559 	call fn_draw_pixel_with_border
040473 CD 04 12 04       0560 	call fn_slowdown
040477 C9                0561 	ret
040478                   0562 
040478                   0563 ; move pixel left
040478                   0564 dsl_left:
040478 21 E7 12 04       0565 	ld hl,xpix
04047C 7E                0566 	ld a,(hl)
04047D FE 00             0567 	cp 0
04047F C8                0568 	ret z
040480                   0569 
040480 21 9D FF FF       0570 	ld hl,KEY_SPACE
040484 CD 89 12 04       0571 	call fn_inkey
040488 FE 01             0572 	cp 1
04048A CC 00 04 04       0573 	call z,dsl_set_pen
04048E                   0574 
04048E CD 30 0B 04       0575 	call fn_draw_pixel_without_border
040492 CD D8 0B 04       0576 	call fn_move_left
040496 CD 1C 0B 04       0577 	call fn_draw_pixel_with_border
04049A CD 04 12 04       0578 	call fn_slowdown
04049E C9                0579 	ret
04049F                   0580 
04049F                   0581 ; move pixel right
04049F                   0582 dsl_right:
04049F 21 EA 12 04       0583 	ld hl,spr_size
0404A3 56                0584 	ld d,(hl)
0404A4 15                0585 	dec d
0404A5                   0586 
0404A5 21 E7 12 04       0587 	ld hl,xpix
0404A9 7E                0588 	ld a,(hl)
0404AA BA                0589 	cp d
0404AB C8                0590 	ret z
0404AC                   0591 
0404AC 21 9D FF FF       0592 	ld hl,KEY_SPACE
0404B0 CD 89 12 04       0593 	call fn_inkey
0404B4 FE 01             0594 	cp 1
0404B6 CC 00 04 04       0595 	call z,dsl_set_pen
0404BA                   0596 
0404BA CD 30 0B 04       0597 	call fn_draw_pixel_without_border
0404BE CD DE 0B 04       0598 	call fn_move_right
0404C2 CD 1C 0B 04       0599 	call fn_draw_pixel_with_border
0404C6 CD 04 12 04       0600 	call fn_slowdown
0404CA C9                0601 	ret
0404CB                   0602 
0404CB                   0603 ; load a sprite
0404CB                   0604 dsl_load_sprite:
0404CB 21 A9 FF FF       0605 	ld hl,KEY_L
0404CF CD 89 12 04       0606 	call fn_inkey
0404D3 FE 00             0607 	cp 0
0404D5 20 F4             0608 	jr nz,dsl_load_sprite
0404D7                   0609 
0404D7 CD 30 0B 04       0610 	call fn_draw_pixel_without_border
0404DB CD A6 0D 04       0611 	call fn_load_sprite
0404DF CD 7B 11 04       0612 	call fn_refresh_sprite
0404E3 CD 1C 0B 04       0613 	call fn_draw_pixel_with_border
0404E7 CD BB 11 04       0614 	call fn_change_frame
0404EB C9                0615 	ret
0404EC                   0616 
0404EC                   0617 ; save a sprite
0404EC                   0618 dsl_save_sprite:
0404EC 21 AE FF FF       0619 	ld hl,KEY_S
0404F0 CD 89 12 04       0620 	call fn_inkey
0404F4 FE 00             0621 	cp 0
0404F6 20 F4             0622 	jr nz,dsl_save_sprite
0404F8                   0623 
0404F8 CD 30 0B 04       0624 	call fn_draw_pixel_without_border
0404FC CD CB 0E 04       0625 	call fn_save_sprite
040500 CD 7B 11 04       0626 	call fn_refresh_sprite
040504 C9                0627 	ret
040505                   0628 
040505                   0629 dsl_export_sprite:
040505 21 DD FF FF       0630 	ld hl,KEY_E
040509 CD 89 12 04       0631 	call fn_inkey
04050D FE 00             0632 	cp 0
04050F 20 F4             0633 	jr nz,dsl_export_sprite
040511                   0634 
040511 CD 30 0B 04       0635 	call fn_draw_pixel_without_border
040515 CD C6 0F 04       0636 	call fn_export_sprite
040519 CD 7B 11 04       0637 	call fn_refresh_sprite
04051D C9                0638 	ret
04051E                   0639 
04051E                   0640 
04051E                   0641 ; add a frame to the animation
04051E                   0642 dsl_add_frame:
04051E 21 AA FF FF       0643 	ld hl,KEY_N
040522 CD 89 12 04       0644 	call fn_inkey
040526 FE 00             0645 	cp 0
040528 20 F4             0646 	jr nz,dsl_add_frame
04052A                   0647 
04052A                   0648 	; frames limit reached ? exit
04052A 21 C2 13 04       0649 	ld hl,frames_count
04052E 7E                0650 	ld a,(hl)
04052F FE 08             0651 	cp MAX_FRAMES
040531 C8                0652 	ret z
040532                   0653 
040532                   0654 	; get the number of frames to copy
040532 21 C2 13 04       0655 	ld hl,frames_count
040536 7E                0656 	ld a,(hl)
040537 21 C1 13 04       0657 	ld hl,current_frame
04053B 46                0658 	ld b,(hl)
04053C 90                0659 	sub b
04053D 3D                0660 	dec a
04053E                   0661 
04053E                   0662 	; get sprsize² (length of a sprite, in bytes)
04053E 21 EA 12 04       0663 	ld hl,spr_size
040542 11 00 00 00       0664 	ld de,$000000
040546 5E                0665 	ld e,(hl)
040547 56                0666 	ld d,(hl)
040548 ED 5C             0667 	mlt de ; DE = sprsize²
04054A                   0668 
04054A                   0669 	; prepare for the case we goto af_zap...
04054A 21 CA 13 04       0670 	ld hl,sprite_buffer
04054E                   0671 
04054E F5                0672 	push af
04054F E5                0673 	push hl
040550 21 C1 13 04       0674 	ld hl,current_frame
040554 7E                0675 	ld a,(hl)
040555 3C                0676 	inc a
040556 47                0677 	ld b,a
040557 E1                0678 	pop hl
040558 F1                0679 	pop af
040559                   0680 
040559                   0681 af_loop0:
040559 19                0682 	add hl,de ; for if current frame = 0 (prepare to zap!)
04055A 10 FD             0683 	djnz af_loop0
04055C                   0684 
04055C E5                0685 	push hl ; store HL = sprite buffer + sprsize²
04055D FE 00             0686 	cp 0
04055F CA 87 05 04       0687 	jp z,af_zap ; zap the copy, if the 'current frame' is at the last frame
040563 E1                0688 	pop hl ; HL unused in this case
040564                   0689 
040564 21 00 00 00       0690 	ld hl,$000000 ; HL is 0 to store the result
040568 47                0691 	ld b,a ; B = frames to copy
040569                   0692 
040569                   0693 ; multiply number of frames to copy by sprsize²
040569                   0694 af_loop1:
040569 19                0695 	add hl,de ; HL = length (in bytes) to copy (a few frames)
04056A 10 FD             0696 	djnz af_loop1
04056C                   0697 
04056C E5                0698 	push hl
04056D C1                0699 	pop bc ; BC = HL = length (in bytes) to copy (a few frames)
04056E                   0700 
04056E 21 C1 13 04       0701 	ld hl,current_frame
040572 7E                0702 	ld a,(hl)
040573 3C                0703 	inc a
040574 21 CA 13 04       0704 	ld hl,sprite_buffer
040578                   0705 
040578 C5                0706 	push bc
040579 47                0707 	ld b,a
04057A                   0708 
04057A                   0709 af_loop2:
04057A 19                0710 	add hl,de ; HL = sprite buffer + length to copy
04057B 10 FD             0711 	djnz af_loop2
04057D                   0712 
04057D C1                0713 	pop bc
04057E                   0714 
04057E E5                0715 	push hl ; HL = sprite_buffer + (current frame * sprsize²)
04057F                   0716 
04057F 09                0717 	add hl,bc
040580 2B                0718 	dec hl ; HL = end address to copy to end target address
040581                   0719 
040581 E5                0720 	push hl
040582 19                0721 	add hl,de
040583 EB                0722 	ex de,hl ; DE = end target address
040584 E1                0723 	pop hl
040585                   0724 
040585 ED B8             0725 	lddr
040587                   0726 
040587                   0727 af_zap:
040587                   0728 	; multiply number of frames to copy by sprsize²
040587 21 EA 12 04       0729 	ld hl,spr_size
04058B 01 00 00 00       0730 	ld bc,$000000
04058F 4E                0731 	ld c,(hl)
040590 46                0732 	ld b,(hl)
040591 ED 4C             0733 	mlt bc ; BC = sprsize²
040593                   0734 
040593 E1                0735 	pop hl ; HL = sprite_buffer + (current frame * sprsize²)
040594                   0736 
040594                   0737 ; fill frame with 0 color
040594                   0738 af_loop3:
040594 AF                0739 	xor a
040595 77                0740 	ld (hl),a
040596 23                0741 	inc hl
040597 0B                0742 	dec bc
040598 78                0743 	ld a,b
040599 B1                0744 	or c
04059A FE 00             0745 	cp 0
04059C 20 F6             0746 	jr nz,af_loop3
04059E                   0747 
04059E                   0748 	; increment the frames count and the current frame values
04059E 21 C2 13 04       0749 	ld hl,frames_count
0405A2 34                0750 	inc (hl)
0405A3 21 C1 13 04       0751 	ld hl,current_frame
0405A7 34                0752 	inc (hl)
0405A8                   0753 
0405A8 CD BB 11 04       0754 	call fn_change_frame
0405AC CD E0 11 04       0755 	call fn_change_frames_count
0405B0 CD 7B 11 04       0756 	call fn_refresh_sprite
0405B4 C9                0757 	ret
0405B5                   0758 
0405B5                   0759 ; add a copy of the current frame to the animation
0405B5                   0760 dsl_add_and_copy_frame: ; TODO! debug me!
0405B5 21 AD FF FF       0761 	ld hl,KEY_C
0405B9 CD 89 12 04       0762 	call fn_inkey
0405BD FE 00             0763 	cp 0
0405BF 20 F4             0764 	jr nz,dsl_add_and_copy_frame
0405C1                   0765 
0405C1                   0766 	; frames limit reached ? exit
0405C1 21 C2 13 04       0767 	ld hl,frames_count
0405C5 7E                0768 	ld a,(hl)
0405C6 FE 08             0769 	cp MAX_FRAMES
0405C8 C8                0770 	ret z
0405C9                   0771 
0405C9                   0772 	; get the number of frames to copy
0405C9 21 C2 13 04       0773 	ld hl,frames_count
0405CD 7E                0774 	ld a,(hl)
0405CE 21 C1 13 04       0775 	ld hl,current_frame
0405D2 46                0776 	ld b,(hl)
0405D3 90                0777 	sub b
0405D4                   0778 
0405D4                   0779 	; get sprsize² (length of a sprite, in bytes)
0405D4 21 EA 12 04       0780 	ld hl,spr_size
0405D8 11 00 00 00       0781 	ld de,$000000
0405DC 5E                0782 	ld e,(hl)
0405DD 56                0783 	ld d,(hl)
0405DE ED 5C             0784 	mlt de ; DE = sprsize²
0405E0                   0785 
0405E0 21 00 00 00       0786 	ld hl,$000000 ; HL is 0 to store the result
0405E4 47                0787 	ld b,a ; B = frames to copy
0405E5                   0788 
0405E5                   0789 ; multiply number of frames to copy by sprsize²
0405E5                   0790 aacf_loop1:
0405E5 19                0791 	add hl,de ; HL = length (in bytes) to copy (a few frames)
0405E6 10 FD             0792 	djnz aacf_loop1
0405E8                   0793 
0405E8 E5                0794 	push hl
0405E9 C1                0795 	pop bc ; BC = HL = length (in bytes) to copy (a few frames)
0405EA                   0796 
0405EA 21 C1 13 04       0797 	ld hl,current_frame
0405EE 7E                0798 	ld a,(hl)
0405EF 21 CA 13 04       0799 	ld hl,sprite_buffer
0405F3 FE 00             0800 	cp 0
0405F5 28 06             0801 	jr z,aacf_loop_end2
0405F7                   0802 
0405F7 C5                0803 	push bc
0405F8 47                0804 	ld b,a
0405F9                   0805 
0405F9                   0806 aacf_loop2:
0405F9 19                0807 	add hl,de ; HL = sprite buffer + length to copy
0405FA 10 FD             0808 	djnz aacf_loop2
0405FC                   0809 
0405FC C1                0810 	pop bc
0405FD                   0811 
0405FD                   0812 aacf_loop_end2:
0405FD 09                0813 	add hl,bc
0405FE 2B                0814 	dec hl ; HL = end address to copy to end target address
0405FF                   0815 
0405FF E5                0816 	push hl
040600 19                0817 	add hl,de
040601 EB                0818 	ex de,hl ; DE = end target address
040602 E1                0819 	pop hl
040603                   0820 
040603 ED B8             0821 	lddr
040605                   0822 
040605                   0823 	; increment the frames count and the current frame values
040605 21 C2 13 04       0824 	ld hl,frames_count
040609 34                0825 	inc (hl)
04060A 21 C1 13 04       0826 	ld hl,current_frame
04060E 34                0827 	inc (hl)
04060F                   0828 
04060F CD BB 11 04       0829 	call fn_change_frame
040613 CD E0 11 04       0830 	call fn_change_frames_count
040617 CD 7B 11 04       0831 	call fn_refresh_sprite
04061B C9                0832 	ret
04061C                   0833 
04061C                   0834 ; delete last frame from animation
04061C                   0835 dsl_delete_frame:
04061C 21 D0 FF FF       0836 	ld hl,KEY_BACKSPACE
040620 CD 89 12 04       0837 	call fn_inkey
040624 FE 00             0838 	cp 0
040626 20 F4             0839 	jr nz,dsl_delete_frame
040628                   0840 
040628                   0841 	; delete current selected frame
040628 21 EA 12 04       0842 	ld hl,spr_size
04062C 01 00 00 00       0843 	ld bc,$000000
040630 4E                0844 	ld c,(hl)
040631 46                0845 	ld b,(hl)
040632 ED 4C             0846 	mlt bc ; BC = sprsize²
040634 21 C1 13 04       0847 	ld hl,current_frame
040638 7E                0848 	ld a,(hl) ; A = current frame
040639 21 CA 13 04       0849 	ld hl,sprite_buffer ; HL = sprite buffer
04063D C5                0850 	push bc
04063E FE 00             0851 	cp 0
040640 28 06             0852 	jr z,df_loop2
040642                   0853 
040642                   0854 df_loop1:
040642 09                0855 	add hl,bc ; HL = sprite buffer + (current frame * sprsize²)
040643 3D                0856 	dec a
040644 FE 00             0857 	cp 0
040646 20 FA             0858 	jr nz,df_loop1
040648                   0859 
040648                   0860 ; clear the current frame
040648                   0861 df_loop2:
040648 AF                0862 	xor a
040649 77                0863 	ld (hl),a
04064A 23                0864 	inc hl
04064B 0B                0865 	dec bc
04064C 78                0866 	ld a,b
04064D B1                0867 	or c
04064E FE 00             0868 	cp 0
040650 20 F6             0869 	jr nz,df_loop2
040652                   0870 
040652                   0871 	; current frame + 1 = frames count ?
040652 E5                0872 	push hl
040653 21 C1 13 04       0873 	ld hl,current_frame
040657 5E                0874 	ld e,(hl)
040658 1C                0875 	inc e
040659 21 C2 13 04       0876 	ld hl,frames_count
04065D 7E                0877 	ld a,(hl)
04065E BB                0878 	cp e
04065F E1                0879 	pop hl
040660 C1                0880 	pop bc
040661 CA DA 06 04       0881 	jp z,df_exit
040665                   0882 
040665 11 C2 13 04       0883 	ld de,frames_count
040669 1A                0884 	ld a,(de) ; A = frames count
04066A E5                0885 	push hl
04066B 21 C1 13 04       0886 	ld hl,current_frame
04066F 5E                0887 	ld e,(hl) ; E = current frame
040670 E1                0888 	pop hl
040671 93                0889 	sub e
040672 3D                0890 	dec a ; A = number of frames to copy back
040673                   0891 
040673 EB                0892 	ex de,hl ; DE = sprite buffer + ((current frame + 1) * sprsize²)
040674 21 00 00 00       0893 	ld hl,$000000
040678 FE 00             0894 	cp 0 ; 0 frames to copy ?
04067A 28 06             0895 	jr z,df_exit_loop3
04067C                   0896 
04067C                   0897 df_loop3:
04067C 09                0898 	add hl,bc ; HL = length of a frame (sprsize²) * frames count
04067D 3D                0899 	dec a
04067E FE 00             0900 	cp 0
040680 20 FA             0901 	jr nz,df_loop3
040682                   0902 
040682                   0903 df_exit_loop3:
040682 E5                0904 	push hl
040683 C1                0905 	pop bc ; BC = total length of area to copy
040684 D5                0906 	push de
040685 E1                0907 	pop hl ; HL = DE = start of area to copy
040686                   0908 
040686 C5                0909 	push bc
040687 D5                0910 	push de
040688 E5                0911 	push hl
040689 21 EA 12 04       0912 	ld hl,spr_size
04068D 11 00 00 00       0913 	ld de,$000000
040691 5E                0914 	ld e,(hl)
040692 56                0915 	ld d,(hl)
040693 ED 5C             0916 	mlt de ; DE = one sprite frame length
040695 E1                0917 	pop hl
040696 B7                0918 	or a
040697 ED 52             0919 	sbc hl,de ; HL = target area to copy
040699 D1                0920 	pop de
04069A EB                0921 	ex de,hl ; DE = target, HL = start
04069B C1                0922 	pop bc
04069C ED B0             0923 	ldir
04069E                   0924 
04069E 21 EA 12 04       0925 	ld hl,spr_size
0406A2 01 00 00 00       0926 	ld bc,$000000
0406A6 4E                0927 	ld c,(hl)
0406A7 46                0928 	ld b,(hl)
0406A8 ED 4C             0929 	mlt bc ; DE = one sprite frame length
0406AA                   0930 
0406AA                   0931 	; delete last frame data
0406AA 21 C2 13 04       0932 	ld hl,frames_count
0406AE 7E                0933 	ld a,(hl) ; A =frames count
0406AF 3D                0934 	dec a ; A = last frame
0406B0 21 CA 13 04       0935 	ld hl,sprite_buffer ; HL = sprite buffer
0406B4 FE 00             0936 	cp 0
0406B6 28 06             0937 	jr z,df_loop5
0406B8                   0938 
0406B8                   0939 df_loop4:
0406B8 09                0940 	add hl,bc ; HL = sprite buffer + (last frame * sprsize²)
0406B9 3D                0941 	dec a
0406BA FE 00             0942 	cp 0
0406BC 20 FA             0943 	jr nz,df_loop4
0406BE                   0944 
0406BE                   0945 ; clear the current frame
0406BE                   0946 df_loop5:
0406BE AF                0947 	xor a
0406BF 77                0948 	ld (hl),a
0406C0 23                0949 	inc hl
0406C1 0B                0950 	dec bc
0406C2 78                0951 	ld a,b
0406C3 B1                0952 	or c
0406C4 FE 00             0953 	cp 0
0406C6 20 F6             0954 	jr nz,df_loop5
0406C8                   0955 
0406C8                   0956 	; decrement frames count
0406C8 21 C2 13 04       0957 	ld hl,frames_count
0406CC 35                0958 	dec (hl)
0406CD                   0959 
0406CD CD BB 11 04       0960 	call fn_change_frame
0406D1 CD E0 11 04       0961 	call fn_change_frames_count
0406D5 CD 7B 11 04       0962 	call fn_refresh_sprite
0406D9 C9                0963 	ret
0406DA                   0964 
0406DA                   0965 df_exit:
0406DA 21 C2 13 04       0966 	ld hl,frames_count
0406DE 7E                0967 	ld a,(hl)
0406DF FE 01             0968 	cp 1
0406E1 28 06             0969 	jr z,df_exit_end
0406E3 35                0970 	dec (hl)
0406E4 21 C1 13 04       0971 	ld hl,current_frame
0406E8 35                0972 	dec (hl)
0406E9                   0973 
0406E9                   0974 df_exit_end:
0406E9 CD BB 11 04       0975 	call fn_change_frame
0406ED CD E0 11 04       0976 	call fn_change_frames_count
0406F1 CD 7B 11 04       0977 	call fn_refresh_sprite
0406F5 C9                0978 	ret
0406F6                   0979 
0406F6                   0980 ; goto previous frame
0406F6                   0981 dsl_previous_frame:
0406F6 21 B1 FF FF       0982 	ld hl,KEY_PGDOWN
0406FA CD 89 12 04       0983 	call fn_inkey
0406FE FE 00             0984 	cp 0
040700 20 F4             0985 	jr nz,dsl_previous_frame
040702                   0986 
040702 21 C1 13 04       0987 	ld hl,current_frame
040706 7E                0988 	ld a,(hl)
040707 FE 00             0989 	cp 0
040709 C8                0990 	ret z
04070A                   0991 
04070A 3D                0992 	dec a
04070B 77                0993 	ld (hl),a
04070C CD BB 11 04       0994 	call fn_change_frame
040710 CD 7B 11 04       0995 	call fn_refresh_sprite
040714 C9                0996 	ret
040715                   0997 
040715                   0998 ; goto next frame
040715                   0999 dsl_next_frame:
040715 21 C0 FF FF       1000 	ld hl,KEY_PGUP
040719 CD 89 12 04       1001 	call fn_inkey
04071D FE 00             1002 	cp 0
04071F 20 F4             1003 	jr nz,dsl_next_frame
040721                   1004 
040721 21 C1 13 04       1005 	ld hl,current_frame
040725 7E                1006 	ld a,(hl)
040726 3C                1007 	inc a
040727 21 C2 13 04       1008 	ld hl,frames_count
04072B BE                1009 	cp (hl)
04072C C8                1010 	ret z
04072D                   1011 
04072D 21 C1 13 04       1012 	ld hl,current_frame
040731 77                1013 	ld (hl),a
040732 CD BB 11 04       1014 	call fn_change_frame
040736 CD 7B 11 04       1015 	call fn_refresh_sprite
04073A C9                1016 	ret
04073B                   1017 
04073B                   1018 ; rotate a frame 90° clockwise
04073B                   1019 dsl_rotate_frame:
04073B 21 CC FF FF       1020 	ld hl,KEY_R
04073F CD 89 12 04       1021 	call fn_inkey
040743 FE 00             1022 	cp 0
040745 20 F4             1023 	jr nz,dsl_rotate_frame
040747                   1024 
040747 CD 7B 11 04       1025 	call fn_refresh_sprite
04074B C9                1026 	ret
04074C                   1027 
04074C                   1028 ; flip frame horizontally
04074C                   1029 dsl_flip_frame:
04074C 21 BC FF FF       1030 	ld hl,KEY_F
040750 CD 89 12 04       1031 	call fn_inkey
040754 FE 00             1032 	cp 0
040756 20 F4             1033 	jr nz,dsl_flip_frame
040758                   1034 
040758 21 EA 12 04       1035 	ld hl,spr_size
04075C 11 00 00 00       1036 	ld de,$000000
040760 5E                1037 	ld e,(hl)
040761 56                1038 	ld d,(hl)
040762 4B                1039 	ld c,e
040763 ED 5C             1040 	mlt de ; DE = sprite length in bytes
040765 21 C1 13 04       1041 	ld hl,current_frame
040769 7E                1042 	ld a,(hl) ; A = current frame
04076A 21 CA 13 04       1043 	ld hl,sprite_buffer
04076E FE 00             1044 	cp 0
040770 28 04             1045 	jr z,ff_noloop1
040772 47                1046 	ld b,a
040773                   1047 
040773                   1048 ff_loop1:
040773 19                1049 	add hl,de ; HL = sprite_buffer + (current frame * sprsize²)
040774 10 FD             1050 	djnz ff_loop1
040776                   1051 
040776                   1052 ff_noloop1:
040776 41                1053 	ld b,c ; B = sprite height
040777 11 00 00 00       1054 	ld de,$000000
04077B 59                1055 	ld e,c ; DE = sprite width
04077C 79                1056 	ld a,c ; A = sprite width
04077D CB 3F             1057 	srl a ; A = sprite height / 2
04077F                   1058 
04077F E5                1059 	push hl
040780 DD E1             1060 	pop ix ; IX = frame address
040782 19                1061 	add hl,de ; HL = frame address + sprite width - 1
040783 2B                1062 	dec hl
040784 E5                1063 	push hl
040785 FD E1             1064 	pop iy ; IY = IX + sprite width - 1
040787                   1065 
040787                   1066 ff_loop2:
040787 F5                1067 	push af
040788 D5                1068 	push de
040789 DD E5             1069 	push ix
04078B FD E5             1070 	push iy
04078D                   1071 ff_loop3:
04078D DD 5E 00          1072 	ld e,(ix+0)
040790 FD 56 00          1073 	ld d,(iy+0)
040793 DD 72 00          1074 	ld (ix+0),d
040796 FD 73 00          1075 	ld (iy+0),e
040799 DD 23             1076 	inc ix
04079B FD 2B             1077 	dec iy
04079D 3D                1078 	dec a
04079E FE 00             1079 	cp 0
0407A0 20 EB             1080 	jr nz,ff_loop3
0407A2 FD E1             1081 	pop iy
0407A4 DD E1             1082 	pop ix
0407A6 D1                1083 	pop de
0407A7 F1                1084 	pop af
0407A8 DD 19             1085 	add ix,de
0407AA FD 19             1086 	add iy,de
0407AC 10 D9             1087 	djnz ff_loop2
0407AE                   1088 
0407AE CD 7B 11 04       1089 	call fn_refresh_sprite
0407B2 C9                1090 	ret
0407B3                   1091 
0407B3                   1092 ; mirror frame vertically
0407B3                   1093 dsl_mirror_frame:
0407B3 21 9A FF FF       1094 	ld hl,KEY_M
0407B7 CD 89 12 04       1095 	call fn_inkey
0407BB FE 00             1096 	cp 0
0407BD 20 F4             1097 	jr nz,dsl_mirror_frame
0407BF                   1098 
0407BF 21 EA 12 04       1099 	ld hl,spr_size
0407C3 01 00 00 00       1100 	ld bc,$000000
0407C7 11 00 00 00       1101 	ld de,$000000
0407CB 5E                1102 	ld e,(hl)
0407CC 56                1103 	ld d,(hl)
0407CD 4B                1104 	ld c,e
0407CE ED 5C             1105 	mlt de ; DE = sprite length in bytes
0407D0 21 C1 13 04       1106 	ld hl,current_frame
0407D4 7E                1107 	ld a,(hl) ; A = current frame
0407D5 21 CA 13 04       1108 	ld hl,sprite_buffer
0407D9 FE 00             1109 	cp 0
0407DB 28 04             1110 	jr z,mf_noloop1
0407DD 47                1111 	ld b,a
0407DE                   1112 
0407DE                   1113 mf_loop1:
0407DE 19                1114 	add hl,de ; HL = sprite_buffer + (current frame * sprsize²)
0407DF 10 FD             1115 	djnz mf_loop1
0407E1                   1116 
0407E1                   1117 mf_noloop1:
0407E1 11 00 00 00       1118 	ld de,$000000
0407E5 59                1119 	ld e,c ; E = sprite height
0407E6 79                1120 	ld a,c ; A = sprite width
0407E7 41                1121 	ld b,c ; B = sprite height
0407E8 CB 38             1122 	srl b ; divide B by 2, so B = sprite height / 2
0407EA                   1123 
0407EA E5                1124 	push hl
0407EB DD E1             1125 	pop ix ; IX = frame address
0407ED 51                1126 	ld d,c
0407EE 15                1127 	dec d
0407EF ED 5C             1128 	mlt de ; DE = sprite length - sprite width
0407F1 19                1129 	add hl,de ; HL = frame address + sprite length - sprite width
0407F2 E5                1130 	push hl
0407F3 FD E1             1131 	pop iy ; IY = IX + sprite length - sprite width
0407F5 21 00 00 00       1132 	ld hl,$000000
0407F9 69                1133 	ld l,c ; HL = sprite width
0407FA                   1134 
0407FA                   1135 mf_loop2:
0407FA F5                1136 	push af
0407FB D5                1137 	push de
0407FC DD E5             1138 	push ix
0407FE FD E5             1139 	push iy
040800                   1140 mf_loop3:
040800 DD 5E 00          1141 	ld e,(ix+0)
040803 FD 56 00          1142 	ld d,(iy+0)
040806 DD 72 00          1143 	ld (ix+0),d
040809 FD 73 00          1144 	ld (iy+0),e
04080C DD 23             1145 	inc ix
04080E FD 23             1146 	inc iy
040810 3D                1147 	dec a
040811 FE 00             1148 	cp 0
040813 20 EB             1149 	jr nz,mf_loop3
040815 FD E1             1150 	pop iy
040817 DD E1             1151 	pop ix
040819 D1                1152 	pop de
04081A F1                1153 	pop af
04081B EB                1154 	ex de,hl
04081C DD 19             1155 	add ix,de
04081E EB                1156 	ex de,hl
04081F E5                1157 	push hl
040820 FD E5             1158 	push iy
040822 E1                1159 	pop hl
040823 D1                1160 	pop de
040824 B7                1161 	or a
040825 ED 52             1162 	sbc hl,de
040827 E5                1163 	push hl
040828 D5                1164 	push de
040829 E1                1165 	pop hl
04082A FD E1             1166 	pop iy
04082C 10 CC             1167 	djnz mf_loop2
04082E                   1168 
04082E CD 7B 11 04       1169 	call fn_refresh_sprite
040832 C9                1170 	ret
040833                   1171 
040833                   1172 ; change current tool to palette
040833                   1173 dsl_palette_tool:
040833 21 9F FF FF       1174 	ld hl,KEY_TAB
040837 CD 89 12 04       1175 	call fn_inkey
04083B FE 00             1176 	cp 0
04083D 20 F4             1177 	jr nz,dsl_palette_tool
04083F                   1178 
04083F                   1179 	; hide sprite drawing cursor
04083F CD 30 0B 04       1180 	call fn_draw_pixel_without_border
040843                   1181 
040843                   1182 	; draw selected palette color
040843 21 EB 12 04       1183 	ld hl,current_pen
040847 4E                1184 	ld c,(hl)
040848 CD E4 0B 04       1185 	call fn_draw_palette_with_border
04084C                   1186 
04084C                   1187 ; select palette color
04084C                   1188 dsl_palette_tool_loop:
04084C 21 E6 FF FF       1189 	ld hl,KEY_LEFT
040850 CD 89 12 04       1190 	call fn_inkey
040854 FE 01             1191 	cp 1
040856 CC 15 09 04       1192 	call z,dsl_dec_pen
04085A                   1193 
04085A 21 86 FF FF       1194 	ld hl,KEY_RIGHT
04085E CD 89 12 04       1195 	call fn_inkey
040862 FE 01             1196 	cp 1
040864 CC 40 09 04       1197 	call z,dsl_inc_pen
040868                   1198 
040868 21 9F FF FF       1199 	ld hl,KEY_TAB
04086C CD 89 12 04       1200 	call fn_inkey
040870 FE 01             1201 	cp 1
040872 CA F8 08 04       1202 	jp z,dsl_draw_sprite_tool
040876                   1203 
040876 21 A9 FF FF       1204 	ld hl,KEY_L
04087A CD 89 12 04       1205 	call fn_inkey
04087E FE 01             1206 	cp 1
040880 CC A4 08 04       1207 	call z,dslp_load_sprite
040884                   1208 
040884 21 AE FF FF       1209 	ld hl,KEY_S
040888 CD 89 12 04       1210 	call fn_inkey
04088C FE 01             1211 	cp 1
04088E CC D2 08 04       1212 	call z,dslp_save_sprite
040892                   1213 
040892 21 8F FF FF       1214 	ld hl,KEY_ESCAPE
040896 CD 89 12 04       1215 	call fn_inkey
04089A FE 01             1216 	cp 1
04089C CA 6B 09 04       1217 	jp z,exit_program
0408A0                   1218 
0408A0 C3 4C 08 04       1219 	jp dsl_palette_tool_loop
0408A4                   1220 
0408A4                   1221 dslp_load_sprite:
0408A4 21 A9 FF FF       1222 	ld hl,KEY_L
0408A8 CD 89 12 04       1223 	call fn_inkey
0408AC FE 00             1224 	cp 0
0408AE 20 F4             1225 	jr nz,dslp_load_sprite
0408B0                   1226 
0408B0 21 EB 12 04       1227 	ld hl,current_pen
0408B4 4E                1228 	ld c,(hl)
0408B5 CD 49 0C 04       1229 	call fn_draw_palette_without_border
0408B9 CD A6 0D 04       1230 	call fn_load_sprite
0408BD 21 EB 12 04       1231 	ld hl,current_pen
0408C1 4E                1232 	ld c,(hl)
0408C2 CD 7B 11 04       1233 	call fn_refresh_sprite
0408C6 CD E4 0B 04       1234 	call fn_draw_palette_with_border
0408CA CD BB 11 04       1235 	call fn_change_frame
0408CE C3 4C 08 04       1236 	jp dsl_palette_tool_loop
0408D2                   1237 
0408D2                   1238 dslp_save_sprite:
0408D2 21 AE FF FF       1239 	ld hl,KEY_S
0408D6 CD 89 12 04       1240 	call fn_inkey
0408DA FE 00             1241 	cp 0
0408DC 20 F4             1242 	jr nz,dslp_save_sprite
0408DE                   1243 
0408DE 21 EB 12 04       1244 	ld hl,current_pen
0408E2 4E                1245 	ld c,(hl)
0408E3 CD 49 0C 04       1246 	call fn_draw_palette_without_border
0408E7 CD CB 0E 04       1247 	call fn_save_sprite
0408EB 21 EB 12 04       1248 	ld hl,current_pen
0408EF 4E                1249 	ld c,(hl)
0408F0 CD E4 0B 04       1250 	call fn_draw_palette_with_border
0408F4 C3 4C 08 04       1251 	jp dsl_palette_tool_loop
0408F8                   1252 
0408F8                   1253 dsl_draw_sprite_tool:
0408F8 21 9F FF FF       1254 	ld hl,KEY_TAB
0408FC CD 89 12 04       1255 	call fn_inkey
040900 FE 00             1256 	cp 0
040902 20 F4             1257 	jr nz,dsl_draw_sprite_tool
040904                   1258 
040904                   1259 	; unselect palette color
040904 21 EB 12 04       1260 	ld hl,current_pen
040908 4E                1261 	ld c,(hl)
040909 CD 49 0C 04       1262 	call fn_draw_palette_without_border
04090D                   1263 
04090D                   1264 	; draw the pixel with a border
04090D CD 1C 0B 04       1265 	call fn_draw_pixel_with_border
040911                   1266 
040911 C3 F2 02 04       1267 	jp draw_sprite_loop
040915                   1268 
040915                   1269 dsl_dec_pen:
040915 21 EB 12 04       1270 	ld hl,current_pen
040919 7E                1271 	ld a,(hl)
04091A FE 00             1272 	cp COLOR_MIN
04091C CA 4C 08 04       1273 	jp z,dsl_palette_tool_loop
040920                   1274 
040920 F5                1275 	push af
040921 E5                1276 	push hl
040922                   1277 
040922                   1278 	; unselect palette color
040922 21 EB 12 04       1279 	ld hl,current_pen
040926 4E                1280 	ld c,(hl)
040927 CD 49 0C 04       1281 	call fn_draw_palette_without_border
04092B                   1282 
04092B E1                1283 	pop hl
04092C F1                1284 	pop af
04092D                   1285 
04092D                   1286 	; dec the pen
04092D 3D                1287 	dec a
04092E 77                1288 	ld (hl),a
04092F                   1289 
04092F                   1290 	; select palette color
04092F 21 EB 12 04       1291 	ld hl,current_pen
040933 4E                1292 	ld c,(hl)
040934 CD E4 0B 04       1293 	call fn_draw_palette_with_border
040938 CD 04 12 04       1294 	call fn_slowdown
04093C C3 4C 08 04       1295 	jp dsl_palette_tool_loop
040940                   1296 
040940                   1297 dsl_inc_pen:
040940 21 EB 12 04       1298 	ld hl,current_pen
040944 7E                1299 	ld a,(hl)
040945 FE 3F             1300 	cp COLOR_MAX
040947 CA 4C 08 04       1301 	jp z,dsl_palette_tool_loop
04094B                   1302 
04094B F5                1303 	push af
04094C E5                1304 	push hl
04094D                   1305 
04094D                   1306 	; unselect palette color
04094D 21 EB 12 04       1307 	ld hl,current_pen
040951 4E                1308 	ld c,(hl)
040952 CD 49 0C 04       1309 	call fn_draw_palette_without_border
040956                   1310 
040956 E1                1311 	pop hl
040957 F1                1312 	pop af
040958                   1313 
040958                   1314 	; inc the pen
040958 3C                1315 	inc a
040959 77                1316 	ld (hl),a
04095A                   1317 
04095A                   1318 	; select palette color
04095A 21 EB 12 04       1319 	ld hl,current_pen
04095E 4E                1320 	ld c,(hl)
04095F CD E4 0B 04       1321 	call fn_draw_palette_with_border
040963 CD 04 12 04       1322 	call fn_slowdown
040967 C3 4C 08 04       1323 	jp dsl_palette_tool_loop
04096B                   1324 
04096B                   1325 ; exit program
04096B                   1326 exit_program:
04096B                   1327 	; reset to mode 1
04096B                   1328 	vdu 22
04096B 3E 16             1328 		LD	A, function
04096D 49 D7             1328 		RST.LIS	10h
04096F                   1329 	vdu 1
04096F 3E 01             1329 		LD	A, function
040971 49 D7             1329 		RST.LIS	10h
040973                   1330 
040973                   1331 	; position the texte cursor at home
040973                   1332 	vdu 30
040973 3E 1E             1332 		LD	A, function
040975 49 D7             1332 		RST.LIS	10h
040977                   1333 
040977                   1334 	; show cursor
040977                   1335 	vdu 23
040977 3E 17             1335 		LD	A, function
040979 49 D7             1335 		RST.LIS	10h
04097B                   1336 	vdu 1
04097B 3E 01             1336 		LD	A, function
04097D 49 D7             1336 		RST.LIS	10h
04097F                   1337 	vdu 1
04097F 3E 01             1337 		LD	A, function
040981 49 D7             1337 		RST.LIS	10h
040983                   1338 
040983 FD E1             1339 	pop iy
040985 DD E1             1340 	pop ix
040987 D1                1341 	pop de
040988 C1                1342 	pop bc
040989 F1                1343 	pop af
04098A 21 00 00 00       1344 	ld hl,0
04098E                   1345 
04098E C9                1346 	ret
04098F                   1347 ;======================================================================
04098F                   1348 
04098F                   1349 ; draw a rectangle
04098F                   1350 fn_rect:
04098F                   1351 	vdu 25
04098F 3E 19             1351 		LD	A, function
040991 49 D7             1351 		RST.LIS	10h
040993                   1352 	vdu 4
040993 3E 04             1352 		LD	A, function
040995 49 D7             1352 		RST.LIS	10h
040997 DD 21 D7 12 04    1353 	ld ix,x1
04099C DD 7E 00          1354 	ld a,(ix + 0)
04099F                   1355 	vdu_a
04099F 49 D7             1355 		RST.LIS	10h
0409A1 DD 7E 01          1356 	ld a,(ix + 1)
0409A4                   1357 	vdu_a
0409A4 49 D7             1357 		RST.LIS	10h
0409A6 FD 21 D9 12 04    1358 	ld iy,y1
0409AB FD 7E 00          1359 	ld a,(iy + 0)
0409AE                   1360 	vdu_a
0409AE 49 D7             1360 		RST.LIS	10h
0409B0 FD 7E 01          1361 	ld a,(iy + 1)
0409B3                   1362 	vdu_a
0409B3 49 D7             1362 		RST.LIS	10h
0409B5                   1363 
0409B5                   1364 	vdu 25
0409B5 3E 19             1364 		LD	A, function
0409B7 49 D7             1364 		RST.LIS	10h
0409B9                   1365 	vdu 5
0409B9 3E 05             1365 		LD	A, function
0409BB 49 D7             1365 		RST.LIS	10h
0409BD DD 21 DB 12 04    1366 	ld ix,x2
0409C2 DD 7E 00          1367 	ld a,(ix + 0)
0409C5                   1368 	vdu_a
0409C5 49 D7             1368 		RST.LIS	10h
0409C7 DD 7E 01          1369 	ld a,(ix + 1)
0409CA                   1370 	vdu_a
0409CA 49 D7             1370 		RST.LIS	10h
0409CC FD 21 D9 12 04    1371 	ld iy,y1
0409D1 FD 7E 00          1372 	ld a,(iy + 0)
0409D4                   1373 	vdu_a
0409D4 49 D7             1373 		RST.LIS	10h
0409D6 FD 7E 01          1374 	ld a,(iy + 1)
0409D9                   1375 	vdu_a
0409D9 49 D7             1375 		RST.LIS	10h
0409DB                   1376 
0409DB                   1377 	vdu 25
0409DB 3E 19             1377 		LD	A, function
0409DD 49 D7             1377 		RST.LIS	10h
0409DF                   1378 	vdu 5
0409DF 3E 05             1378 		LD	A, function
0409E1 49 D7             1378 		RST.LIS	10h
0409E3 DD 21 DB 12 04    1379 	ld ix,x2
0409E8 DD 7E 00          1380 	ld a,(ix + 0)
0409EB                   1381 	vdu_a
0409EB 49 D7             1381 		RST.LIS	10h
0409ED DD 7E 01          1382 	ld a,(ix + 1)
0409F0                   1383 	vdu_a
0409F0 49 D7             1383 		RST.LIS	10h
0409F2 FD 21 DD 12 04    1384 	ld iy,y2
0409F7 FD 7E 00          1385 	ld a,(iy + 0)
0409FA                   1386 	vdu_a
0409FA 49 D7             1386 		RST.LIS	10h
0409FC FD 7E 01          1387 	ld a,(iy + 1)
0409FF                   1388 	vdu_a
0409FF 49 D7             1388 		RST.LIS	10h
040A01                   1389 
040A01                   1390 	vdu 25
040A01 3E 19             1390 		LD	A, function
040A03 49 D7             1390 		RST.LIS	10h
040A05                   1391 	vdu 5
040A05 3E 05             1391 		LD	A, function
040A07 49 D7             1391 		RST.LIS	10h
040A09 DD 21 D7 12 04    1392 	ld ix,x1
040A0E DD 7E 00          1393 	ld a,(ix + 0)
040A11                   1394 	vdu_a
040A11 49 D7             1394 		RST.LIS	10h
040A13 DD 7E 01          1395 	ld a,(ix + 1)
040A16                   1396 	vdu_a
040A16 49 D7             1396 		RST.LIS	10h
040A18 FD 21 DD 12 04    1397 	ld iy,y2
040A1D FD 7E 00          1398 	ld a,(iy + 0)
040A20                   1399 	vdu_a
040A20 49 D7             1399 		RST.LIS	10h
040A22 FD 7E 01          1400 	ld a,(iy + 1)
040A25                   1401 	vdu_a
040A25 49 D7             1401 		RST.LIS	10h
040A27                   1402 
040A27                   1403 	vdu 25
040A27 3E 19             1403 		LD	A, function
040A29 49 D7             1403 		RST.LIS	10h
040A2B                   1404 	vdu 5
040A2B 3E 05             1404 		LD	A, function
040A2D 49 D7             1404 		RST.LIS	10h
040A2F DD 21 D7 12 04    1405 	ld ix,x1
040A34 DD 7E 00          1406 	ld a,(ix + 0)
040A37                   1407 	vdu_a
040A37 49 D7             1407 		RST.LIS	10h
040A39 DD 7E 01          1408 	ld a,(ix + 1)
040A3C                   1409 	vdu_a
040A3C 49 D7             1409 		RST.LIS	10h
040A3E FD 21 D9 12 04    1410 	ld iy,y1
040A43 FD 7E 00          1411 	ld a,(iy + 0)
040A46                   1412 	vdu_a
040A46 49 D7             1412 		RST.LIS	10h
040A48 FD 7E 01          1413 	ld a,(iy + 1)
040A4B                   1414 	vdu_a
040A4B 49 D7             1414 		RST.LIS	10h
040A4D                   1415 
040A4D C9                1416 	ret
040A4E                   1417 
040A4E                   1418 ; draw a filled rectangle
040A4E                   1419 fn_rectf:
040A4E DD 21 D7 12 04    1420 	ld ix,x1
040A53 FD 21 D9 12 04    1421 	ld iy,y1
040A58                   1422 
040A58                   1423 	vdu 25
040A58 3E 19             1423 		LD	A, function
040A5A 49 D7             1423 		RST.LIS	10h
040A5C                   1424 	vdu 4
040A5C 3E 04             1424 		LD	A, function
040A5E 49 D7             1424 		RST.LIS	10h
040A60 DD 7E 00          1425 	ld a,(ix+0)
040A63                   1426 	vdu_a
040A63 49 D7             1426 		RST.LIS	10h
040A65 DD 7E 01          1427 	ld a,(ix+1)
040A68                   1428 	vdu_a
040A68 49 D7             1428 		RST.LIS	10h
040A6A FD 7E 00          1429 	ld a,(iy+0)
040A6D                   1430 	vdu_a
040A6D 49 D7             1430 		RST.LIS	10h
040A6F FD 7E 01          1431 	ld a,(iy+1)
040A72                   1432 	vdu_a
040A72 49 D7             1432 		RST.LIS	10h
040A74                   1433 
040A74 DD 21 DB 12 04    1434 	ld ix,x2
040A79 FD 21 DD 12 04    1435 	ld iy,y2
040A7E                   1436 
040A7E                   1437 	vdu 25
040A7E 3E 19             1437 		LD	A, function
040A80 49 D7             1437 		RST.LIS	10h
040A82                   1438 	vdu 101
040A82 3E 65             1438 		LD	A, function
040A84 49 D7             1438 		RST.LIS	10h
040A86 DD 7E 00          1439 	ld a,(ix+0)
040A89                   1440 	vdu_a
040A89 49 D7             1440 		RST.LIS	10h
040A8B DD 7E 01          1441 	ld a,(ix+1)
040A8E                   1442 	vdu_a
040A8E 49 D7             1442 		RST.LIS	10h
040A90 FD 7E 00          1443 	ld a,(iy+0)
040A93                   1444 	vdu_a
040A93 49 D7             1444 		RST.LIS	10h
040A95 FD 7E 01          1445 	ld a,(iy+1)
040A98                   1446 	vdu_a
040A98 49 D7             1446 		RST.LIS	10h
040A9A                   1447 
040A9A C9                1448 	ret
040A9B                   1449 
040A9B                   1450 fn_calc_pixel_coords:
040A9B 11 00 00 00       1451 	ld de,$000000 ; reset deu
040A9F                   1452 
040A9F                   1453 	; calculate coordinates x of the resized pixel
040A9F 21 E7 12 04       1454 	ld hl,xpix
040AA3 5E                1455 	ld e,(hl) ; E = xpix
040AA4 21 E9 12 04       1456 	ld hl,pixel_width
040AA8 56                1457 	ld d,(hl) ; D = pixel_width
040AA9 D5                1458 	push de
040AAA E1                1459 	pop hl ; HL = DE
040AAB ED 6C             1460 	mlt hl ; HL = xpix * pixel_width
040AAD DD 21 DF 12 04    1461 	ld ix,xs1
040AB2 DD 5E 00          1462 	ld e,(ix+0)
040AB5 DD 56 01          1463 	ld d,(ix+1)
040AB8 13                1464 	inc de ; DE = xs1 + 1
040AB9 19                1465 	add hl,de ; HL = (xpix * pixel_width) + xs1 + 1
040ABA FD 21 D7 12 04    1466 	ld iy,x1
040ABF FD 75 00          1467 	ld (iy+0),l
040AC2 FD 74 01          1468 	ld (iy+1),h ; x1 = (xpix * pixel_width) + xs1 + 1
040AC5 E5                1469 	push hl
040AC6 21 E9 12 04       1470 	ld hl,pixel_width
040ACA 16 00             1471 	ld d,0
040ACC 5E                1472 	ld e,(hl)
040ACD E1                1473 	pop hl
040ACE 19                1474 	add hl,de
040ACF 2B                1475 	dec hl
040AD0 FD 21 DB 12 04    1476 	ld iy,x2
040AD5 FD 75 00          1477 	ld (iy+0),l
040AD8 FD 74 01          1478 	ld (iy+1),h ; x2 = x1 + pixel_width - 1
040ADB                   1479 
040ADB 11 00 00 00       1480 	ld de,$000000 ; reset deu
040ADF                   1481 
040ADF                   1482 	; calculate coordinates y of the resized pixel
040ADF 21 E8 12 04       1483 	ld hl,ypix
040AE3 5E                1484 	ld e,(hl) ; E = ypix
040AE4 21 E9 12 04       1485 	ld hl,pixel_width
040AE8 56                1486 	ld d,(hl) ; D = pixel_width
040AE9 D5                1487 	push de
040AEA E1                1488 	pop hl ; HL = DE
040AEB ED 6C             1489 	mlt hl ; HL = ypix * pixel_width
040AED DD 21 E1 12 04    1490 	ld ix,ys1
040AF2 DD 5E 00          1491 	ld e,(ix+0)
040AF5 DD 56 01          1492 	ld d,(ix+1) ; ys1 = ypix * pixel_width
040AF8 13                1493 	inc de ; DE = ys1 + 1
040AF9 19                1494 	add hl,de ; HL = (ypix * pixel_width) + ys1 + 1
040AFA FD 21 D9 12 04    1495 	ld iy,y1
040AFF FD 75 00          1496 	ld (iy+0),l
040B02 FD 74 01          1497 	ld (iy+1),h ; y1 = (ypix * pixel_width) + ys1 + 1
040B05 E5                1498 	push hl
040B06 21 E9 12 04       1499 	ld hl,pixel_width
040B0A 16 00             1500 	ld d,0
040B0C 5E                1501 	ld e,(hl)
040B0D E1                1502 	pop hl
040B0E 19                1503 	add hl,de
040B0F 2B                1504 	dec hl
040B10 FD 21 DD 12 04    1505 	ld iy,y2
040B15 FD 75 00          1506 	ld (iy+0),l
040B18 FD 74 01          1507 	ld (iy+1),h ; y2 = y1 + pixel_width - 1
040B1B                   1508 
040B1B C9                1509 	ret
040B1C                   1510 
040B1C                   1511 ; draw the resized pixel border, with its color
040B1C                   1512 fn_draw_pixel_with_border:
040B1C CD 30 0B 04       1513 	call fn_draw_pixel_without_border
040B20                   1514 
040B20                   1515 	; set graphics pen
040B20                   1516 	vdu 18
040B20 3E 12             1516 		LD	A, function
040B22 49 D7             1516 		RST.LIS	10h
040B24                   1517 	vdu 0
040B24 3E 00             1517 		LD	A, function
040B26 49 D7             1517 		RST.LIS	10h
040B28                   1518 	vdu COLOR_GREY ; grey pen
040B28 3E 07             1518 		LD	A, function
040B2A 49 D7             1518 		RST.LIS	10h
040B2C                   1519 
040B2C                   1520 	; draw the sprite's border rectangle
040B2C C3 8F 09 04       1521 	jp fn_rect
040B30                   1522 
040B30                   1523 ; draw the resized pixel color
040B30                   1524 fn_draw_pixel_without_border:
040B30 CD 9B 0A 04       1525 	call fn_calc_pixel_coords
040B34                   1526 
040B34                   1527 	; set graphics pen
040B34                   1528 	vdu 18
040B34 3E 12             1528 		LD	A, function
040B36 49 D7             1528 		RST.LIS	10h
040B38                   1529 	vdu 0
040B38 3E 00             1529 		LD	A, function
040B3A 49 D7             1529 		RST.LIS	10h
040B3C CD 46 0B 04       1530 	call fn_get_pixel_color
040B40                   1531 	vdu_a
040B40 49 D7             1531 		RST.LIS	10h
040B42                   1532 
040B42                   1533 	; draw the sprite's color rectangle
040B42 C3 4E 0A 04       1534 	jp fn_rectf
040B46                   1535 
040B46                   1536 ; get pixel color value in the sprite buffer
040B46                   1537 ; returns A: pixel color (0-63)
040B46                   1538 fn_get_pixel_color:
040B46 11 00 00 00       1539 	ld de,$000000 ; reset deu
040B4A                   1540 
040B4A                   1541 	; calculate the offset to add to the address
040B4A 21 E8 12 04       1542 	ld hl,ypix
040B4E 5E                1543 	ld e,(hl) ; E = ypix
040B4F 21 EA 12 04       1544 	ld hl,spr_size
040B53 56                1545 	ld d,(hl) ; D = sprsize
040B54 D5                1546 	push de
040B55 E1                1547 	pop hl
040B56 ED 6C             1548 	mlt hl ; HL = ypix * sprsize
040B58 E5                1549 	push hl
040B59 21 E7 12 04       1550 	ld hl,xpix
040B5D 5E                1551 	ld e,(hl)
040B5E 16 00             1552 	ld d,0
040B60 E1                1553 	pop hl
040B61 19                1554 	add hl,de ; HL = (ypix * sprsize) + xpix
040B62                   1555 
040B62 11 C1 13 04       1556 	ld de,current_frame
040B66 1A                1557 	ld a,(de)
040B67 FE 00             1558 	cp 0
040B69 28 16             1559 	jr z,gpc_end_loop
040B6B                   1560 
040B6B 47                1561 	ld b,a
040B6C E5                1562 	push hl
040B6D 11 00 00 00       1563 	ld de,$000000
040B71 21 EA 12 04       1564 	ld hl,spr_size
040B75 5E                1565 	ld e,(hl)
040B76 56                1566 	ld d,(hl)
040B77 D5                1567 	push de
040B78 E1                1568 	pop hl
040B79 ED 6C             1569 	mlt hl
040B7B E5                1570 	push hl
040B7C D1                1571 	pop de ; DE = sprsize²
040B7D E1                1572 	pop hl
040B7E                   1573 
040B7E                   1574 gpc_loop:
040B7E 19                1575 	add hl,de
040B7F 10 FD             1576 	djnz gpc_loop
040B81                   1577 
040B81                   1578 gpc_end_loop:
040B81                   1579 	; add the offset to the address
040B81 11 CA 13 04       1580 	ld de,sprite_buffer
040B85 19                1581 	add hl,de ; HL = sprite_buffer + ((ypix * sprsize) + xpix)
040B86                   1582 
040B86                   1583 	; get pixel color value
040B86 7E                1584 	ld a,(hl)
040B87                   1585 
040B87 C9                1586 	ret
040B88                   1587 
040B88                   1588 ; get pixel color value in the sprite buffer
040B88                   1589 ; A: pixel color (0-63)
040B88                   1590 fn_set_pixel_color:
040B88 11 00 00 00       1591 	ld de,$000000 ; reset deu
040B8C                   1592 
040B8C                   1593 	; calculate the offset to add to the address
040B8C 21 E8 12 04       1594 	ld hl,ypix
040B90 5E                1595 	ld e,(hl) ; E = ypix
040B91 21 EA 12 04       1596 	ld hl,spr_size
040B95 56                1597 	ld d,(hl) ; D = sprsize
040B96 D5                1598 	push de
040B97 E1                1599 	pop hl
040B98 ED 6C             1600 	mlt hl ; HL = ypix * sprsize
040B9A E5                1601 	push hl
040B9B 21 E7 12 04       1602 	ld hl,xpix
040B9F 5E                1603 	ld e,(hl)
040BA0 16 00             1604 	ld d,0
040BA2 E1                1605 	pop hl
040BA3 19                1606 	add hl,de ; HL = (ypix * sprsize) + xpix
040BA4 F5                1607 	push af
040BA5                   1608 
040BA5 11 C1 13 04       1609 	ld de,current_frame
040BA9 1A                1610 	ld a,(de)
040BAA FE 00             1611 	cp 0
040BAC 28 16             1612 	jr z,spc_end_loop
040BAE                   1613 
040BAE 47                1614 	ld b,a
040BAF E5                1615 	push hl
040BB0 11 00 00 00       1616 	ld de,$000000
040BB4 21 EA 12 04       1617 	ld hl,spr_size
040BB8 5E                1618 	ld e,(hl)
040BB9 56                1619 	ld d,(hl)
040BBA D5                1620 	push de
040BBB E1                1621 	pop hl
040BBC ED 6C             1622 	mlt hl
040BBE E5                1623 	push hl
040BBF D1                1624 	pop de ; DE = sprsize²
040BC0 E1                1625 	pop hl
040BC1                   1626 
040BC1                   1627 spc_loop:
040BC1 19                1628 	add hl,de
040BC2 10 FD             1629 	djnz spc_loop
040BC4                   1630 
040BC4                   1631 spc_end_loop:
040BC4                   1632 
040BC4                   1633 	; add the offset to the address
040BC4 11 CA 13 04       1634 	ld de,sprite_buffer
040BC8 19                1635 	add hl,de ; HL = sprite_buffer + ((ypix * sprsize) + xpix)
040BC9                   1636 
040BC9                   1637 	; set pixel color value
040BC9 F1                1638 	pop af
040BCA 77                1639 	ld (hl),a
040BCB                   1640 
040BCB C9                1641 	ret
040BCC                   1642 
040BCC                   1643 fn_move_up:
040BCC 21 E8 12 04       1644 	ld hl,ypix
040BD0 35                1645 	dec (hl)
040BD1 C9                1646 	ret
040BD2                   1647 
040BD2                   1648 fn_move_down:
040BD2 21 E8 12 04       1649 	ld hl,ypix
040BD6 34                1650 	inc (hl)
040BD7 C9                1651 	ret
040BD8                   1652 
040BD8                   1653 fn_move_left:
040BD8 21 E7 12 04       1654 	ld hl,xpix
040BDC 35                1655 	dec (hl)
040BDD C9                1656 	ret
040BDE                   1657 
040BDE                   1658 fn_move_right:
040BDE 21 E7 12 04       1659 	ld hl,xpix
040BE2 34                1660 	inc (hl)
040BE3 C9                1661 	ret
040BE4                   1662 
040BE4                   1663 ; draw palette color whit border and selection
040BE4                   1664 ; C = color number (0-63)
040BE4                   1665 fn_draw_palette_with_border:
040BE4 C5                1666 	push bc
040BE5                   1667 
040BE5                   1668 	; choose palette color
040BE5                   1669 	vdu 18
040BE5 3E 12             1669 		LD	A, function
040BE7 49 D7             1669 		RST.LIS	10h
040BE9                   1670 	vdu 0
040BE9 3E 00             1670 		LD	A, function
040BEB 49 D7             1670 		RST.LIS	10h
040BED C1                1671 	pop bc
040BEE C5                1672 	push bc
040BEF 79                1673 	ld a,c
040BF0                   1674 	vdu_a
040BF0 49 D7             1674 		RST.LIS	10h
040BF2                   1675 
040BF2                   1676 	; store coordinates for a palette square
040BF2 DD 21 D7 12 04    1677 	ld ix,x1
040BF7 E1                1678 	pop hl
040BF8 E5                1679 	push hl
040BF9 26 05             1680 	ld h,5
040BFB ED 6C             1681 	mlt hl
040BFD E5                1682 	push hl
040BFE DD 75 00          1683 	ld (ix+0),l
040C01 DD 74 01          1684 	ld (ix+1),h
040C04                   1685 
040C04 DD 21 D9 12 04    1686 	ld ix,y1
040C09 21 00 00 00       1687 	ld hl,0
040C0D DD 75 00          1688 	ld (ix+0),l
040C10 DD 74 01          1689 	ld (ix+1),h
040C13                   1690 
040C13 DD 21 DB 12 04    1691 	ld ix,x2
040C18 E1                1692 	pop hl
040C19 11 04 00 00       1693 	ld de,4
040C1D 19                1694 	add hl,de
040C1E DD 75 00          1695 	ld (ix+0),l
040C21 DD 74 01          1696 	ld (ix+1),h
040C24                   1697 
040C24 DD 21 DD 12 04    1698 	ld ix,y2
040C29 21 0A 00 00       1699 	ld hl,10
040C2D DD 75 00          1700 	ld (ix+0),l
040C30 DD 74 01          1701 	ld (ix+1),h
040C33                   1702 
040C33                   1703 	; draw the palette filled square
040C33 CD 4E 0A 04       1704 	call fn_rectf
040C37                   1705 
040C37                   1706 	; choose grey color
040C37                   1707 	vdu 18
040C37 3E 12             1707 		LD	A, function
040C39 49 D7             1707 		RST.LIS	10h
040C3B                   1708 	vdu 0
040C3B 3E 00             1708 		LD	A, function
040C3D 49 D7             1708 		RST.LIS	10h
040C3F 3E 07             1709 	ld a,COLOR_GREY
040C41                   1710 	vdu_a
040C41 49 D7             1710 		RST.LIS	10h
040C43                   1711 
040C43                   1712 	; draw the palette square border
040C43 CD 8F 09 04       1713 	call fn_rect
040C47                   1714 
040C47                   1715 	; next color ?
040C47 C1                1716 	pop bc
040C48                   1717 
040C48 C9                1718 	ret
040C49                   1719 
040C49                   1720 ; draw palette color whitout border and selection
040C49                   1721 ; C = color number (0-63)
040C49                   1722 fn_draw_palette_without_border:
040C49 C5                1723 	push bc
040C4A                   1724 
040C4A                   1725 	; choose palette color
040C4A                   1726 	vdu 18
040C4A 3E 12             1726 		LD	A, function
040C4C 49 D7             1726 		RST.LIS	10h
040C4E                   1727 	vdu 0
040C4E 3E 00             1727 		LD	A, function
040C50 49 D7             1727 		RST.LIS	10h
040C52 C1                1728 	pop bc
040C53 C5                1729 	push bc
040C54 79                1730 	ld a,c
040C55                   1731 	vdu_a
040C55 49 D7             1731 		RST.LIS	10h
040C57                   1732 
040C57                   1733 	; store coordinates for a palette square
040C57 DD 21 D7 12 04    1734 	ld ix,x1
040C5C E1                1735 	pop hl
040C5D E5                1736 	push hl
040C5E 26 05             1737 	ld h,5
040C60 ED 6C             1738 	mlt hl
040C62 E5                1739 	push hl
040C63 DD 75 00          1740 	ld (ix+0),l
040C66 DD 74 01          1741 	ld (ix+1),h
040C69                   1742 
040C69 DD 21 D9 12 04    1743 	ld ix,y1
040C6E 21 00 00 00       1744 	ld hl,0
040C72 DD 75 00          1745 	ld (ix+0),l
040C75 DD 74 01          1746 	ld (ix+1),h
040C78                   1747 
040C78 DD 21 DB 12 04    1748 	ld ix,x2
040C7D E1                1749 	pop hl
040C7E 11 04 00 00       1750 	ld de,4
040C82 19                1751 	add hl,de
040C83 DD 75 00          1752 	ld (ix+0),l
040C86 DD 74 01          1753 	ld (ix+1),h
040C89                   1754 
040C89 DD 21 DD 12 04    1755 	ld ix,y2
040C8E 21 0A 00 00       1756 	ld hl,10
040C92 DD 75 00          1757 	ld (ix+0),l
040C95 DD 74 01          1758 	ld (ix+1),h
040C98                   1759 
040C98                   1760 	; draw the palette filled square
040C98 CD 4E 0A 04       1761 	call fn_rectf
040C9C                   1762 
040C9C C1                1763 	pop bc
040C9D                   1764 
040C9D C9                1765 	ret
040C9E                   1766 
040C9E                   1767 ; get an ascii key value
040C9E                   1768 fn_input_key:
040C9E C5                1769 	push bc
040C9F                   1770 	moscall mos_getkey
040C9F 3E 00             1770 		LD	A, function
040CA1 49 CF             1770 		RST.LIS	08h
040CA3 C1                1771 	pop bc
040CA4 C9                1772 	ret
040CA5                   1773 
040CA5                   1774 ; input a text of 8 chars
040CA5                   1775 fn_input_text8:
040CA5                   1776 	; locate x,y
040CA5                   1777 	vdu 31
040CA5 3E 1F             1777 		LD	A, function
040CA7 49 D7             1777 		RST.LIS	10h
040CA9                   1778 	vdu FILENAME_X
040CA9 3E 07             1778 		LD	A, function
040CAB 49 D7             1778 		RST.LIS	10h
040CAD                   1779 	vdu FILENAME_Y
040CAD 3E 18             1779 		LD	A, function
040CAF 49 D7             1779 		RST.LIS	10h
040CB1                   1780 
040CB1                   1781 	; print text
040CB1 21 57 13 04       1782 	ld hl,filename_label
040CB5 01 00 00 00       1783 	ld bc,0
040CB9 AF                1784 	xor a
040CBA 49 DF             1785 	rst.lis $18
040CBC                   1786 
040CBC                   1787 	; show cursor
040CBC                   1788 	vdu 23
040CBC 3E 17             1788 		LD	A, function
040CBE 49 D7             1788 		RST.LIS	10h
040CC0                   1789 	vdu 1
040CC0 3E 01             1789 		LD	A, function
040CC2 49 D7             1789 		RST.LIS	10h
040CC4                   1790 	vdu 1
040CC4 3E 01             1790 		LD	A, function
040CC6 49 D7             1790 		RST.LIS	10h
040CC8                   1791 
040CC8 0E 00             1792 	ld c,0
040CCA                   1793 
040CCA                   1794 it8_loop:
040CCA                   1795 	; get ascii key
040CCA CD 9E 0C 04       1796 	call fn_input_key
040CCE B7                1797 	or a
040CCF CA CA 0C 04       1798 	jp z,it8_loop
040CD3                   1799 
040CD3 FE 2E             1800 	cp '.'
040CD5 CA 1F 0D 04       1801 	jp z,it8l_add_char
040CD9                   1802 
040CD9 FE 2D             1803 	cp '-'
040CDB CA 1F 0D 04       1804 	jp z,it8l_add_char
040CDF                   1805 
040CDF FE 5F             1806 	cp '_'
040CE1 CA 1F 0D 04       1807 	jp z,it8l_add_char
040CE5                   1808 
040CE5 FE 7F             1809 	cp 127
040CE7 CA 53 0D 04       1810 	jp z,it8l_backspace
040CEB                   1811 
040CEB FE 0D             1812 	cp 13
040CED CA 82 0D 04       1813 	jp z,it8l_return
040CF1                   1814 
040CF1 FE 30             1815 	cp '0'
040CF3 DA CA 0C 04       1816 	jp c,it8_loop
040CF7                   1817 
040CF7 16 39             1818 	ld d,'9'
040CF9 14                1819 	inc d
040CFA BA                1820 	cp d
040CFB DA 1F 0D 04       1821 	jp c,it8l_add_char
040CFF                   1822 
040CFF FE 41             1823 	cp 'A'
040D01 DA CA 0C 04       1824 	jp c,it8_loop
040D05                   1825 
040D05 16 5A             1826 	ld d,'Z'
040D07 14                1827 	inc d
040D08 BA                1828 	cp d
040D09 DA 1F 0D 04       1829 	jp c,it8l_add_char
040D0D                   1830 
040D0D FE 61             1831 	cp 'a'
040D0F DA CA 0C 04       1832 	jp c,it8_loop
040D13                   1833 
040D13 16 7A             1834 	ld d,'z'
040D15 14                1835 	inc d
040D16 BA                1836 	cp d
040D17 DA 1F 0D 04       1837 	jp c,it8l_add_char
040D1B                   1838 
040D1B C3 CA 0C 04       1839 	jp it8_loop
040D1F                   1840 
040D1F                   1841 it8l_add_char:
040D1F F5                1842 	push af
040D20 79                1843 	ld a,c
040D21 FE 0C             1844 	cp 12
040D23 38 05             1845 	jr c,it8l_poke_char
040D25 F1                1846 	pop af
040D26 C3 CA 0C 04       1847 	jp it8_loop
040D2A                   1848 
040D2A                   1849 it8l_poke_char:
040D2A F1                1850 	pop af
040D2B 21 61 13 04       1851 	ld hl,filename
040D2F 06 00             1852 	ld b,0
040D31 09                1853 	add hl,bc
040D32 77                1854 	ld (hl),a
040D33 0C                1855 	inc c
040D34 F5                1856 	push af
040D35 C5                1857 	push bc
040D36                   1858 
040D36                   1859 	; locate x,y
040D36                   1860 	vdu 31
040D36 3E 1F             1860 		LD	A, function
040D38 49 D7             1860 		RST.LIS	10h
040D3A                   1861 	vdu FILENAME_X+10
040D3A 3E 11             1861 		LD	A, function
040D3C 49 D7             1861 		RST.LIS	10h
040D3E                   1862 	vdu FILENAME_Y
040D3E 3E 18             1862 		LD	A, function
040D40 49 D7             1862 		RST.LIS	10h
040D42                   1863 
040D42                   1864 	; print text
040D42 21 61 13 04       1865 	ld hl,filename
040D46 01 00 00 00       1866 	ld bc,0
040D4A AF                1867 	xor a
040D4B 49 DF             1868 	rst.lis $18
040D4D                   1869 
040D4D C1                1870 	pop bc
040D4E F1                1871 	pop af
040D4F                   1872 
040D4F C3 CA 0C 04       1873 	jp it8_loop
040D53                   1874 
040D53                   1875 it8l_backspace:
040D53 79                1876 	ld a,c
040D54 FE 00             1877 	cp 0
040D56 CA CA 0C 04       1878 	jp z,it8_loop
040D5A                   1879 
040D5A                   1880 	; delete a character of the filename
040D5A 21 61 13 04       1881 	ld hl,filename
040D5E 06 00             1882 	ld b,0
040D60 09                1883 	add hl,bc
040D61 AF                1884 	xor a
040D62 77                1885 	ld (hl),a
040D63 0D                1886 	dec c
040D64 C5                1887 	push bc
040D65                   1888 
040D65                   1889 	; locate x,y
040D65                   1890 	vdu 31
040D65 3E 1F             1890 		LD	A, function
040D67 49 D7             1890 		RST.LIS	10h
040D69 3E 11             1891 	ld a,FILENAME_X+10
040D6B 81                1892 	add a,c
040D6C                   1893 	vdu_a
040D6C 49 D7             1893 		RST.LIS	10h
040D6E                   1894 	vdu FILENAME_Y
040D6E 3E 18             1894 		LD	A, function
040D70 49 D7             1894 		RST.LIS	10h
040D72                   1895 
040D72                   1896 	; print text
040D72 21 79 13 04       1897 	ld hl,spacechar
040D76 01 00 00 00       1898 	ld bc,0
040D7A AF                1899 	xor a
040D7B 49 DF             1900 	rst.lis $18
040D7D                   1901 
040D7D C1                1902 	pop bc
040D7E C3 CA 0C 04       1903 	jp it8_loop
040D82                   1904 
040D82                   1905 it8l_return:
040D82                   1906 	; locate x,y
040D82                   1907 	vdu 31
040D82 3E 1F             1907 		LD	A, function
040D84 49 D7             1907 		RST.LIS	10h
040D86                   1908 	vdu FILENAME_X
040D86 3E 07             1908 		LD	A, function
040D88 49 D7             1908 		RST.LIS	10h
040D8A                   1909 	vdu FILENAME_Y
040D8A 3E 18             1909 		LD	A, function
040D8C 49 D7             1909 		RST.LIS	10h
040D8E                   1910 
040D8E                   1911 	; print text
040D8E 21 7B 13 04       1912 	ld hl,void_filename
040D92 01 00 00 00       1913 	ld bc,0
040D96 AF                1914 	xor a
040D97 49 DF             1915 	rst.lis $18
040D99                   1916 
040D99                   1917 	; hide cursor
040D99                   1918 	vdu 23
040D99 3E 17             1918 		LD	A, function
040D9B 49 D7             1918 		RST.LIS	10h
040D9D                   1919 	vdu 1
040D9D 3E 01             1919 		LD	A, function
040D9F 49 D7             1919 		RST.LIS	10h
040DA1                   1920 	vdu 0
040DA1 3E 00             1920 		LD	A, function
040DA3 49 D7             1920 		RST.LIS	10h
040DA5                   1921 
040DA5 C9                1922 	ret
040DA6                   1923 
040DA6                   1924 ; load a sprite, giving its name
040DA6                   1925 fn_load_sprite:
040DA6                   1926 	; clear filename
040DA6 21 61 13 04       1927 	ld hl,filename
040DAA 06 0C             1928 	ld b,12
040DAC AF                1929 	xor a
040DAD                   1930 
040DAD                   1931 ls_clear_filename:
040DAD 77                1932 	ld (hl),a
040DAE 23                1933 	inc hl
040DAF 10 FC             1934 	djnz ls_clear_filename
040DB1                   1935 
040DB1                   1936 	; get filename
040DB1 CD A5 0C 04       1937 	call fn_input_text8
040DB5                   1938 
040DB5                   1939 	; set path to home
040DB5 21 6E 13 04       1940 	ld hl,sprite_path
040DB9                   1941 	moscall mos_cd
040DB9 3E 03             1941 		LD	A, function
040DBB 49 CF             1941 		RST.LIS	08h
040DBD                   1942 
040DBD                   1943 	; exit on error
040DBD FE 00             1944 	cp 0
040DBF C2 8A 0E 04       1945 	jp nz,ls_folder_error
040DC3                   1946 
040DC3                   1947 	; open the file for read
040DC3 21 61 13 04       1948 	ld hl,filename
040DC7 0E 01             1949 	ld c,fa_open_existing|fa_read
040DC9                   1950 	moscall mos_fopen
040DC9 3E 0A             1950 		LD	A, function
040DCB 49 CF             1950 		RST.LIS	08h
040DCD                   1951 
040DCD                   1952 	; exit on error
040DCD FE 00             1953 	cp 0
040DCF CA B8 0E 04       1954 	jp z,ls_file_error
040DD3                   1955 
040DD3                   1956 	; filehandle -> C
040DD3 4F                1957 	ld c,a
040DD4                   1958 
040DD4                   1959 	; get colors count
040DD4                   1960 	moscall mos_fgetc
040DD4 3E 0C             1960 		LD	A, function
040DD6 49 CF             1960 		RST.LIS	08h
040DD8 DA 65 0E 04       1961 	jp c,ls_close_error
040DDC                   1962 
040DDC FE 40             1963 	cp MAX_COLORS
040DDE C2 65 0E 04       1964 	jp nz,ls_close_error
040DE2                   1965 
040DE2                   1966 	; store colors count
040DE2 21 C0 13 04       1967 	ld hl,colors_count
040DE6 77                1968 	ld (hl),a
040DE7                   1969 
040DE7                   1970 	; get frames count
040DE7                   1971 	moscall mos_fgetc
040DE7 3E 0C             1971 		LD	A, function
040DE9 49 CF             1971 		RST.LIS	08h
040DEB DA 65 0E 04       1972 	jp c,ls_close_error
040DEF                   1973 
040DEF                   1974 	; store frames count
040DEF 21 C2 13 04       1975 	ld hl,frames_count
040DF3 77                1976 	ld (hl),a
040DF4 21 C1 13 04       1977 	ld hl,current_frame
040DF8 3D                1978 	dec a
040DF9 77                1979 	ld (hl),a
040DFA                   1980 
040DFA                   1981 	; get sprite size
040DFA                   1982 	moscall mos_fgetc
040DFA 3E 0C             1982 		LD	A, function
040DFC 49 CF             1982 		RST.LIS	08h
040DFE DA 65 0E 04       1983 	jp c,ls_close_error
040E02                   1984 
040E02                   1985 	; store sprite size
040E02 21 EA 12 04       1986 	ld hl,spr_size
040E06 77                1987 	ld (hl),a
040E07                   1988 
040E07                   1989 	; set 4x4 pixel width
040E07 FE 04             1990 	cp SPR44
040E09 20 09             1991 	jr nz,ls_next1
040E0B                   1992 
040E0B 21 E9 12 04       1993 	ld hl,pixel_width
040E0F 06 20             1994 	ld b,SPR44_width
040E11 70                1995 	ld (hl),b
040E12 18 21             1996 	jr ls_next4
040E14                   1997 
040E14                   1998 ls_next1:
040E14                   1999 	; set 8x8 pixel width
040E14 FE 08             2000 	cp SPR88
040E16 20 09             2001 	jr nz,ls_next2
040E18                   2002 
040E18 21 E9 12 04       2003 	ld hl,pixel_width
040E1C 06 10             2004 	ld b,SPR88_width
040E1E 70                2005 	ld (hl),b
040E1F 18 14             2006 	jr ls_next4
040E21                   2007 
040E21                   2008 ls_next2:
040E21                   2009 
040E21                   2010 	; set 16x16 pixel width
040E21 FE 10             2011 	cp SPR1616
040E23 20 09             2012 	jr nz,ls_next3
040E25                   2013 
040E25 21 E9 12 04       2014 	ld hl,pixel_width
040E29 06 08             2015 	ld b,SPR1616_width
040E2B 70                2016 	ld (hl),b
040E2C 18 07             2017 	jr ls_next4
040E2E                   2018 
040E2E                   2019 ls_next3:
040E2E                   2020 
040E2E 21 E9 12 04       2021 	ld hl,pixel_width
040E32 06 04             2022 	ld b,SPR3232_width
040E34 70                2023 	ld (hl),b
040E35                   2024 
040E35                   2025 ls_next4:
040E35                   2026 
040E35 6F                2027 	ld l,a
040E36 67                2028 	ld h,a
040E37 ED 6C             2029 	mlt hl ; HL = sprite length
040E39 E5                2030 	push hl
040E3A                   2031 
040E3A                   2032 	; get frames count
040E3A 21 C1 13 04       2033 	ld hl,current_frame
040E3E 46                2034 	ld b,(hl)
040E3F                   2035 
040E3F E1                2036 	pop hl
040E40                   2037 
040E40 78                2038 	ld a,b
040E41 FE 00             2039 	cp 0
040E43 28 07             2040 	jr z,ls_read_data
040E45                   2041 
040E45                   2042 	; de = size²
040E45 11 00 04 00       2043 	ld de,ONE_FRAME_BUFFER_SIZE
040E49                   2044 ls_add_length:
040E49 19                2045 	add hl,de
040E4A 10 FD             2046 	djnz ls_add_length
040E4C                   2047 
040E4C                   2048 ls_read_data:
040E4C E5                2049 	push hl
040E4D E5                2050 	push hl
040E4E D1                2051 	pop de
040E4F 7B                2052 	ld a,e
040E50 21 CA 13 04       2053 	ld hl,sprite_buffer
040E54                   2054 	moscall mos_fread
040E54 3E 1A             2054 		LD	A, function
040E56 49 CF             2054 		RST.LIS	08h
040E58 E1                2055 	pop hl
040E59 7C                2056 	ld a,h
040E5A BA                2057 	cp d
040E5B 20 08             2058 	jr nz,ls_close_error
040E5D 7D                2059 	ld a,l
040E5E BB                2060 	cp e
040E5F 20 04             2061 	jr nz,ls_close_error
040E61 C3 92 0E 04       2062 	jp ls_close
040E65                   2063 
040E65                   2064 ls_close_error:
040E65 C5                2065 	push bc
040E66                   2066 
040E66                   2067 	; read error
040E66 CD 0D 11 04       2068 	call fn_print_file_error
040E6A                   2069 
040E6A C1                2070 	pop bc
040E6B                   2071 
040E6B                   2072 	; close the file
040E6B                   2073 	moscall mos_fclose
040E6B 3E 0B             2073 		LD	A, function
040E6D 49 CF             2073 		RST.LIS	08h
040E6F                   2074 
040E6F                   2075 	; set path to home
040E6F 21 76 13 04       2076 	ld hl,back_path
040E73                   2077 	moscall mos_cd
040E73 3E 03             2077 		LD	A, function
040E75 49 CF             2077 		RST.LIS	08h
040E77                   2078 
040E77                   2079 	; exit on error
040E77 FE 00             2080 	cp 0
040E79 C2 8A 0E 04       2081 	jp nz,ls_folder_error
040E7D                   2082 
040E7D                   2083 
040E7D                   2084 	; reset current frame and coordinates of the drawing pixel
040E7D 21 E7 12 04       2085 	ld hl,xpix
040E81 AF                2086 	xor a
040E82 77                2087 	ld (hl),a
040E83 21 E8 12 04       2088 	ld hl,ypix
040E87 77                2089 	ld (hl),a
040E88 18 25             2090 	jr ls_exit
040E8A                   2091 
040E8A                   2092 ls_folder_error:
040E8A                   2093 	; write error
040E8A CD 44 11 04       2094 	call fn_print_folder_error
040E8E C3 AF 0E 04       2095 	jp ls_exit
040E92                   2096 
040E92                   2097 ls_close:
040E92                   2098 	; close the file
040E92                   2099 	moscall mos_fclose
040E92 3E 0B             2099 		LD	A, function
040E94 49 CF             2099 		RST.LIS	08h
040E96                   2100 
040E96                   2101 	; set path to home
040E96 21 76 13 04       2102 	ld hl,back_path
040E9A                   2103 	moscall mos_cd
040E9A 3E 03             2103 		LD	A, function
040E9C 49 CF             2103 		RST.LIS	08h
040E9E                   2104 
040E9E                   2105 	; exit on error
040E9E FE 00             2106 	cp 0
040EA0 C2 8A 0E 04       2107 	jp nz,ls_folder_error
040EA4                   2108 
040EA4                   2109 	; reset current frame and coordinates of the drawing pixel
040EA4 21 E7 12 04       2110 	ld hl,xpix
040EA8 AF                2111 	xor a
040EA9 77                2112 	ld (hl),a
040EAA 21 E8 12 04       2113 	ld hl,ypix
040EAE 77                2114 	ld (hl),a
040EAF                   2115 
040EAF                   2116 ls_exit:
040EAF CD 25 12 04       2117 	call fn_show_spr_descr
040EB3 CD E0 11 04       2118 	call fn_change_frames_count
040EB7 C9                2119 	ret
040EB8                   2120 
040EB8                   2121 ls_file_error:
040EB8 CD 0D 11 04       2122 	call fn_print_file_error
040EBC                   2123 
040EBC                   2124 	; set path to home
040EBC 21 76 13 04       2125 	ld hl,back_path
040EC0                   2126 	moscall mos_cd
040EC0 3E 03             2126 		LD	A, function
040EC2 49 CF             2126 		RST.LIS	08h
040EC4                   2127 
040EC4                   2128 	; exit on error
040EC4 FE 00             2129 	cp 0
040EC6 C2 8A 0E 04       2130 	jp nz,ls_folder_error
040ECA                   2131 
040ECA C9                2132 	ret
040ECB                   2133 
040ECB                   2134 ; save a sprite, giving its name
040ECB                   2135 fn_save_sprite:
040ECB                   2136 	; clear filename
040ECB 21 61 13 04       2137 	ld hl,filename
040ECF 06 0C             2138 	ld b,12
040ED1 AF                2139 	xor a
040ED2                   2140 
040ED2                   2141 ss_clear_filename:
040ED2 77                2142 	ld (hl),a
040ED3 23                2143 	inc hl
040ED4 10 FC             2144 	djnz ss_clear_filename
040ED6                   2145 
040ED6                   2146 	; get filename
040ED6 CD A5 0C 04       2147 	call fn_input_text8
040EDA                   2148 
040EDA                   2149 	; set path to sprite path
040EDA 21 6E 13 04       2150 	ld hl,sprite_path
040EDE                   2151 	moscall mos_cd
040EDE 3E 03             2151 		LD	A, function
040EE0 49 CF             2151 		RST.LIS	08h
040EE2                   2152 
040EE2                   2153 	; create it on error
040EE2 FE 00             2154 	cp 0
040EE4 F5                2155 	push af
040EE5 C4 BA 12 04       2156 	call nz,fn_create_sprite_folder
040EE9 F1                2157 	pop af
040EEA 28 08             2158 	jr z,ss_next
040EEC                   2159 
040EEC                   2160 	; set path to sprite path
040EEC 21 6E 13 04       2161 	ld hl,sprite_path
040EF0                   2162 	moscall mos_cd
040EF0 3E 03             2162 		LD	A, function
040EF2 49 CF             2162 		RST.LIS	08h
040EF4                   2163 
040EF4                   2164 ss_next:
040EF4                   2165 
040EF4                   2166 	; exit on error
040EF4 FE 00             2167 	cp 0
040EF6 C2 82 0F 04       2168 	jp nz,ss_folder_error
040EFA                   2169 
040EFA                   2170 	; open the file for write
040EFA 21 61 13 04       2171 	ld hl,filename
040EFE 0E 0A             2172 	ld c,fa_create_always|fa_write
040F00                   2173 	moscall mos_fopen
040F00 3E 0A             2173 		LD	A, function
040F02 49 CF             2173 		RST.LIS	08h
040F04                   2174 
040F04                   2175 	; exit on error
040F04 FE 00             2176 	cp 0
040F06 CA B3 0F 04       2177 	jp z,ss_file_error
040F0A                   2178 
040F0A                   2179 	; filehandle -> C
040F0A 4F                2180 	ld c,a
040F0B                   2181 
040F0B                   2182 	; store colors count in the file
040F0B 06 40             2183 	ld b,MAX_COLORS
040F0D                   2184 	moscall mos_fputc
040F0D 3E 0D             2184 		LD	A, function
040F0F 49 CF             2184 		RST.LIS	08h
040F11                   2185 
040F11                   2186 	; store frames count in the file
040F11 21 C2 13 04       2187 	ld hl,frames_count
040F15 46                2188 	ld b,(hl)
040F16                   2189 	moscall mos_fputc
040F16 3E 0D             2189 		LD	A, function
040F18 49 CF             2189 		RST.LIS	08h
040F1A                   2190 
040F1A                   2191 	; store sprite size in the file
040F1A 21 EA 12 04       2192 	ld hl,spr_size
040F1E 46                2193 	ld b,(hl)
040F1F                   2194 	moscall mos_fputc
040F1F 3E 0D             2194 		LD	A, function
040F21 49 CF             2194 		RST.LIS	08h
040F23                   2195 
040F23                   2196 	; de = size²
040F23 68                2197 	ld l,b
040F24 60                2198 	ld h,b
040F25 ED 6C             2199 	mlt hl ; HL = sprite length
040F27 E5                2200 	push hl
040F28                   2201 
040F28                   2202 	; get frames count
040F28 21 C1 13 04       2203 	ld hl,current_frame
040F2C 46                2204 	ld b,(hl)
040F2D                   2205 
040F2D E1                2206 	pop hl
040F2E                   2207 
040F2E 78                2208 	ld a,b
040F2F FE 00             2209 	cp 0
040F31 28 07             2210 	jr z,ss_write_data
040F33                   2211 
040F33 11 00 04 00       2212 	ld de,ONE_FRAME_BUFFER_SIZE
040F37                   2213 ss_add_length:
040F37 19                2214 	add hl,de
040F38 10 FD             2215 	djnz ss_add_length
040F3A                   2216 
040F3A                   2217 ss_write_data:
040F3A E5                2218 	push hl
040F3B E5                2219 	push hl
040F3C D1                2220 	pop de
040F3D 21 CA 13 04       2221 	ld hl,sprite_buffer
040F41                   2222 	moscall mos_fwrite
040F41 3E 1B             2222 		LD	A, function
040F43 49 CF             2222 		RST.LIS	08h
040F45 E1                2223 	pop hl
040F46 7C                2224 	ld a,h
040F47 BA                2225 	cp d
040F48 20 08             2226 	jr nz,ss_close_error
040F4A 7D                2227 	ld a,l
040F4B BB                2228 	cp e
040F4C 20 04             2229 	jr nz,ss_close_error
040F4E C3 8A 0F 04       2230 	jp ss_close
040F52                   2231 
040F52                   2232 ss_close_error:
040F52 C5                2233 	push bc
040F53                   2234 
040F53                   2235 	; write error
040F53 CD 0D 11 04       2236 	call fn_print_file_error
040F57                   2237 
040F57 C1                2238 	pop bc
040F58                   2239 
040F58                   2240 	; close the file
040F58                   2241 	moscall mos_fclose
040F58 3E 0B             2241 		LD	A, function
040F5A 49 CF             2241 		RST.LIS	08h
040F5C                   2242 
040F5C                   2243 	; set path to home
040F5C 21 76 13 04       2244 	ld hl,back_path
040F60                   2245 	moscall mos_cd
040F60 3E 03             2245 		LD	A, function
040F62 49 CF             2245 		RST.LIS	08h
040F64                   2246 
040F64                   2247 	; exit on error
040F64 FE 00             2248 	cp 0
040F66 C2 82 0F 04       2249 	jp nz,ss_folder_error
040F6A                   2250 
040F6A                   2251 	; reset current frame and coordinates of the drawing pixel
040F6A 21 C2 13 04       2252 	ld hl,frames_count
040F6E 7E                2253 	ld a,(hl)
040F6F 3D                2254 	dec a
040F70 21 C1 13 04       2255 	ld hl,current_frame
040F74 77                2256 	ld (hl),a
040F75 21 E7 12 04       2257 	ld hl,xpix
040F79 AF                2258 	xor a
040F7A 77                2259 	ld (hl),a
040F7B 21 E8 12 04       2260 	ld hl,ypix
040F7F 77                2261 	ld (hl),a
040F80 18 30             2262 	jr ss_exit
040F82                   2263 
040F82                   2264 ss_folder_error:
040F82                   2265 	; write error
040F82 CD 44 11 04       2266 	call fn_print_folder_error
040F86 C3 B2 0F 04       2267 	jp ss_exit
040F8A                   2268 
040F8A                   2269 ss_close:
040F8A                   2270 	; close the file
040F8A                   2271 	moscall mos_fclose
040F8A 3E 0B             2271 		LD	A, function
040F8C 49 CF             2271 		RST.LIS	08h
040F8E                   2272 
040F8E                   2273 	; set path to home
040F8E 21 76 13 04       2274 	ld hl,back_path
040F92                   2275 	moscall mos_cd
040F92 3E 03             2275 		LD	A, function
040F94 49 CF             2275 		RST.LIS	08h
040F96                   2276 
040F96                   2277 	; exit on error
040F96 FE 00             2278 	cp 0
040F98 C2 82 0F 04       2279 	jp nz,ss_folder_error
040F9C                   2280 
040F9C                   2281 	; reset current frame and coordinates of the drawing pixel
040F9C 21 C2 13 04       2282 	ld hl,frames_count
040FA0 7E                2283 	ld a,(hl)
040FA1 3D                2284 	dec a
040FA2 21 C1 13 04       2285 	ld hl,current_frame
040FA6 77                2286 	ld (hl),a
040FA7 21 E7 12 04       2287 	ld hl,xpix
040FAB AF                2288 	xor a
040FAC 77                2289 	ld (hl),a
040FAD 21 E8 12 04       2290 	ld hl,ypix
040FB1 77                2291 	ld (hl),a
040FB2                   2292 
040FB2                   2293 ss_exit:
040FB2 C9                2294 	ret
040FB3                   2295 
040FB3                   2296 ss_file_error:
040FB3 CD 0D 11 04       2297 	call fn_print_file_error
040FB7                   2298 
040FB7                   2299 	; set path to home
040FB7 21 76 13 04       2300 	ld hl,back_path
040FBB                   2301 	moscall mos_cd
040FBB 3E 03             2301 		LD	A, function
040FBD 49 CF             2301 		RST.LIS	08h
040FBF                   2302 
040FBF                   2303 	; exit on error
040FBF FE 00             2304 	cp 0
040FC1 C2 82 0F 04       2305 	jp nz,ss_folder_error
040FC5 C9                2306 	ret
040FC6                   2307 
040FC6                   2308 ; export sprite data in assembly language, giving its name
040FC6                   2309 fn_export_sprite:
040FC6                   2310 	; clear filename
040FC6 21 61 13 04       2311 	ld hl,filename
040FCA 06 0C             2312 	ld b,12
040FCC AF                2313 	xor a
040FCD                   2314 
040FCD                   2315 es_clear_filename:
040FCD 77                2316 	ld (hl),a
040FCE 23                2317 	inc hl
040FCF 10 FC             2318 	djnz es_clear_filename
040FD1                   2319 
040FD1                   2320 	; get filename
040FD1 CD A5 0C 04       2321 	call fn_input_text8
040FD5                   2322 
040FD5                   2323 	; set path to sprite path
040FD5 21 6E 13 04       2324 	ld hl,sprite_path
040FD9                   2325 	moscall mos_cd
040FD9 3E 03             2325 		LD	A, function
040FDB 49 CF             2325 		RST.LIS	08h
040FDD                   2326 
040FDD                   2327 	; create it on error
040FDD FE 00             2328 	cp 0
040FDF F5                2329 	push af
040FE0 C4 BA 12 04       2330 	call nz,fn_create_sprite_folder
040FE4 F1                2331 	pop af
040FE5 28 0E             2332 	jr z,es_next
040FE7                   2333 
040FE7                   2334 	; set path to sprite path
040FE7 21 6E 13 04       2335 	ld hl,sprite_path
040FEB                   2336 	moscall mos_cd
040FEB 3E 03             2336 		LD	A, function
040FED 49 CF             2336 		RST.LIS	08h
040FEF                   2337 
040FEF                   2338 	; exit on error
040FEF FE 00             2339 	cp 0
040FF1 C2 F1 10 04       2340 	jp nz,es_folder_error
040FF5                   2341 
040FF5                   2342 es_next:
040FF5                   2343 	; open the file for write
040FF5 21 61 13 04       2344 	ld hl,filename
040FF9 0E 0A             2345 	ld c,fa_create_always|fa_write
040FFB                   2346 	moscall mos_fopen
040FFB 3E 0A             2346 		LD	A, function
040FFD 49 CF             2346 		RST.LIS	08h
040FFF                   2347 
040FFF                   2348 	; exit on error
040FFF FE 00             2349 	cp 0
041001 CA FA 10 04       2350 	jp z,es_file_error
041005                   2351 
041005                   2352 	; filehandle -> C
041005 4F                2353 	ld c,a
041006                   2354 
041006                   2355 
041006                   2356 	; L = first frame
041006 3E 00             2357 	ld a,0
041008 21 CA 13 04       2358 	ld hl,sprite_buffer
04100C 11 00 00 00       2359 	ld de,$000000
041010                   2360 
041010                   2361 es_frames_repeat:
041010 F5                2362 	push af
041011 E5                2363 	push hl
041012                   2364 
041012 F5                2365 	push af
041013                   2366 
041013                   2367 	; start to write...
041013 1E 00             2368 	ld e,0 ; rows
041015                   2369 
041015 06 3B             2370 	ld b,';'
041017                   2371 	moscall mos_fputc
041017 3E 0D             2371 		LD	A, function
041019 49 CF             2371 		RST.LIS	08h
04101B                   2372 
04101B 06 20             2373 	ld b,' '
04101D                   2374 	moscall mos_fputc
04101D 3E 0D             2374 		LD	A, function
04101F 49 CF             2374 		RST.LIS	08h
041021                   2375 
041021 06 46             2376 	ld b,'F'
041023                   2377 	moscall mos_fputc
041023 3E 0D             2377 		LD	A, function
041025 49 CF             2377 		RST.LIS	08h
041027                   2378 
041027 06 72             2379 	ld b,'r'
041029                   2380 	moscall mos_fputc
041029 3E 0D             2380 		LD	A, function
04102B 49 CF             2380 		RST.LIS	08h
04102D                   2381 
04102D 06 6D             2382 	ld b,'m'
04102F                   2383 	moscall mos_fputc
04102F 3E 0D             2383 		LD	A, function
041031 49 CF             2383 		RST.LIS	08h
041033                   2384 
041033 06 20             2385 	ld b,' '
041035                   2386 	moscall mos_fputc
041035 3E 0D             2386 		LD	A, function
041037 49 CF             2386 		RST.LIS	08h
041039                   2387 
041039 F1                2388 	pop af
04103A C6 30             2389 	add a,'0'
04103C 47                2390 	ld b,a
04103D                   2391 	moscall mos_fputc
04103D 3E 0D             2391 		LD	A, function
04103F 49 CF             2391 		RST.LIS	08h
041041                   2392 
041041 06 0D             2393 	ld b,13
041043                   2394 	moscall mos_fputc
041043 3E 0D             2394 		LD	A, function
041045 49 CF             2394 		RST.LIS	08h
041047                   2395 
041047 06 0A             2396 	ld b,10
041049                   2397 	moscall mos_fputc
041049 3E 0D             2397 		LD	A, function
04104B 49 CF             2397 		RST.LIS	08h
04104D                   2398 
04104D                   2399 es_repeat:
04104D                   2400 
04104D 06 44             2401 	ld b,'D'
04104F                   2402 	moscall mos_fputc
04104F 3E 0D             2402 		LD	A, function
041051 49 CF             2402 		RST.LIS	08h
041053                   2403 
041053 06 42             2404 	ld b,'B'
041055                   2405 	moscall mos_fputc
041055 3E 0D             2405 		LD	A, function
041057 49 CF             2405 		RST.LIS	08h
041059                   2406 
041059 06 20             2407 	ld b,' '
04105B                   2408 	moscall mos_fputc
04105B 3E 0D             2408 		LD	A, function
04105D 49 CF             2408 		RST.LIS	08h
04105F                   2409 
04105F 16 00             2410 	ld d,0 ; columns
041061                   2411 
041061                   2412 es_repeat_line:
041061 D5                2413 	push de
041062                   2414 
041062 7E                2415 	ld a,(hl)
041063 23                2416 	inc hl
041064                   2417 
041064                   2418 	; convert A to BCD
041064 CD CA 12 04       2419 	call fn_hex2bcd
041068                   2420 
041068                   2421 	; write two numbers (chars)
041068 5F                2422 	ld e,a
041069 E6 F0             2423 	and $f0
04106B 0F                2424 	rrca
04106C 0F                2425 	rrca
04106D 0F                2426 	rrca
04106E 0F                2427 	rrca
04106F C6 30             2428 	add '0'
041071                   2429 
041071 47                2430 	ld b,a
041072                   2431 	moscall mos_fputc
041072 3E 0D             2431 		LD	A, function
041074 49 CF             2431 		RST.LIS	08h
041076                   2432 
041076 7B                2433 	ld a,e
041077 E6 0F             2434 	and $0f
041079 C6 30             2435 	add '0'
04107B                   2436 
04107B 47                2437 	ld b,a
04107C                   2438 	moscall mos_fputc
04107C 3E 0D             2438 		LD	A, function
04107E 49 CF             2438 		RST.LIS	08h
041080                   2439 
041080 D1                2440 	pop de
041081 14                2441 	inc d
041082 3A EA 12 04       2442 	ld a,(spr_size)
041086 BA                2443 	cp d
041087 F5                2444 	push af
041088 C4 C3 12 04       2445 	call nz,fn_comma
04108C F1                2446 	pop af
04108D C2 61 10 04       2447 	jp nz,es_repeat_line
041091                   2448 
041091 06 0D             2449 	ld b,13 ; CR
041093                   2450 	moscall mos_fputc
041093 3E 0D             2450 		LD	A, function
041095 49 CF             2450 		RST.LIS	08h
041097                   2451 
041097 06 0A             2452 	ld b,10 ; LF
041099                   2453 	moscall mos_fputc
041099 3E 0D             2453 		LD	A, function
04109B 49 CF             2453 		RST.LIS	08h
04109D                   2454 
04109D 1C                2455 	inc e
04109E 3A EA 12 04       2456 	ld a,(spr_size)
0410A2 BB                2457 	cp e
0410A3 C2 4D 10 04       2458 	jp nz,es_repeat
0410A7                   2459 
0410A7 06 0D             2460 	ld b,13 ; CR
0410A9                   2461 	moscall mos_fputc
0410A9 3E 0D             2461 		LD	A, function
0410AB 49 CF             2461 		RST.LIS	08h
0410AD                   2462 
0410AD 06 0A             2463 	ld b,10 ; LF
0410AF                   2464 	moscall mos_fputc
0410AF 3E 0D             2464 		LD	A, function
0410B1 49 CF             2464 		RST.LIS	08h
0410B3                   2465 
0410B3 E1                2466 	pop hl
0410B4 D5                2467 	push de
0410B5 ED 5C             2468 	mlt de
0410B7 19                2469 	add hl,de
0410B8 D1                2470 	pop de
0410B9 F1                2471 	pop af
0410BA 3C                2472 	inc a
0410BB DD 21 C2 13 04    2473 	ld ix,frames_count
0410C0 DD BE 00          2474 	cp (ix+0)
0410C3 C2 10 10 04       2475 	jp nz,es_frames_repeat
0410C7                   2476 
0410C7                   2477 	; close the file
0410C7                   2478 	moscall mos_fclose
0410C7 3E 0B             2478 		LD	A, function
0410C9 49 CF             2478 		RST.LIS	08h
0410CB                   2479 
0410CB                   2480 	; set path to home
0410CB 21 76 13 04       2481 	ld hl,back_path
0410CF                   2482 	moscall mos_cd
0410CF 3E 03             2482 		LD	A, function
0410D1 49 CF             2482 		RST.LIS	08h
0410D3                   2483 
0410D3                   2484 	; exit on error
0410D3 FE 00             2485 	cp 0
0410D5 C2 F1 10 04       2486 	jp nz,es_folder_error
0410D9                   2487 
0410D9                   2488 	; reset current frame and coordinates of the drawing pixel
0410D9 21 C2 13 04       2489 	ld hl,frames_count
0410DD 7E                2490 	ld a,(hl)
0410DE 3D                2491 	dec a
0410DF 21 C1 13 04       2492 	ld hl,current_frame
0410E3 77                2493 	ld (hl),a
0410E4 21 E7 12 04       2494 	ld hl,xpix
0410E8 AF                2495 	xor a
0410E9 77                2496 	ld (hl),a
0410EA 21 E8 12 04       2497 	ld hl,ypix
0410EE 77                2498 	ld (hl),a
0410EF 18 08             2499 	jr es_exit
0410F1                   2500 
0410F1                   2501 es_folder_error:
0410F1                   2502 	; write error
0410F1 CD 44 11 04       2503 	call fn_print_folder_error
0410F5 C3 F9 10 04       2504 	jp es_exit
0410F9                   2505 
0410F9                   2506 es_exit:
0410F9 C9                2507 	ret
0410FA                   2508 
0410FA                   2509 es_file_error:
0410FA CD 0D 11 04       2510 	call fn_print_file_error
0410FE                   2511 
0410FE                   2512 	; set path to home
0410FE 21 76 13 04       2513 	ld hl,back_path
041102                   2514 	moscall mos_cd
041102 3E 03             2514 		LD	A, function
041104 49 CF             2514 		RST.LIS	08h
041106                   2515 
041106                   2516 	; exit on error
041106 FE 00             2517 	cp 0
041108 C2 F1 10 04       2518 	jp nz,es_folder_error
04110C C9                2519 	ret
04110D                   2520 
04110D                   2521 ; print 'file error'
04110D                   2522 fn_print_file_error:
04110D                   2523 	vdu 7
04110D 3E 07             2523 		LD	A, function
04110F 49 D7             2523 		RST.LIS	10h
041111                   2524 
041111                   2525 	; locate x,y
041111                   2526 	vdu 31
041111 3E 1F             2526 		LD	A, function
041113 49 D7             2526 		RST.LIS	10h
041115                   2527 	vdu FILENAME_X
041115 3E 07             2527 		LD	A, function
041117 49 D7             2527 		RST.LIS	10h
041119                   2528 	vdu FILENAME_Y
041119 3E 18             2528 		LD	A, function
04111B 49 D7             2528 		RST.LIS	10h
04111D                   2529 
04111D                   2530 	; print text
04111D 21 92 13 04       2531 	ld hl,file_error
041121 01 00 00 00       2532 	ld bc,0
041125 AF                2533 	xor a
041126 49 DF             2534 	rst.lis $18
041128                   2535 
041128 CD 9E 0C 04       2536 	call fn_input_key
04112C                   2537 
04112C                   2538 	; locate x,y
04112C                   2539 	vdu 31
04112C 3E 1F             2539 		LD	A, function
04112E 49 D7             2539 		RST.LIS	10h
041130                   2540 	vdu FILENAME_X
041130 3E 07             2540 		LD	A, function
041132 49 D7             2540 		RST.LIS	10h
041134                   2541 	vdu FILENAME_Y
041134 3E 18             2541 		LD	A, function
041136 49 D7             2541 		RST.LIS	10h
041138                   2542 
041138                   2543 	; print text
041138 21 7B 13 04       2544 	ld hl,void_filename
04113C 01 00 00 00       2545 	ld bc,0
041140 AF                2546 	xor a
041141 49 DF             2547 	rst.lis $18
041143                   2548 
041143 C9                2549 	ret
041144                   2550 
041144                   2551 ; print 'folder error'
041144                   2552 fn_print_folder_error:
041144                   2553 	vdu 7
041144 3E 07             2553 		LD	A, function
041146 49 D7             2553 		RST.LIS	10h
041148                   2554 
041148                   2555 	; locate x,y
041148                   2556 	vdu 31
041148 3E 1F             2556 		LD	A, function
04114A 49 D7             2556 		RST.LIS	10h
04114C                   2557 	vdu FILENAME_X
04114C 3E 07             2557 		LD	A, function
04114E 49 D7             2557 		RST.LIS	10h
041150                   2558 	vdu FILENAME_Y
041150 3E 18             2558 		LD	A, function
041152 49 D7             2558 		RST.LIS	10h
041154                   2559 
041154                   2560 	; print text
041154 21 A9 13 04       2561 	ld hl,folder_error
041158 01 00 00 00       2562 	ld bc,0
04115C AF                2563 	xor a
04115D 49 DF             2564 	rst.lis $18
04115F                   2565 
04115F CD 9E 0C 04       2566 	call fn_input_key
041163                   2567 
041163                   2568 	; locate x,y
041163                   2569 	vdu 31
041163 3E 1F             2569 		LD	A, function
041165 49 D7             2569 		RST.LIS	10h
041167                   2570 	vdu FILENAME_X
041167 3E 07             2570 		LD	A, function
041169 49 D7             2570 		RST.LIS	10h
04116B                   2571 	vdu FILENAME_Y
04116B 3E 18             2571 		LD	A, function
04116D 49 D7             2571 		RST.LIS	10h
04116F                   2572 
04116F                   2573 	; print text
04116F 21 7B 13 04       2574 	ld hl,void_filename
041173 01 00 00 00       2575 	ld bc,0
041177 AF                2576 	xor a
041178 49 DF             2577 	rst.lis $18
04117A                   2578 
04117A C9                2579 	ret
04117B                   2580 
04117B                   2581 ; refresh all the current sprite frame
04117B                   2582 fn_refresh_sprite:
04117B 06 00             2583 	ld b,0 ; B -> x cordinate
04117D 0E 00             2584 	ld c,0 ; C -> y cordinate
04117F                   2585 
04117F                   2586 rs_loop:
04117F C5                2587 	push bc
041180                   2588 
041180 21 E7 12 04       2589 	ld hl,xpix
041184 70                2590 	ld (hl),b
041185 21 E8 12 04       2591 	ld hl,ypix
041189 71                2592 	ld (hl),c
04118A CD 30 0B 04       2593 	call fn_draw_pixel_without_border
04118E                   2594 
04118E C1                2595 	pop bc
04118F                   2596 
04118F 04                2597 	inc b
041190 21 EA 12 04       2598 	ld hl,spr_size
041194 7E                2599 	ld a,(hl)
041195 B8                2600 	cp b
041196 28 04             2601 	jr z,rs_next_line
041198 C3 7F 11 04       2602 	jp rs_loop
04119C                   2603 
04119C                   2604 rs_next_line:
04119C 06 00             2605 	ld b,0
04119E 0C                2606 	inc c
04119F 21 EA 12 04       2607 	ld hl,spr_size
0411A3 7E                2608 	ld a,(hl)
0411A4 B9                2609 	cp c
0411A5 28 04             2610 	jr z,rs_end
0411A7 C3 7F 11 04       2611 	jp rs_loop
0411AB                   2612 
0411AB                   2613 rs_end:
0411AB AF                2614 	xor a
0411AC 21 E7 12 04       2615 	ld hl,xpix
0411B0 77                2616 	ld (hl),a
0411B1 21 E8 12 04       2617 	ld hl,ypix
0411B5 77                2618 	ld (hl),a
0411B6 CD 1C 0B 04       2619 	call fn_draw_pixel_with_border
0411BA                   2620 
0411BA C9                2621 	ret
0411BB                   2622 
0411BB                   2623 fn_change_frame:
0411BB 21 C1 13 04       2624 	ld hl,current_frame
0411BF 7E                2625 	ld a,(hl)
0411C0 3C                2626 	inc a
0411C1 C6 30             2627 	add a,48
0411C3 21 C3 13 04       2628 	ld hl,current_frame_ascii
0411C7 77                2629 	ld (hl),a
0411C8                   2630 
0411C8                   2631 	; locate 21,3
0411C8                   2632 	vdu 31
0411C8 3E 1F             2632 		LD	A, function
0411CA 49 D7             2632 		RST.LIS	10h
0411CC                   2633 	vdu 21
0411CC 3E 15             2633 		LD	A, function
0411CE 49 D7             2633 		RST.LIS	10h
0411D0                   2634 	vdu 3
0411D0 3E 03             2634 		LD	A, function
0411D2 49 D7             2634 		RST.LIS	10h
0411D4                   2635 
0411D4                   2636 	; print text
0411D4 21 C3 13 04       2637 	ld hl,current_frame_ascii
0411D8 01 00 00 00       2638 	ld bc,0
0411DC AF                2639 	xor a
0411DD 49 DF             2640 	rst.lis $18
0411DF                   2641 
0411DF C9                2642 	ret
0411E0                   2643 
0411E0                   2644 fn_change_frames_count:
0411E0 21 C2 13 04       2645 	ld hl,frames_count
0411E4 7E                2646 	ld a,(hl)
0411E5 C6 30             2647 	add a,48
0411E7 21 C5 13 04       2648 	ld hl,frames_count_ascii
0411EB 77                2649 	ld (hl),a
0411EC                   2650 
0411EC                   2651 	; locate 23,3
0411EC                   2652 	vdu 31
0411EC 3E 1F             2652 		LD	A, function
0411EE 49 D7             2652 		RST.LIS	10h
0411F0                   2653 	vdu 23
0411F0 3E 17             2653 		LD	A, function
0411F2 49 D7             2653 		RST.LIS	10h
0411F4                   2654 	vdu 3
0411F4 3E 03             2654 		LD	A, function
0411F6 49 D7             2654 		RST.LIS	10h
0411F8                   2655 
0411F8                   2656 	; print text
0411F8 21 C5 13 04       2657 	ld hl,frames_count_ascii
0411FC 01 00 00 00       2658 	ld bc,0
041200 AF                2659 	xor a
041201 49 DF             2660 	rst.lis $18
041203                   2661 
041203 C9                2662 	ret
041204                   2663 
041204                   2664 ; slowdown (wait delay)
041204                   2665 fn_slowdown:
041204 DD 21 C7 13 04    2666 	ld ix,keydata
041209 DD 7E 02          2667 	ld a,(ix+2)
04120C E6 02             2668 	and 2
04120E FE 02             2669 	cp 2 ; shift key to disable delay
041210 C8                2670 	ret z
041211                   2671 
041211                   2672 	moscall mos_sysvars
041211 3E 08             2672 		LD	A, function
041213 49 CF             2672 		RST.LIS	08h
041215 DD 4E 00          2673 	ld c,(ix+sysvar_time)
041218                   2674 
041218                   2675 sd_loop:
041218                   2676 	moscall mos_sysvars
041218 3E 08             2676 		LD	A, function
04121A 49 CF             2676 		RST.LIS	08h
04121C DD 7E 00          2677 	ld a,(ix+sysvar_time)
04121F 91                2678 	sub c
041220 FE 14             2679 	cp SLOWDOWN_DELAY
041222 20 F4             2680 	jr nz,sd_loop
041224 C9                2681 	ret
041225                   2682 
041225                   2683 fn_show_spr_descr:
041225                   2684 	; locate 15,3
041225                   2685 	vdu 31
041225 3E 1F             2685 		LD	A, function
041227 49 D7             2685 		RST.LIS	10h
041229                   2686 	vdu 15
041229 3E 0F             2686 		LD	A, function
04122B 49 D7             2686 		RST.LIS	10h
04122D                   2687 	vdu 3
04122D 3E 03             2687 		LD	A, function
04122F 49 D7             2687 		RST.LIS	10h
041231                   2688 
041231                   2689 	; print text
041231 21 35 13 04       2690 	ld hl,spr_descr
041235 01 00 00 00       2691 	ld bc,0
041239 AF                2692 	xor a
04123A 49 DF             2693 	rst.lis $18
04123C                   2694 
04123C                   2695 	; locate 15,5
04123C                   2696 	vdu 31
04123C 3E 1F             2696 		LD	A, function
04123E 49 D7             2696 		RST.LIS	10h
041240                   2697 	vdu 15
041240 3E 0F             2697 		LD	A, function
041242 49 D7             2697 		RST.LIS	10h
041244                   2698 	vdu 5
041244 3E 05             2698 		LD	A, function
041246 49 D7             2698 		RST.LIS	10h
041248                   2699 
041248                   2700 	; check for sprite size...
041248 21 EA 12 04       2701 	ld hl,spr_size
04124C 7E                2702 	ld a,(hl)
04124D                   2703 
04124D FE 04             2704 	cp 4
04124F 20 0C             2705 	jr nz,ssd_8x8
041251                   2706 
041251                   2707 	; print text 4x4
041251 21 3F 13 04       2708 	ld hl,spr_descr1
041255 01 00 00 00       2709 	ld bc,0
041259 AF                2710 	xor a
04125A 49 DF             2711 	rst.lis $18
04125C C9                2712 	ret
04125D                   2713 
04125D                   2714 ssd_8x8:
04125D FE 08             2715 	cp 8
04125F 20 0C             2716 	jr nz,ssd_16x16
041261                   2717 
041261                   2718 	; print text 8x8
041261 21 45 13 04       2719 	ld hl,spr_descr2
041265 01 00 00 00       2720 	ld bc,0
041269 AF                2721 	xor a
04126A 49 DF             2722 	rst.lis $18
04126C C9                2723 	ret
04126D                   2724 
04126D                   2725 ssd_16x16:
04126D FE 10             2726 	cp 16
04126F 20 0C             2727 	jr nz,ssd_32x32
041271                   2728 
041271                   2729 	; print text 16x16
041271 21 4B 13 04       2730 	ld hl,spr_descr3
041275 01 00 00 00       2731 	ld bc,0
041279 AF                2732 	xor a
04127A 49 DF             2733 	rst.lis $18
04127C C9                2734 	ret
04127D                   2735 
04127D                   2736 ssd_32x32:
04127D                   2737 	; print text 32x32
04127D 21 51 13 04       2738 	ld hl,spr_descr4
041281 01 00 00 00       2739 	ld bc,0
041285 AF                2740 	xor a
041286 49 DF             2741 	rst.lis $18
041288                   2742 
041288 C9                2743 	ret
041289                   2744 
041289                   2745 ; input: HL = negative key to check
041289                   2746 fn_inkey:
041289                   2747 	moscall mos_getkbmap
041289 3E 1E             2747 		LD	A, function
04128B 49 CF             2747 		RST.LIS	08h
04128D 23                2748 	INC	HL
04128E 7D                2749 	LD	A, L
04128F ED 44             2750 	NEG
041291 4F                2751 	LD	C, A
041292 3E 01             2752 	LD	A, 1
041294 FA B8 12 04       2753 	JP	M,i_false ; < -128 ?
041298                   2754 
041298 21 45 00 04       2755 	LD	HL,BITLOOKUP
04129C 11 00 00 00       2756 	LD	DE,0
0412A0 79                2757 	LD	A,C
0412A1 E6 07             2758 	AND	00000111b
0412A3 5F                2759 	LD	E,A
0412A4 19                2760 	ADD	HL,DE
0412A5 46                2761 	LD	B,(HL)
0412A6                   2762 
0412A6 79                2763 	LD	A,C
0412A7 E6 78             2764 	AND	01111000b
0412A9 0F                2765 	RRCA
0412AA 0F                2766 	RRCA
0412AB 0F                2767 	RRCA
0412AC 5F                2768 	LD	E, A
0412AD DD 19             2769 	ADD	IX,DE
0412AF DD 7E 00          2770 	LD	A,(IX+0)
0412B2 A0                2771 	AND	B
0412B3 28 03             2772 	JR Z,i_false
0412B5 3E 01             2773 	LD A,1
0412B7 C9                2774 	RET
0412B8                   2775 i_false:
0412B8 AF                2776 	XOR A
0412B9 C9                2777 	RET
0412BA                   2778 
0412BA                   2779 fn_create_sprite_folder:
0412BA 21 6E 13 04       2780 	ld hl,sprite_path
0412BE                   2781 	moscall mos_mkdir
0412BE 3E 07             2781 		LD	A, function
0412C0 49 CF             2781 		RST.LIS	08h
0412C2 C9                2782 	ret
0412C3                   2783 
0412C3                   2784 fn_comma:
0412C3 06 2C             2785 	ld b,','
0412C5                   2786 	moscall mos_fputc
0412C5 3E 0D             2786 		LD	A, function
0412C7 49 CF             2786 		RST.LIS	08h
0412C9 C9                2787 	ret
0412CA                   2788 
0412CA                   2789 ; Hex to BCD
0412CA                   2790 ; converts a hex number (eg. $10) to its BCD representation (eg. $16).
0412CA                   2791 ; Input: a = hex number
0412CA                   2792 ; Output: a = BCD number
0412CA                   2793 ; Clobbers: b,c
0412CA                   2794 fn_hex2bcd:
0412CA C5                2795 		push bc
0412CB 4F                2796 		ld c,a  ; Original (hex) number
0412CC 06 08             2797 		ld b,8  ; How many bits
0412CE AF                2798 		xor a   ; Output (BCD) number, starts at 0
0412CF CB 21             2799 htb:	sla c   ; shift c into carry
0412D1 8F                2800 		adc a,a
0412D2 27                2801 		daa     ; Decimal adjust a, so shift = BCD x2 plus carry
0412D3 10 FA             2802 		djnz htb  ; Repeat for 8 bits
0412D5 C1                2803 		pop bc
0412D6 C9                2804 		ret
0412D7                   2805 
0412D7                   2806 ;======================================================================
0412D7                   2807 
0412D7                   2808 ; coordinates for rectangles
0412D7                   2809 x1:
0412D7 00 00             2810 	dw $0000
0412D9                   2811 y1:
0412D9 00 00             2812 	dw $0000
0412DB                   2813 x2:
0412DB 00 00             2814 	dw $0000
0412DD                   2815 y2:
0412DD 00 00             2816 	dw $0000
0412DF                   2817 
0412DF                   2818 ; coordinates of the edited sprite
0412DF                   2819 xs1:
0412DF 5F 00             2820 	dw 95
0412E1                   2821 ys1:
0412E1 37 00             2822 	dw 55
0412E3                   2823 xs2:
0412E3 E0 00             2824 	dw 224
0412E5                   2825 ys2:
0412E5 B8 00             2826 	dw 184
0412E7                   2827 
0412E7                   2828 ; coordinates of active pixels to draw
0412E7                   2829 xpix:
0412E7 00                2830 	db 0
0412E8                   2831 ypix:
0412E8 00                2832 	db 0
0412E9                   2833 
0412E9                   2834 ; width of a pixel in the sprite
0412E9                   2835 pixel_width:
0412E9 00                2836 	db 0
0412EA                   2837 
0412EA                   2838 ; sprite size, in resized pixels
0412EA                   2839 spr_size:
0412EA 00                2840 	db 0
0412EB                   2841 
0412EB                   2842 ; pen color (0-63)
0412EB                   2843 current_pen:
0412EB 00                2844 	db 0
0412EC                   2845 
0412EC                   2846 ; texts for 1st menu
0412EC                   2847 title:
0412EC 53 50 52 2D 45 44 2848 	db "SPR-EDIT",0
       49 54 00          
0412F5                   2849 
0412F5                   2850 menu1:
0412F5 46 31 2E 20 34 78 2851 	db "F1. 4x4 Sprite",0
       34 20 53 70 72 69 
       74 65 00          
041304                   2852 menu2:
041304 46 32 2E 20 38 78 2853 	db "F2. 8x8 Sprite",0
       38 20 53 70 72 69 
       74 65 00          
041313                   2854 menu3:
041313 46 33 2E 20 31 36 2855 	db "F3. 16x16 Sprite",0
       78 31 36 20 53 70 
       72 69 74 65 00    
041324                   2856 menu4:
041324 46 34 2E 20 33 32 2857 	db "F4. 32x32 Sprite",0
       78 33 32 20 53 70 
       72 69 74 65 00    
041335                   2858 
041335                   2859 ; descriptions of sprites
041335                   2860 spr_descr:
041335 46 72 61 6D 65 3A 2861 	db "Frame:1/1",0
       31 2F 31 00       
04133F                   2862 spr_descr1:
04133F 34 78 34 20 20 00 2863 	db "4x4  ",0
041345                   2864 spr_descr2:
041345 38 78 38 20 20 00 2865 	db "8x8  ",0
04134B                   2866 spr_descr3:
04134B 31 36 78 31 36 00 2867 	db "16x16",0
041351                   2868 spr_descr4:
041351 33 32 78 33 32 00 2869 	db "32x32",0
041357                   2870 
041357                   2871 ; label before filename
041357                   2872 filename_label:
041357 46 69 6C 65 6E 61 2873 	db "Filename:",0
       6D 65 3A 00       
041361                   2874 
041361                   2875 ; filename without extension
041361                   2876 filename:
041361 00 00 00 00 00 00 2877 	ds 13,0
       00 00 00 00 00 00 
       00                
04136E                   2878 
04136E                   2879 sprite_path:
04136E 73 70 72 69 74 65 2880 	db "sprites",0
       73 00             
041376                   2881 
041376                   2882 back_path:
041376 2E 2E 00          2883 	db "..",0
041379                   2884 
041379                   2885 ; single space char to print
041379                   2886 spacechar:
041379 20 00             2887 	db " ",0
04137B                   2888 
04137B                   2889 ; spaces to remove filename label
04137B                   2890 void_filename:
04137B 20 20 20 20 20 20 2891 	db "                      ",0
       20 20 20 20 20 20 
       20 20 20 20 20 20 
       20 20 20 20 00    
041392                   2892 
041392                   2893 ; file error message
041392                   2894 file_error:
041392 46 69 6C 65 20 65 2895 	db "File error !          ",0
       72 72 6F 72 20 21 
       20 20 20 20 20 20 
       20 20 20 20 00    
0413A9                   2896 
0413A9                   2897 ; folder error message
0413A9                   2898 folder_error:
0413A9 46 6F 6C 64 65 72 2899 	db "Folder error !        ",0
       20 65 72 72 6F 72 
       20 21 20 20 20 20 
       20 20 20 20 00    
0413C0                   2900 
0413C0                   2901 ; number of colors
0413C0                   2902 colors_count:
0413C0 00                2903 	db 0
0413C1                   2904 
0413C1                   2905 ; current frame
0413C1                   2906 current_frame:
0413C1 00                2907 	db 0
0413C2                   2908 
0413C2                   2909 ; frames count
0413C2                   2910 frames_count:
0413C2 00                2911 	db 0
0413C3                   2912 
0413C3                   2913 current_frame_ascii:
0413C3 30 00             2914 	db '0',0
0413C5                   2915 
0413C5                   2916 frames_count_ascii:
0413C5 30 00             2917 	db '0',0
0413C7                   2918 
0413C7                   2919 ; keycode, keydown & keymods are stored here
0413C7                   2920 keydata:
0413C7 00 00 00          2921 	db 0,0,0
0413CA                   2922 
0413CA                   2923 ; buffer for the current sprite
0413CA                   2924 sprite_buffer:
0413CA 00 00 00 00 00 00 2925 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
0413CA 00 00 00 00 00 00 2925 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
0413CA 00 00 00 00 00 00 2925 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
0413CA 00 00 00 00 00 00 2925 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
0413CA 00 00 00 00 00 00 2925 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
0413CA 00 00 00 00 00 00 2925 	ds BUFFER_SIZE,0
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00 00 00 00 00 
       00 00             
0433CA                   2926 
0433CA                   2927 asm_line:
0433CA 44 42 20          2928 	DB "DB "
0433CD                   2929 
0433CD                   2930 asm_line_length:
0433CD 03                2931 	DB 3
0433CE                   2932 
0433CE                   2933 rgb_palette:
0433CE 00 00 00          2934 	db $00,$00,$00
0433D1 AA 00 00          2935 	db $AA,$00,$00
0433D4 00 AA 00          2936 	db $00,$AA,$00
0433D7 AA AA 00          2937 	db $AA,$AA,$00
0433DA 00 00 AA          2938 	db $00,$00,$AA
0433DD AA 00 AA          2939 	db $AA,$00,$AA
0433E0 00 AA AA          2940 	db $00,$AA,$AA
0433E3 AA AA AA          2941 	db $AA,$AA,$AA
0433E6                   2942 
0433E6 55 55 55          2943 	db $55,$55,$55
0433E9 FF 00 00          2944 	db $FF,$00,$00
0433EC 00 FF 00          2945 	db $00,$FF,$00
0433EF FF FF 00          2946 	db $FF,$FF,$00
0433F2 00 00 FF          2947 	db $00,$00,$FF
0433F5 FF 00 FF          2948 	db $FF,$00,$FF
0433F8 00 FF FF          2949 	db $00,$FF,$FF
0433FB FF FF FF          2950 	db $FF,$FF,$FF
0433FE                   2951 
0433FE 00 00 55          2952 	db $00,$00,$55
043401 00 55 00          2953 	db $00,$55,$00
043404 00 55 55          2954 	db $00,$55,$55
043407 00 55 AA          2955 	db $00,$55,$AA
04340A 00 55 FF          2956 	db $00,$55,$FF
04340D 00 AA 55          2957 	db $00,$AA,$55
043410 00 AA FF          2958 	db $00,$AA,$FF
043413 00 FF 55          2959 	db $00,$FF,$55
043416                   2960 
043416 00 FF AA          2961 	db $00,$FF,$AA
043419 55 00 00          2962 	db $55,$00,$00
04341C 55 00 55          2963 	db $55,$00,$55
04341F 55 00 AA          2964 	db $55,$00,$AA
043422 55 00 FF          2965 	db $55,$00,$FF
043425 55 55 00          2966 	db $55,$55,$00
043428 55 55 AA          2967 	db $55,$55,$AA
04342B 55 55 FF          2968 	db $55,$55,$FF
04342E                   2969 
04342E 55 AA 00          2970 	db $55,$AA,$00
043431 55 AA 55          2971 	db $55,$AA,$55
043434 55 AA AA          2972 	db $55,$AA,$AA
043437 55 AA FF          2973 	db $55,$AA,$FF
04343A 55 FF 00          2974 	db $55,$FF,$00
04343D 55 FF 55          2975 	db $55,$FF,$55
043440 55 FF AA          2976 	db $55,$FF,$AA
043443 55 FF FF          2977 	db $55,$FF,$FF
043446                   2978 
043446 AA 00 55          2979 	db $AA,$00,$55
043449 AA 00 FF          2980 	db $AA,$00,$FF
04344C AA 55 00          2981 	db $AA,$55,$00
04344F AA 55 55          2982 	db $AA,$55,$55
043452 AA 55 AA          2983 	db $AA,$55,$AA
043455 AA 55 FF          2984 	db $AA,$55,$FF
043458 AA AA 55          2985 	db $AA,$AA,$55
04345B AA AA FF          2986 	db $AA,$AA,$FF
04345E                   2987 
04345E AA FF 00          2988 	db $AA,$FF,$00
043461 AA FF 55          2989 	db $AA,$FF,$55
043464 AA FF AA          2990 	db $AA,$FF,$AA
043467 AA FF FF          2991 	db $AA,$FF,$FF
04346A FF 00 55          2992 	db $FF,$00,$55
04346D FF 00 AA          2993 	db $FF,$00,$AA
043470 FF 55 00          2994 	db $FF,$55,$00
043473 FF 55 55          2995 	db $FF,$55,$55
043476                   2996 
043476 FF 55 AA          2997 	db $FF,$55,$AA
043479 FF 55 FF          2998 	db $FF,$55,$FF
04347C FF AA 00          2999 	db $FF,$AA,$00
04347F FF AA 55          3000 	db $FF,$AA,$55
043482 FF AA AA          3001 	db $FF,$AA,$AA
043485 FF AA FF          3002 	db $FF,$AA,$FF
043488 FF FF 55          3003 	db $FF,$FF,$55
04348B FF FF AA          3004 	db $FF,$FF,$AA
04348E                   3005 
04348E                   3006 ; sprite structure:
04348E                   3007 ; =================
04348E                   3008 ; colors_count  :   byte
04348E                   3009 ; frames count	:	byte
04348E                   3010 ; spr size		:	byte
04348E                   3011 ; data			:   width x height bytes of colors
04348E                   3012 
04348E                   3013 
04348E                   3014 ; TODO:
04348E                   3015 ;---------
04348E                   3016 ; add/remove frames must be done correctly
04348E                   3017 ; read animations with 'p' key
04348E                   3018 ; create a help text file with keyboard shorcuts list
04348E                   3019 ; solve the 'copy frame' bug
04348E                   3020 ; solve the bug of frames in fn_load/save sprite
